syntax = "proto3";
package service;


// 个人统计信息
message PNewsUserStatistic {
	int32 FollowCount = 2;       	// 关注用户总数
	int32 FansCount = 3;				// 粉丝用户总数
	int32 TxtPostCount = 4;			// 文字帖的个数
	int32 ImgPostCount = 5;			// 图片帖的个数
	int32 AudioPostCount = 6;		// 音频帖的个数
	int32 VideoPostCount = 7;		// 视频帖的个数
	int32 FollowShip = 8;			// 两用户间的关系、0:无关系，1,：是粉丝，2：已关注，3：相互关注
}

/**
 *@note 用户批量关注/取消关注
 *@path /v1/news/inside/multi/follow
 *@method GET
 *@param from 发起调用的服务方，必须在consul上注册
 *@param uuid 发起关注的用户id
 *@param oper 为1时表示添加关注，为0时表示取消关注
 *@param targetuuids 被关注的用户id列表，多个用户用,分割
 *@return 成功返回 PBoolList ，失败返回 PResult
 */

/**
 *@note 用户批量判断是否关注关系
 *@path /v1/news/inside/multi/follow/status
 *@method GET
 *@param from 发起调用的服务方，必须在consul上注册
 *@param uuid 发起关注的用户id
 *@param targetuuids 被关注的用户id列表，多个用户用,分割
 *@return 成功返回 PBoolList, true: 关注, false: 未关注。失败返回 PResult
 */

/**
 *@note 两个用户相互/取消关注
 *@path /v1/news/inside/followab
 *@method GET
 *@param from 发起调用的服务方，必须在consul上注册
 *@param uuida 用户a的id
 *@param uuidb 用户b的id
 *@param oper 为1时表示添加关注，为0时表示取消关注
 *@return 返回 PResult
 */

/**
 *@note 获取两个用户关注的状态以及粉丝数
 *@path /v1/news/inside/follow/relation
 *@method GET
 *@param from 发起调用的服务方，必须在consul上注册
 *@param uuida 用户a的id
 *@param uuidb 用户b的id
 *@return 成功返回 PRelation, 失败返回 PResult
 */

/**
 *@note 屏蔽帖子
 *@path /v1/news/inside/post/hide
 *@method GET
 *@param from 发起调用的服务方，必须在consul上注册
 *@param postid 帖子id
 *@param oper 0表示要屏蔽，1表示要解除屏蔽
 *@return 成功返回 PRelation ，失败返回 PResult
 */

/**
 *@note 根据过滤条件批量获取帖子
 *@path /v1/news/inside/multi/post
 *@method GET
 *@param from 发起调用的服务方，必须在consul上注册
 *@param postids 帖子id，多个帖子id用,分隔
 *@param type   帖子类型:all(全部)，text(文字)，image(图片)，audio(音频)，video(第三方视频)
 *@param sorttype 本参数在过滤条件“querytype”为1时才有效, 表示排序方式, 取值: 0:时间正序、1:按评论数排序、2:按点赞数排序
 *@param timestart 本参数在过滤条件“querytype”为1时才有效, 表示查询时间点之后的帖子, 0表示查所有的帖子.取值为int64的Unix时间戳
 *@param poststatus 本参数在过滤条件“querytype”为1时才有效, 取值范围: hide:被屏蔽的帖子; del:被删除的帖子,如果不指定则查询正常的帖子
 *@param offset  分页查询的偏移,为已返回的微博帖子的个数, 如果没有,默认为0
 *@param count  分页查询返回的最大条数,如果没有,默认为10
 *@return 成功返回 PPostInfoList ，失败返回 PResult
 */

/**
 *@note 批量判断某个帖子是否存在
 *@path /v1/news/inside/multi/post/exist
 *@method GET
 *@param from 发起调用的服务方，必须在consul上注册
 *@param postids 帖子id，多个帖子id用,分隔
 *@return 成功返回 PBoolList ，失败返回 PResult
 */

/**
 *@note   获取粉丝列表
 *@path   /v1/news/inside/fans
 *@method GET
 *@param from 发起调用的服务方，必须在consul上注册
 *@param  uuid 被查找的用户uuid
 *@param  count 单次返回的记录条数，默认为20，最大不超过100
 *@param  offset 下次查询的起点，默认为0。
 *@return 成功返回 PStringList ，失败返回 PResult
 */

/**
 *@note 获取用户微博统计数据
 *@path   /v1/news/inside/statistic
 *@method GET
 *@param from 发起调用的服务方，必须在consul上注册
 *@param  uuid 发起查找用户的uuid，如果没有，不用填改字段
 *@param  targetuuid 被查找的用户uuid
 *@return 成功返回 PNewsUserStatistic ，失败返回 PResult
 */

/**
 *@note   内部发布微博
 *@path   /v1/news/inside/post
 *@param  uuid   作为微博发布者的用户id
 *@method POST
 *@param from 发起调用的服务方，必须在consul上注册
 *@body   PArticle数据流images.url/video.url/audio.url 这些个url传的是pupload的objectKey
 *@return 返回 PResult
 */

 /**
 *@note   根据Id获取主题信息
 *@path   /v1/news/inside/follow/subject
 *@method GET
 *@param from 发起调用的服务方，必须在consul上注册
 *@param  uuid   用户Id
 *@param  subjectids  主题ID,多个Id以,分开
 *@return 返回 PSubjectList,失败返回 PResult
 */

 /*
 *@note 任务消息订阅
 *@path /v1/news/inside/task/msg/subscribe
 *@method POST
 *@param from 发起调用的服务方，必须在consul上注册
 *@param PSubscribeArray 订阅消息
 *@return 返回PResult
 */

/**
*@note   内部获取关注列表
*@path   /v1/news/inside/follow
*@method GET
*@param from 发起调用的服务方，必须在consul上注册
*@param uuida 查找的用户uuid
*@param  uuidb 被查找的用户uuid
*@param  count 单次返回的记录条数，默认为20，最大不超过100。
*@param  offset 下次查询的起点，为上一次结果中的PFollowOrFansList.Index. 默认为0。
*@return 成功返回 PFollowOrFansList ，失败返回 PResult
*/

/**
 *@note 批量判断某个帖子状态
 *@path /v1/news/inside/multi/post/status
 *@method GET
 *@param from 发起调用的服务方，必须在consul上注册
 *@param postids 帖子id，多个帖子id用,分隔
 *@return 成功返回 PInt32List, 0:正常, 1:不存在, 2:已删除, 3:已屏蔽。失败返回 PResult
 */

 /**
 *@note   获取微博帖子作者uuid
 *@path   /v1/news/inside/post/author
 *@method GET
  *@param from 发起调用的服务方，必须在consul上注册
 *@param  postid   微博帖子ID
 *@return 成功返回 PStringSingle ，失败返回 PResult
 */