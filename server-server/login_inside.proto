syntax = "proto3";
package bbproto;
option java_package = "com.blemobi.sep.probuf";
option java_outer_classname = "LoginApiProtos";

import "common_inside.proto";
import "login.proto";
import "result.proto";

// token信息
message PToken {
	int32 Ver = 2;				// token对应版本号
	int64 Time = 3; 			// token产生时间
	int64 SubSalt = 4;			// 随机的int64
	string Ostp = 5;			// token对应的客户端类型；m为移动设备，w为pc端
	string MD5  = 6;   	 		// uuid与字符串运算生成的md5值
    int32 LoginTP = 7;          // 用户原始登录的类型；Ostp为m时才有意义(1 微信,2 微博,3 facebook,4 google)
    bool ForceBindPhone = 8;    // 如果标志位为true，则用户需要绑定手机号码方能继续操作
}

// 用户已绑定的登录方式信息
message PLoignBindInfo {
    string UserName = 1;        // 用户名，没有则为空
    string PhoneCode = 2;       // 手机号码，没有则为空
    bool WeiXin = 3;            // 是否已绑定微信，绑定为true，未绑定为false
    bool WeiBo = 4;             // 是否已绑定微博，绑定为true，未绑定为false
    bool Facebook = 5;          // 是否已绑定脸书，绑定为true，未绑定为false
    bool Google = 6;            // 是否已绑定谷歌，绑定为true，未绑定为false
}

message PLoignBindInfoList {
    repeated PLoignBindInfo List = 1;   
}

/*
 *@note 用户登出接口
 *@path /v1/login/inside/logout
 *@method POST
 *@url param from 发起调用的服务名
 *@body PStringList
 *@return 成功返回 PInt32List ，失败返回 PResult
 */

/*
 *@note 获取用户token
 *@path /v1/login/inside/token
 *@method GET
 *@url param from 发起调用的服务名
 *@url param uuid 用户的uuid
 *@return 成功返回 PStringSingle ，失败返回 PResult
 */
 
/*
 *@note 通过手机号码/用户名获取用户uuid
 *@URL /v1/login/inside/uuid
 *@method POST
 *@post form param from 发起调用的服务名
 *@post form param type 手机号码填phone，用户名填username
 *@post form param fields 手机号码/用户名，以,分割
 *@return 成功返回 PStringList ，失败返回 PResult;
 *@       返回的uuid顺序与fields顺序一致，如果fields对应的用户没有查询到，PStringList对应项为空串
 */

/*
 *@note 通过用户uuid获取用户名/手机号码
 *@URL /v1/login/inside/binding/pid
 *@method POST
 *@post form param from 发起调用的服务名
 *@post form param type 手机号码填phone，用户名填username
 *@post form param fields 用户uuid，以,分割
 *@return 成功返回 PStringList ，失败返回 PResult;
 *@       返回的pid顺序与fields顺序一致，如果fields对应的用户没有查询到，PStringList对应项为空串
 */

/*
 *@note 绑定用户名
 *@path /v1/login/inside/binding/username
 *@method POST
 *@form param from 发起调用的服务名
 *@form param uuid 用户的id
 *@form param username 用户名
 *@form param password 密码， SHA256(原始密码+3721) 
 *@return 返回 PResult
 */

/*
 *@note 用户名注册
 *@path /v1/login/inside/account
 *@method POST
 *@form param from 发起调用的服务名
 *@form param password 密码， SHA256(原始密码+3721) 
 *@form param username 用户名称，不能为空
 *@return 注册成功返回 PLogin ，失败返回 PResult
 */

/*
 *@note 修改用户密码
 *@path /v1/login/inside/account/password
 *@method PUT
 *@form param from 发起调用的服务名
 *@form param password 密码， SHA256(原始密码+3721) 
 *@form param uuid 用户id
 *@return 返回 PResult
 */



service IGrpcLogin {
    /*
     *@note 用户登出接口
     *@param 要登出用户的uuid列表 
     *@return 成功返回 PInt32List ，失败返回 PResult
     */
    rpc UserLogout(PStringList) returns (PInt32List);
 
    /*
     *@note 获取用户token列表;只限edge服务调用
     *@param 参数数组 [0]m表示移动端，w表示网页端 [1]...uuid列表
     *@return 成功返回 PStringList ，失败返回 PResult
     */
    rpc GetToken(PStringList) returns (PStringList);

    /*
     *@note 判断用户的token是否存在
     *@param 参数数组 [0]m表示移动端，w表示网页端 [1]...uuid列表
     *@return 成功返回 PBoolList ，失败返回 PResult;
     */
    rpc TokenExist(PStringList) returns (PBoolList);

    /*
     *@note 通过手机号码获取用户uuid
     *@param 要获取uuid的手机号码列表
     *@return 成功返回 PStringList ，失败返回 PResult;
     *@       返回的uuid顺序与fields顺序一致，如果fields对应的用户没有查询到，PStringList对应项为空串
     */
    rpc GetUUIDByPhoneCode(PStringList) returns (PStringList);

    /*
     *@note 通过用户名获取用户uuid
     *@param 要获取uuid的用户名列表
     *@return 成功返回 PStringList ，失败返回 PResult;
     *@       返回的uuid顺序与fields顺序一致，如果fields对应的用户没有查询到，PStringList对应项为空串
     */
    rpc GetUUIDByUsername(PStringList) returns (PStringList);

    /*
     *@note 通过用户uuid获取手机号码
     *@param 用户uuid 列表
     *@return 成功返回 PStringList ，失败返回 PResult;
     *@       返回的pid顺序与fields顺序一致，如果fields对应的用户没有查询到，PStringList对应项为空串
     */
    rpc GetPhoneCodeByUUID(PStringList) returns (PStringList);

    /*
     *@note 通过用户uuid获取用户名
     *@param 用户uuid 列表
     *@return 成功返回 PStringList ，失败返回 PResult;
     *@       返回的pid顺序与fields顺序一致，如果fields对应的用户没有查询到，PStringList对应项为空串
     */
    rpc GetUsernameByUUID(PStringList) returns (PStringList);

    /*
     *@note 绑定用户名
     *@param 参数数组 [0]uuid  [1]用户名 [2]密码,SHA256(原始密码+3721) 
     *@return 返回 PResult
     */
    rpc BindUsername(PStringList) returns (PEmpty);

    /*
     *@note 用户名注册
     *@param 参数数组 [0]用户名 [1]密码,SHA256(原始密码+3721) 
     *@return 注册成功返回 PLogin ，失败返回 PResult
     */
    rpc RegisterByUsername(PStringList) returns (PLogin);

    /*
     *@note 重置用户密码
     *@param 参数数组 [0]uuid [1]密码,SHA256(原始密码+3721) 
     *@return 返回 PResult
     */
    rpc ResetPassword(PStringList) returns (PEmpty);

    /*
     *@note 设置用户可以不绑定手机号码即可登录
     *@param 用户uuid 列表
     *@return 返回 PResult
     */
    rpc ResetForceBindPhoneCode(PStringList) returns (PEmpty);

    /*
     *@note设置用户必须绑定手机号码才能登录
     *@param 用户uuid 列表
     *@return 返回 PResult
     */
    rpc SetForceBindPhoneCode(PStringList) returns (PEmpty);

    /*
     *@note 批量获取用户登录方式绑定的情况
     *@param 用户uuid 列表
     *@return 返回 PLoignBindInfoList
     */
    rpc GetBindInfoList(PStringList) returns (PLoignBindInfoList);
 }
