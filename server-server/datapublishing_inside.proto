syntax = "proto3";
package bbproto; 

import "datapublishing.proto";
import "result.proto";
import "account.proto";
import "news.proto";
import "common_inside.proto";

option java_package = "com.blemobi.sep.probuf";
option java_outer_classname = "DatapublishingApiProtos";

// 每天的平均在线时间
message POnlineData {
	int64 date = 1;
	int32 value = 2;
}

message POnlineDataArray {
	repeated POnlineData array = 1;
}

/*
 *@note 批量获取最后心跳时间
 *@path /datapublishing/inside/heartbeat/last
 *@method GET
 *@param from 服务名，用于校验内网调用
 *@param uuids 用逗号分隔的一众uuid
 *@return 成功返回PInt64List，失败返回PResult
 */


message PQueryUserParam {
	string uuid = 1;
	string keyword = 2;
	int32 offset = 3;
	int32 size = 4;
	int64 coid = 5;
	string field = 6;
}

message PCustomPageParam {
	//分页偏移
	int32 offset = 1;
	//分页大小
	int32 size = 2;
	
	//根据接口确定含义
	string arg0 = 3;	
}

message PJsonParam {
	string json = 1;	//map[string]interface{}转换而来
	string arg0 = 2;	//自定义参数
}

message PSearchPostParam {
	//-2未指定 -1动态帖 + EPostType的定义
	int32 tp = 1;
	//指定社区
	int64 coid = 2;
	//关键词，必填
	string keyword = 3;
	//指定帖子作者
	string uuid = 4;
	//分页偏移
	int32 offset = 5;
	//分页大小
	int32 size = 6;
}

message PScrollResult {
	// ids (如uuids等)
	repeated string id = 1;
	
	// 取下一页的游标
	string cursor = 2;
	
	// 总数，以第一次请求时结果为准
	int32 total = 3;
}

message PGroupString {
	string group = 1;
	repeated string list = 2;
}

message PGroupStringList {
	repeated PGroupString list = 1;
}

message PFansSaveParam {
	// 表名，存储在哪个表里面
	string table = 1;
	
	// 主键， key和id都赋值的话，变成组合主键
	string key = 2;
	int32 id = 3;
	
	// 勾选少部分用户时填充此字段，否则使用filter进行查询
	repeated string uuid = 4;
	
	// 筛选条件
	PFansFilterParam filter = 5;

	// 其它扩展内容
	string content = 6;
	
	// 是否异步存储
	bool asynchronous = 7;
}

enum ERotType {
	RTReserve = 0;
	RTUser = 1; 		//用户
	RTCommunity = 2; 	//社区
	RTTopic = 3; 		//话题
	RTPostHot = 4; 		//帖子（精选版块）
	RTPostDiscover = 5; //帖子（发现版块）
	RTFeatured = 6; 	//社区精华帖
	RTPostHotApp = 7;	//app精选页面展示的热门帖子，只用于hot remove操作
}

message PManualRecommendInfo {
	string id = 1; 		//用户ID、社区ID、帖子ID
	int64 time = 2;		//推荐起始时间，unix时间戳，单位秒	
	int64 expire = 3; 	//过期时间，unix时间戳，单位秒
	int32 order = 4; 	//次序
}

message PHotRemove {
	ERotType rtp = 1;
	bool cancel = 2;	//取消移除
	repeated string ids = 3;
}

// 人工推荐
message PManualRecommend {
	ERotType rtp = 1;		//见ERotType
	repeated PManualRecommendInfo list = 2;
}

// 审核通知消息结构
message PConfirmMsg {
	//审核操作，1通过 2未通过
	int32 state = 2;
	//审核对象，如帖子ID、话题
	repeated string data = 3;
}

// 关注、交友、查看/赞/收藏/分享帖子、更新帖子标签
message PEsActionMsg {
	string sender = 1;
	string receiver = 2;
	int64 postId = 3;
	int32 action = 4;
	repeated string data = 5;
}

message PCommentMsg {
	string id = 1;
	string parent = 2;
	string uuid = 3;
	int64 postId = 4;
	string content = 5;
	int64 time = 6;
}

message PTopicDetail {
	string topic = 1;	//话题名称,不含#
	int32 views = 2;	//浏览数
	int32 count = 3;	//帖子总数
	int32 newsc = 4;	//资讯数，动态数=count-newsc
	int64 time = 5;		//创建时间，也就是第一篇帖子参与此话题的发布时间
	int32 state = 6;	//状态，见DataPublishing.go中EState的定义
}

message PTopicDetailList {
	repeated PTopicDetail list = 1;
}

message PLoginRecord {
	string uuid = 1;
	string ip = 2;		//客户端原始ip地址
	string model = 3;
	string imei = 4;
	string ostp = 5;	//0 未知、1 Android、2 IOS、3 水军、 4 粉丝管理系统
	string osv = 6;
	string channel = 7;
	string version = 8;
	int32 level = 9;	//用户等级
	int32 tp = 10;		//登录类型,详见 blemobi/go-commons/service/ServiceCommon.go
	int64 time = 16;
	bool register = 17;	//是否是创建用户（注册）事件
}

service grpcDataPublishing {
	// 使缓存失效
	rpc ExpireCache(PStringSingle) returns (PEmpty);
	
	// 用户注册
	rpc AddUser(PUser) returns (PEmpty);
	// 更新用户
	rpc UpdateUser(PJsonParam) returns (PEmpty);
	// 记录登录日志
	rpc RecordLogin(PLoginRecord) returns (PEmpty);
	// 增加社区
	rpc AddCommunity(PJsonParam) returns (PEmpty);
	// 更新社区
	rpc UpdateCommunity(PJsonParam) returns (PEmpty);
	// 加入(离开)社区
	rpc JoinCommunity(PEsActionMsg) returns (PEmpty);
	// 搜索社区
	rpc SearchCommunity(PCustomPageParam) returns (PStringList);
	// 新增帖子
	rpc AddPost(PPostStore) returns (PEmpty);
	// 更新帖子内容
	rpc UpdatePost(PPostStore) returns (PEmpty);
	// 更新帖子标签
	rpc UpdatePostTags(PEsActionMsg) returns (PEmpty);
	// 帖子交互
	rpc Act2Post(PEsActionMsg) returns (PEmpty);
	// 搜索帖子
	rpc SearchPost(PSearchPostParam) returns (PStringList);
	// 关注用户
	rpc FollowUser(PEsActionMsg) returns (PEmpty);
	// 好友操作
	rpc MakeFriend(PEsActionMsg) returns (PEmpty);
	// 新增帖子评论
	rpc AddComment(PCommentMsg) returns (PEmpty);
	// 删除评论
	rpc DelComment(PCommentMsg) returns (PEmpty);
	// 审核帖子
	rpc ConfirmPost(PConfirmMsg) returns (PEmpty);
	// 审核话题
	rpc ConfirmTopic(PConfirmMsg) returns (PEmpty);
	
	// 搜索用户
	rpc SearchUser(PQueryUserParam) returns (PStringList);
	// 根据昵称查询用户
	// rpc SearchUser(PStringSingle) returns (PStringList);
	
	// 用户超级查找，参数为json字符串，字段包括：
	// keyword 搜索关键词
	// source 来源 0手机号码 1微信 2微博 3脸书 4谷歌 5用户名
	// level 用户等级
	// state 用户状态 0正常 1被封 2冻结
	// no_water true过滤水军
	// begin,end 用户注册时间起止范围,unix时间戳,秒
	// sort_nickname 以昵称拼音排序 asc升序 desc降序
	// sort_regtime 以用户注册时间排序 asc升序 desc降序（默认）
	// sort_hot 以用户热门度排序，仅支持desc降序
	// sample: `{"keyword":"xxx", "level":1, "sort_regtime":"desc"}`
	rpc SearchUserV2(PStringSingle) returns (PScrollResult);
	
	// 帖子查找，结果以时间倒序排序，参数为json字符串，字段包括：
	// keyword_nickname 关键词为昵称，全词匹配
	// keyword_title 关键词为帖子标题，分词搜索
	// keyword_community 关键词为社区名称，全词匹配
	// type 1社区动态 2资讯 
	// state 审核状态 0待审 1通过审核 2未通过审核
	// cotag 所属的社区的分类ID
	// tag 帖子标签，如"精选"、"女神"等
	// begin, end 发布时间起止范围,unix时间戳,秒
	// sort_time 以帖子发布时间排序 asc升序 desc降序（默认）
	// sort_hot 以帖子热门度排序，仅支持desc降序
	rpc SearchPostV2(PStringSingle) returns (PScrollResult);
	
	// 社区查找，结果以时间倒序排序，参数为json字符串，字段包括：
	// keyword_nickname 关键词为昵称，全词匹配
	// keyword_community 关键词为社区名称，部分匹配
	// cotag 社区分类，如："游戏"
	// begin, end 社区创建时间起止范围,unix时间戳,秒
	// sort_time 以社区创建时间排序 asc升序 desc降序（默认）
	// sort_hot 以社区热门度排序，仅支持desc降序
	rpc SearchCommunityV2(PStringSingle) returns (PScrollResult);
	
	// 话题查找，结果以时间倒序排序，参数为json字符串，字段包括：
	// keyword 关键词
	// state 审核状态 0待审 1通过审核 2未通过审核
	// sort_time 以话题创建时间排序 asc升序 desc降序（默认）
	// sort_hot 以话题热门度排序，仅支持desc降序
	rpc SearchTopicV2(PStringSingle) returns (PScrollResult);
	
	// 查询粉丝
	rpc SelectFans(PFansFilterParam) returns (PScrollResult);
	
	// 查询粉丝，uuid中用下划线拼接了地区信息，如：uuid_CN;4403
	rpc SelectFansWithSource(PFansFilterParam) returns (PScrollResult);
	rpc MoreFansWithSource(PStringSingle) returns (PScrollResult);
	
	rpc SaveFans(PFansSaveParam) returns (PEmpty);

	// 用PScrollResult.scrollId查询下一页粉丝，直到PScrollResult.id为空
	rpc ScrollMore(PStringSingle) returns (PScrollResult);
	
	// 用户关注的网红列表，含搜索
	rpc SelectVUser(PQueryUserParam) returns (PGroupStringList);
	
	// 网红当天过生日的粉丝uuid
	rpc SelectTodayBirthdayFans(PStringSingle) returns (PScrollResult);
	
	// 网红7天内过生日的粉丝uuid
	rpc Select7DayBirthdayFans(PQueryUserParam) returns (PUserList);
	
	// 当天有粉丝过生日的网红uuid
	rpc SelectVUserHaveTodayBirthdayFans(PEmpty) returns (PStringList);
		
	// 精选版块
	rpc SelectPostByCategory(PCustomPageParam) returns (PStringList);
	
	// 人工推荐-添加单个用户/社区/话题/资讯/动态/精选
	rpc AddManualRecommend(PManualRecommend) returns (PEmpty);
		
	// 人工推荐-移除单个用户/社区/话题/资讯/动态/精选
	rpc DelManualRecommend(PManualRecommend) returns (PEmpty);
		
	// 人工推荐-批量覆盖推荐
	rpc BatchManualRecommend(PManualRecommend) returns (PEmpty);
	
	// 人工推荐-获取已推荐列表
	rpc GetManualRecommend(PManualRecommend) returns (PManualRecommend);
	
	// 获取话题详情列表
	rpc GetTopicDetail(PStringList) returns (PTopicDetailList);
	
	// 从热门移除
	rpc HotRemove(PHotRemove) returns (PEmpty);

	// 判断是否在热门移除里面
	rpc IsInHotRemove(PHotRemove) returns (PBoolList);
	
	// 获取用户来源
	rpc GetUserSource(PStringList) returns (PInt32List);
	
	// 获取推荐的社区
	rpc GetRecommendCommunity(PCustomPageParam) returns (PStringList);
}