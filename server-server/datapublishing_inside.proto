syntax = "proto3";
package bbproto; 

import "datapublishing.proto";
import "result.proto";
import "account.proto";
import "news.proto";
import "common_inside.proto";

option java_package = "com.blemobi.sep.probuf";
option java_outer_classname = "DatapublishingApiProtos";

// 每天的平均在线时间
message POnlineData {
	int64 date = 1;
	int32 value = 2;
}

message POnlineDataArray {
	repeated POnlineData array = 1;
}

/*
 *@note 批量获取最后心跳时间
 *@path /datapublishing/inside/heartbeat/last
 *@method GET
 *@param from 服务名，用于校验内网调用
 *@param uuids 用逗号分隔的一众uuid
 *@return 成功返回PInt64List，失败返回PResult
 */


message PQueryUserParam {
	string uuid = 1;
	string keyword = 2;
	int32 offset = 3;
	int32 size = 4;
}

message PNewsParam {
	//分类 
	string tp = 1;
	//分页偏移
	int32 offset = 2;
	//分页大小
	int32 size = 3;
}

message PScrollResult {
	// ids (如uuids等)
	repeated string id = 1;
	
	// 取下一页的游标
	string cursor = 2;
	
	// 总数，以第一次请求时结果为准
	int32 total = 3;
}

message PGroupString {
	string group = 1;
	repeated string list = 2;
}

message PGroupStringList {
	repeated PGroupString list = 1;
}

message PFansSaveParam {
	// 表名，存储在哪个表里面
	string table = 1;
	
	// 主键， key和id都赋值的话，变成组合主键
	string key = 2;
	int32 id = 3;
	
	// 勾选少部分用户时填充此字段，否则使用filter进行查询
	repeated string uuid = 4;
	
	// 筛选条件
	PFansFilterParam filter = 5;

	// 其它扩展内容
	string content = 6;
	
	// 是否异步存储
	bool asynchronous = 7;
}

message PManualRecommend {
	string id = 2; //资讯或动态ID
	int32 ttl = 3; //有效时间，单位秒
	int32 order = 4; //次序
}

message PManualRecommendList {
	repeated PManualRecommend list = 1;
}


message PEsActionMsg {
	string sender = 1;
	string receiver = 2;
	int64 postId = 3;
	int32 action = 4;
	repeated string data = 5;
}

message PCommentMsg {
	string id = 1;
	string parent = 2;
	string uuid = 3;
	int64 postId = 4;
	string content = 5;
	int64 time = 6;
}

service grpcDataPublishing {
	rpc AddPost(PPostStore) returns (PEmpty);
	rpc UpdatePost(PPostStore) returns (PEmpty);
	rpc UpdatePostTags(PEsActionMsg) returns (PEmpty);
	rpc Act2Post(PEsActionMsg) returns (PEmpty);
	rpc FollowUser(PEsActionMsg) returns (PEmpty);
	rpc AddComment(PCommentMsg) returns (PEmpty);
	rpc DelComment(PCommentMsg) returns (PEmpty);
	
	// 根据昵称查询用户
	rpc SearchUser(PStringSingle) returns (PStringList);
	
	// 用户超级查找，参数为json字符串，字段包括：
	// keyword 搜索关键词
	// source 来源 0手机号码 1微信 2微博 3脸书 4谷歌 5用户名
	// level 用户等级
	// state 用户状态 0正常 1被封 2冻结
	// no_water true过滤水军
	// begin,end 用户注册时间起止范围,unix时间戳,秒
	// sort_nickname 以昵称拼音排序 asc升序 desc降序
	// sort_regtime 以用户注册时间排序 asc升序 desc降序（默认）
	// sample: `{"keyword":"xxx", "level":1, "sort_regtime":"desc"}`
	rpc SearchUserV2(PStringSingle) returns (PScrollResult);
	
	// 帖子查找，结果以时间倒序排序，参数为json字符串，字段包括：
	// keyword_nickname 关键词为昵称，全词匹配
	// keyword_title 关键词为帖子标题，分词搜索
	// keyword_community 关键词为社区名称，全词匹配
	// type 1社区动态 2资讯 
	// state 审核状态 0待审 1通过审核 2未通过审核
	// cotag 所属的社区的分类，如："游戏"
	// begin, end 发布时间起止范围,unix时间戳,秒
	rpc SearchPostV2(PStringSingle) returns (PScrollResult);
	
	// 社区查找，结果以时间倒序排序，参数为json字符串，字段包括：
	// keyword_nickname 关键词为昵称，全词匹配
	// keyword_community 关键词为社区名称，部分匹配
	// cotag 社区分类，如："游戏"
	// begin, end 社区创建时间起止范围,unix时间戳,秒
	rpc SearchCommunityV2(PStringSingle) returns (PScrollResult);
	
	// 话题查找，结果以时间倒序排序，参数为json字符串，字段包括：
	// keyword 关键词
	// state 审核状态 0待审 1通过审核 2未通过审核
	rpc SearchTopicV2(PStringSingle) returns (PScrollResult);
	
	// 查询粉丝
	rpc SelectFans(PFansFilterParam) returns (PScrollResult);
	
	// 查询粉丝，uuid中用下划线拼接了地区信息，如：uuid_CN;4403
	rpc SelectFansWithSource(PFansFilterParam) returns (PScrollResult);
	rpc MoreFansWithSource(PStringSingle) returns (PScrollResult);
	
	rpc SaveFans(PFansSaveParam) returns (PEmpty);

	// 用PScrollResult.scrollId查询下一页粉丝，直到PScrollResult.id为空
	rpc ScrollMore(PStringSingle) returns (PScrollResult);
	
	// 用户关注的网红列表，含搜索
	rpc SelectVUser(PQueryUserParam) returns (PGroupStringList);
	
	// 网红当天过生日的粉丝uuid
	rpc SelectTodayBirthdayFans(PStringSingle) returns (PScrollResult);
	
	// 网红7天内过生日的粉丝uuid
	rpc Select7DayBirthdayFans(PQueryUserParam) returns (PUserList);
	
	// 当天有粉丝过生日的网红uuid
	rpc SelectVUserHaveTodayBirthdayFans(PEmpty) returns (PStringList);
	
	//--------------------------------------------------------------------------
	//1.3 & 1.4
	
	// 发现->资讯页
	rpc SelectNews(PNewsParam) returns (PStringList);
	
	/*
	// 添加单个推荐用户
	rpc AddRecommendUser(PStringSingle) returns (PResult);
	// 移除单个推荐用户
	rpc DelRecommendUser(PStringSingle) returns (PResult);
	// 批量设置推荐用户
	rpc BatchSetRecommendUser(PStringList) returns (PResult);
	// 获取推荐的用户
	rpc GetRecommendUser(PEmpty) returns (PStringList);

	// 添加单个推荐社区
	rpc AddRecommendCommunity(PStringSingle) returns (PResult);
	// 移除单个推荐社区
	rpc DelRecommendCommunity(PStringSingle) returns (PResult);	
	// 批量设置推荐社区
	rpc BatchSetRecommendCommunity(PStringList) returns (PResult);
	// 获取推荐的社区
	rpc GetRecommendCommunity(PEmpty) returns (PStringList);

	// 添加单个推荐话题
	rpc AddRecommendTopic(PStringSingle) returns (PResult);
	// 移除单个推荐话题
	rpc DelRecommendTopic(PStringSingle) returns (PResult);	
	// 批量设置推荐话题
	rpc BatchSetRecommendTopic(PStringList) returns (PResult);
	// 获取推荐的话题
	rpc GetRecommendTopic(PEmpty) returns (PStringList);

	// 添加一条推荐资讯
	rpc AddRecommendNews(PStringSingle) returns (PResult);
	// 移除单个推荐资讯
	rpc DelRecommendNews(PStringSingle) returns (PResult);	
	// 批量设置推荐资讯
	rpc BatchSetRecommendNews(PManualRecommendList) returns (PResult);
	// 获取手动推荐的资讯
	rpc GetRecommendNews(PEmpty) returns (PManualRecommendList);
	
	// 添加一条推荐动态
	rpc AddRecommendPost(PStringSingle) returns (PResult);
	// 移除单个推荐动态
	rpc DelRecommendPost(PStringSingle) returns (PResult);	
	// 批量设置推荐动态
	rpc BatchSetRecommendPost(PManualRecommendList) returns (PResult);
	// 获取手动推荐的动态
	rpc GetRecommendPost(PEmpty) returns (PManualRecommendList);
	
	// 添加一条推荐精选（资讯或动态）
	rpc AddRecommendEssence(PStringSingle) returns (PResult);
	// 移除单个推荐精选
	rpc DelRecommendEssence(PStringSingle) returns (PResult);	
	// 批量设置推荐精选
	rpc BatchSetRecommendEssence(PManualRecommendList) returns (PResult);
	// 获取手动推荐的精选
	rpc GetRecommendEssence(PEmpty) returns (PManualRecommendList);
	*/
}