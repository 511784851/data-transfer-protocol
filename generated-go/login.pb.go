// Code generated by protoc-gen-go.
// source: login.proto
// DO NOT EDIT!

/*
Package common is a generated protocol buffer package.

It is generated from these files:
	login.proto
	result.proto

It has these top-level messages:
	PLogin
	PUser
	PAccount
	PResult
	PType
*/
package common

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
const _ = proto.ProtoPackageIsVersion1

type PLogin struct {
	Type int32 `protobuf:"varint,1,opt,name=type" json:"type,omitempty"`
	// 保留2~5用于扩展
	Uuid     string `protobuf:"bytes,6,opt,name=uuid" json:"uuid,omitempty"`
	Token    string `protobuf:"bytes,7,opt,name=token" json:"token,omitempty"`
	Name     string `protobuf:"bytes,8,opt,name=name" json:"name,omitempty"`
	Portrait string `protobuf:"bytes,9,opt,name=portrait" json:"portrait,omitempty"`
}

func (m *PLogin) Reset()                    { *m = PLogin{} }
func (m *PLogin) String() string            { return proto.CompactTextString(m) }
func (*PLogin) ProtoMessage()               {}
func (*PLogin) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type PUser struct {
	Type     int32  `protobuf:"varint,1,opt,name=type" json:"type,omitempty"`
	Nickname string `protobuf:"bytes,6,opt,name=nickname" json:"nickname,omitempty"`
	Realname string `protobuf:"bytes,7,opt,name=realname" json:"realname,omitempty"`
	Portrait string `protobuf:"bytes,8,opt,name=portrait" json:"portrait,omitempty"`
	Gender   int32  `protobuf:"varint,9,opt,name=gender" json:"gender,omitempty"`
	Birthday string `protobuf:"bytes,10,opt,name=birthday" json:"birthday,omitempty"`
	Email    string `protobuf:"bytes,11,opt,name=email" json:"email,omitempty"`
}

func (m *PUser) Reset()                    { *m = PUser{} }
func (m *PUser) String() string            { return proto.CompactTextString(m) }
func (*PUser) ProtoMessage()               {}
func (*PUser) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type PAccount struct {
	Type      int32  `protobuf:"varint,1,opt,name=type" json:"type,omitempty"`
	Cellphone string `protobuf:"bytes,2,opt,name=cellphone" json:"cellphone,omitempty"`
	Wechat    string `protobuf:"bytes,3,opt,name=wechat" json:"wechat,omitempty"`
	Weibo     string `protobuf:"bytes,4,opt,name=weibo" json:"weibo,omitempty"`
	Google    string `protobuf:"bytes,5,opt,name=google" json:"google,omitempty"`
	Facebook  string `protobuf:"bytes,6,opt,name=facebook" json:"facebook,omitempty"`
}

func (m *PAccount) Reset()                    { *m = PAccount{} }
func (m *PAccount) String() string            { return proto.CompactTextString(m) }
func (*PAccount) ProtoMessage()               {}
func (*PAccount) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func init() {
	proto.RegisterType((*PLogin)(nil), "common.PLogin")
	proto.RegisterType((*PUser)(nil), "common.PUser")
	proto.RegisterType((*PAccount)(nil), "common.PAccount")
}

var fileDescriptor0 = []byte{
	// 314 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x6c, 0x92, 0xc1, 0x4e, 0x02, 0x31,
	0x10, 0x86, 0xb3, 0xca, 0xae, 0x4b, 0xb9, 0x35, 0xc6, 0x34, 0xea, 0xc1, 0x70, 0x32, 0x1e, 0xb8,
	0xf8, 0x04, 0x72, 0xf6, 0xb0, 0x21, 0xf1, 0x01, 0xda, 0x32, 0x40, 0x43, 0xb7, 0xb3, 0x29, 0x5d,
	0x09, 0x2f, 0xe3, 0x7b, 0xf8, 0x76, 0x32, 0x53, 0x58, 0x43, 0xc2, 0xad, 0xdf, 0x3f, 0x33, 0xfb,
	0xff, 0xdd, 0xa9, 0x98, 0x78, 0x5c, 0xbb, 0x30, 0xeb, 0x22, 0x26, 0x94, 0x95, 0xc5, 0xb6, 0xc5,
	0x30, 0xfd, 0x16, 0x55, 0xf3, 0x49, 0xba, 0x94, 0x62, 0x94, 0x0e, 0x1d, 0xa8, 0xe2, 0xa5, 0x78,
	0x2d, 0x17, 0x7c, 0x26, 0xad, 0xef, 0xdd, 0x52, 0x55, 0x47, 0x6d, 0xbc, 0xe0, 0xb3, 0xbc, 0x17,
	0x65, 0xc2, 0x2d, 0x04, 0x75, 0xc7, 0x62, 0x06, 0xea, 0x0c, 0xba, 0x05, 0x55, 0xe7, 0x4e, 0x3a,
	0xcb, 0x47, 0x51, 0x77, 0x18, 0x53, 0xd4, 0x2e, 0xa9, 0x31, 0xeb, 0x03, 0x4f, 0x7f, 0x0b, 0x51,
	0x36, 0x5f, 0x3b, 0x88, 0x57, 0x7d, 0x8f, 0x93, 0xc1, 0xd9, 0x2d, 0x7f, 0x31, 0x7b, 0x0f, 0x4c,
	0xb5, 0x08, 0xda, 0x73, 0x2d, 0x47, 0x18, 0xf8, 0xc2, 0xb1, 0xbe, 0x74, 0x94, 0x0f, 0xa2, 0x5a,
	0x43, 0x58, 0x42, 0xe4, 0x2c, 0xe5, 0xe2, 0x44, 0x34, 0x63, 0x5c, 0x4c, 0x9b, 0xa5, 0x3e, 0x28,
	0x91, 0x67, 0xce, 0x4c, 0x77, 0x85, 0x56, 0x3b, 0xaf, 0x26, 0xf9, 0xae, 0x0c, 0xd3, 0x9f, 0x42,
	0xd4, 0xcd, 0x87, 0xb5, 0xd8, 0x87, 0x74, 0x35, 0xfe, 0xb3, 0x18, 0x5b, 0xf0, 0xbe, 0xdb, 0x60,
	0x00, 0x75, 0xc3, 0xa3, 0xff, 0x02, 0x05, 0xd9, 0x83, 0xdd, 0xe8, 0xa4, 0x6e, 0xb9, 0x74, 0x22,
	0x32, 0xdb, 0x83, 0x33, 0xa8, 0x46, 0xd9, 0x8c, 0x81, 0x63, 0x23, 0xae, 0x3d, 0xa8, 0x32, 0x77,
	0x67, 0xa2, 0xd8, 0x2b, 0x6d, 0xc1, 0x20, 0x6e, 0xcf, 0xbf, 0xe8, 0xcc, 0xf3, 0x37, 0xf1, 0x74,
	0x5c, 0xef, 0x0c, 0x3d, 0xe8, 0x5d, 0x82, 0x38, 0x33, 0x1e, 0x5a, 0x34, 0x8e, 0x56, 0x6f, 0xfa,
	0xd5, 0x7c, 0xc2, 0x0b, 0x6f, 0xe8, 0x1d, 0xec, 0x4c, 0xc5, 0xef, 0xe1, 0xfd, 0x2f, 0x00, 0x00,
	0xff, 0xff, 0xad, 0xd0, 0xef, 0x9d, 0x1e, 0x02, 0x00, 0x00,
}
