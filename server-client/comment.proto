syntax = "proto3";
package bbproto;
option java_package = "com.blemobi.sep.probuf";
option java_outer_classname = "CommentProtos";

import "news.proto";

// 单条评论结构详细信息
message PComment {
	string id = 1;		//评论ID
	string uuid = 2;	//评论者ID
	string nickname = 3;	//评论者昵称
	string headImgUrl = 4;	//评论者头像
	string atUuid = 5;	//@用户ID
	string atNickname = 6;	//@用户昵称
	/*保留7用于扩展*/
	bool isShield = 8;	//该评论是否被屏蔽
	int32  vote = 9;	//请求者是否赞过或踩过，1:赞过,-1:踩过，否则为0
	int32  children = 10;	//下一级子评论数
	int32 upvotes = 11;	//赞数
	int32 downvotes = 12;	//踩数
	int64 createTime = 13;	//评论创建时间
	string text = 14;	//评论文本内容
	PAudio audio = 15;	//语音信息
}

// 单条评论结构详细信息(包含评论者等级)
message PCommentExt {
	string id = 1;			//评论ID
	string uuid = 2;		//评论者ID
	string nickname = 3;		//评论者昵称
	string headImgUrl = 4;		//评论者头像
	string atUuid = 5;		//@用户ID
	string atNickname = 6;		//@用户昵称
	int32 level = 7;		//评论者等级
	bool isShield = 8;		//该评论是否被屏蔽
	int32  vote = 9;		//请求者是否赞过或踩过，1:赞过,-1:踩过，否则为0
	int32  children = 10;		//下一级子评论数
	int32 upvotes = 11;		//赞数
	int32 downvotes = 12;		//踩数
	int64 createTime = 13;		//评论创建时间
	string text = 14;		//评论文本内容
	PAudio audio = 15;		//语音信息
	PComment subComment = 16;	//下一级的一条评论
}

// 某个用户等级的评论列表
message PCommentLevel {
	int32 level = 1;		//等级
	int32 count = 2;		//评论数
	int32 interactions = 3;		//交互数（@次数）
	repeated PComment comments = 4;	//评论内容
}

message PCommentList {
	repeated PCommentLevel comments = 1;
}

// 评论列表
message PCommentExtList {
	repeated PCommentExt comments = 1;
}

// 客户端发给服务端的评论结构
message PClientComment {
	string uuid = 1;	//发表评论的用户ID
	string atUuid = 2;	//二级评论中@的用户ID.一级评论可不填
	string text = 3;	//评论文本内容
	PAudio audio = 4;	//语音信息
}

// 客户端发给服务端的评论结构
message PClientCommentList {
    string postId = 1; //评论的帖子ID
    string parentId = 2; //一级评论填帖子ID, 二级评论填目标评论的ID
	repeated PClientComment list = 3;
}

// 批量判断评论是否被用户点赞过
message PBetchCommentVoteExist {
    string  id = 1; //评论ID
	repeated int32 hasVote = 2;   //是否被赞、踩过. 0:没赞没踩; 1:赞过; 2:踩过
	int32 upVoteCnt = 3;      //被赞次数
	int32 DownVoteCnt = 4;//被踩次数
}

/*
 *@note 批量赞踩评论
 */
message PBetchCommentVote {
    int32  voteType = 1; //操作类型:0:赞, 1:踩
	string cid = 2;  //评论ID
	repeated  string uuidList = 3; //点赞的uuid列表
}

message PVoteUser {
	string uuid = 1;	//赞或踩的用户信息
	string nickname = 2;
	string headImgUrl = 3;
}

message PVoteUserList {
	repeated PVoteUser user = 1;
}

message PInt32Array {
	repeated int32 array = 1;
}

message PCommentBool {
	bool isEnable = 1; // 是否开启评论/回复
}

/*
 *@note 发布评论
 *@path /comment/publish
 *@method POST
 *@cookie token&uuid
 *@param postid 帖子ID form参数
 *@param postuuid 帖子创建者ID form参数
 *@param text 文本内容 form参数
 *@param voicefile 语音对象文件名称 form参数
 *@param voicelen 语音对象文件长度 form参数
 *@param validtime 语音有效时间, 单位秒, 0表示永久有效, >0表示在一段时间内有效, 如3600表示在1小时内有效 form参数
 *@param at @了谁，用户uuid form参数
 *@return 成功返回PComment，失败返回PResult
 */

/*
 *@note 评论评论
 *@path /comment/comment
 *@method POST
 *@cookie token&uuid
 *@param id 要评论的ID form参数
 *@param text 文本内容 form参数
 *@param voicefile 语音对象文件名称 form参数
 *@param voicelen 语音对象文件长度 form参数
 *@param validtime 语音有效时间, 单位秒, 0表示永久有效, >0表示在一段时间内有效, 如3600表示在1小时内有效 form参数
 *@param at @了谁，用户uuid form参数
 *@return 成功返回PComment，失败返回PResult
 */
 
 /*
 *@note 赞(踩)评论
 *@path /comment/votecomment
 *@method GET
 *@cookie token&uuid
 *@param actiontp 动作类型 0赞 1踩 query参数
 *@param id 评论ID(comment ID) query参数
 *@return 成功返回PComment，失败返回PResult
 */
 
 
/*
 *@note 加载评论
 *@path /comment/loadcomment
 *@method GET
 *@cookie token&uuid
 *@param postid 帖子ID
 *@param offset 从第几条开始加载, 默认: 0
 *@param count 每次加载多少条, 默认:20, 最大100
 *@param sort 排序方式. 最新靠前:0; 最旧靠前:1; 质量最优:2; 人气最高:3; 最有争议:4.默认:0
 *@return 成功返回 PCommentExtList ，失败返回PResult
 */

/*
 *@note 分页加载评论的评论(每一条评论包含等级)
 *@path /comment/subcomment
 *@method GET
 *@cookie token&uuid
 *@param id 评论ID query参数
 *@param offset 从第几条开始加载 query参数
 *@param count 每次加载多少条 query参数
 *@return 成功返回PCommentExtList，失败返回PResult
 */

 /*
 *@note   删除评论
 *@path   /comment/delete
 *@method DELETE
 *@cookie token&uuid
 *@param  postid 帖子ID
 *@param  id 评论ID
 *@return 返回PResult
 */