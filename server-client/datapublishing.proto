syntax = "proto3";
package bbproto;
option java_package = "com.blemobi.sep.probuf";
option java_outer_classname = "DataPublishingProtos";

import "community.proto";
import "news.proto";

message PWords {
	repeated string word = 1;
}

message PGuy {
	string uuid = 1;
	//用户名
	string username = 2;
	//昵称
	string nickname = 3;
	//真实姓名
	string realname = 4;
	//个性签名
	string whatsup = 5;
	//头像
	string headImgURL = 6;
	//等级
	int32 level = 7;
	//粉丝数
	int32 fansCount = 11;
	//0:无关系，1：是粉丝，2：已关注，3：相互关注
	int32 followShip = 12;
	//0:无关系，1：是好友
	int32 friendShip = 13;
	//用来排行的值，表示粉丝数、帖子数、成就数等
	int32 rankValue = 14;
	//距离(单位km)
	float distance = 15;
}

message PGuyList {
	repeated PGuy guy = 1;
	
	// 不分页的结果总数，大于等于guy的size
	int32 total = 2;
}

message PTopicNews {
	//话题名称不带#号的
	string topic = 1;
	//相关的话题
	repeated string rel = 2;
	//话题查看数
	int32 views = 3;
	//参与该话题的帖子数
	int32 count = 4;
	//博文列表
	PPostViewList posts = 5;
}

message PPostData {
	int32 posts = 1; //帖子数
	int32 views = 2; //查看数
	int32 votes = 3; //投票（点赞）数
	int32 comments = 4; //评论数
	int32 shares = 5; //分享数
}

message PRegionData {
	//形如CN;44或US; 即国外代码只有国家代码和分号，当region在本地字典中查找不到时，
	//请忽略此条数据，归到“其它”项里面，不要显示空白出来
	string region = 1;
	int32 count = 2;
}

message PAgeData {
	int32 section = 1;
	int32 count = 2;
}

message PFollowData {
	int32 total = 1; // 粉丝(成员)总数
	int32 male = 2;  // 男粉(成员)丝数
	int32 female = 3;// 女(成员)粉丝数
	int32 active = 4;// 活跃数
	// 地区分布
	repeated PRegionData region = 5;
	// 年龄分布
	repeated PAgeData age = 6;	
}

message PDayData {
	// 数据日期
	string date = 1;
	// 帐户价值
	int32 worth = 2;
	// 粉丝（成员）数据
	PFollowData follow = 3;
	// 帖子数据
	PPostData  post = 4;
}

message PDaysData {
	repeated PDayData data = 1;
}

// 最新的数据
message PNewestData {
	// 数据日期
	string date = 1;
	// 粉丝(成员)数
	int32 follows = 2;
	//帖子数
	int32 posts = 3;	
}

message PGame {
	//基本信息
	PGuy info = 2;
	//俱乐部
	repeated PGuy club = 3;
	//职业队员
	repeated PGuy player = 4;
	//名人
	repeated PGuy famous = 5;
}

message PGameList {
	//"game" "club" "famous"
	string type = 1;
	
	repeated PGame game = 2;
}

/*
 *@note 热搜词
 *@path /datapublishing/search/hot
 *@method GET
 *@cookie token&uuid
 *@param stype 搜索类型，值包括（user、news、topic、all），下同
 *@param size 需要的热词数量
 *@return 成功返回PWords，失败返回PResult
 */
 
/*
 *@note 搜索建议（自动补齐）
 *@path /datapublishing/search/suggestion
 *@method GET
 *@cookie token&uuid
 *@param stype 搜索类型
 *@param size 需要的搜索建议数
 *@param prefix 关键词前缀，由用户输入 
 *@return 成功返回PWords，失败返回PResult
 */
 
/*
 *@note 搜索用户
 *@path /datapublishing/user/search
 *@method GET
 *@cookie token&uuid
 *@param keyword 关键词
 *@param pageindex 页号
 *@param pagesize 页大小
 *@return 成功返回PGuyList，失败返回PResult
 */
 
/*
 *@note 搜索话题
 *@path /datapublishing/topic/search
 *@method GET
 *@cookie token&uuid
 *@param keyword 关键词
 *@param uuid 如果要指定用户搜索，请给出此用户的uuid
 *@param pageindex 页号
 *@param pagesize 页大小
 *@return 成功返回PWords，失败返回PResult
 */

/*
 *@note 查看话题
 *@path /datapublishing/topic/view
 *@method GET
 *@cookie token&uuid
 *@param topic 两头不带#号的话题名
 *@param pageindex 页号
 *@param pagesize 页大小
 *@return 成功返回PTopicNews（当页号大于1时，返回PPostViewList），失败返回PResult
 */
 
/*
 *@note 热门微博
 *@path /datapublishing/news/hot
 *@method GET
 *@cookie token&uuid
 *@param type 微博类型 取值all text image video audio 默认all
 *@param pageindex 页号
 *@param pagesize 页大小
 *@return 成功返回PPostInfoList，失败返回PResult
 */
 
/*
 *@note 热门用户
 *@path /datapublishing/user/hot
 *@method GET
 *@cookie token&uuid
 *@param pageindex 页号
 *@param pagesize 页大小
 *@param level 用户等级 取值all reg vip vipp vo 默认all
 *@return 成功返回PGuyList，失败返回PResult
 */
 
/*
 *@note 热门社区
 *@path /datapublishing/community/hot
 *@method GET
 *@cookie token&uuid
 *@param pageindex 页号
 *@param pagesize 页大小
 *@return 成功返回PCommunityBaseList，失败返回PResult
 */ 

/*
 *@note 推荐社区
 *@path /datapublishing/community/recommend
 *@method GET
 *@cookie token&uuid
 *@param pageindex 页号
 *@param pagesize 页大小
 *@return 成功返回PCommunityBaseList，失败返回PResult
 */

/*
 *@note 热门社区主题
 *@path /datapublishing/community/subject/hot
 *@method GET
 *@cookie token&uuid
 *@return 成功返回PSubjectList，失败返回PResult
 */ 

/*
 *@note 推荐社区主题
 *@path /datapublishing/community/subject/recommend
 *@method GET
 *@cookie token&uuid
 *@return 成功返回PSubjectList，失败返回PResult
 */
 
/*
 *@note 热门话题
 *@path /datapublishing/topic/hot
 *@method GET
 *@cookie token&uuid
 *@param pageindex 页号
 *@param pagesize 页大小
 *@return 成功返回PWords（不带#号），失败返回PResult
 */ 

 /*
 *@note 推荐微博
 *@path /datapublishing/recommend/news
 *@method GET
 *@cookie token&uuid
 *@param type 微博类型 取值all text image video audio 默认all
 *@param pageindex 页号
 *@param pagesize 页大小
 *@return 成功返回PPostInfoList，失败返回PResult
 */
 
/*
 *@note 推荐用户
 *@path /datapublishing/recommend/user
 *@method GET
 *@cookie token&uuid
 *@param level 用户等级 取值all reg vip vipp vo 默认all
 *@param pageindex 页号
 *@param pagesize 页大小
 *@return 成功返回PGuyList，失败返回PResult
 */

 /*
 *@note 推荐话题
 *@path /datapublishing/topic/recommend
 *@method GET
 *@cookie token&uuid
 *@param pageindex 页号
 *@param pagesize 页大小
 *@return 成功返回PWords(不带#号)，失败返回PResult
 */

/*
 *@note 热门俱乐部
 *@path /datapublishing/club/hot
 *@method GET
 *@cookie token&uuid
 *@param pageindex 页号
 *@param pagesize 页大小
 *@return 成功返回PGuyList，失败返回PResult
 */ 

/*
 *@note 推荐俱乐部
 *@path /datapublishing/club/recommend
 *@method GET
 *@cookie token&uuid
 *@param pageindex 页号
 *@param pagesize 页大小
 *@return 成功返回PGuyList，失败返回PResult
 */ 

/*
 *@note 搜索俱乐部
 *@path /datapublishing/club/search
 *@method GET
 *@cookie token&uuid
 *@param keyword 关键词
 *@param pageindex 页号
 *@param pagesize 页大小
 *@return 成功返回PGuyList，失败返回PResult
 */

/*
 *@note 最新的数据
 *@path /datapublishing/data/newest
 *@method GET
 *@cookie token&uuid
 *@param datatype "user":用户粉丝及帖子数据 "community"：社区成员及帖子数据
 *@return 成功返回PNewestData, 失败返回PResult
 */

/*
 *@note 获取VIP的粉丝、社区数据，某日期区间的数据获取过后，客户端应存储起来，避免重复请求
 *@path /datapublishing/data
 *@method GET
 *@cookie token&uuid
 *@param datatype "worth":帐户价值数据 "fans"或"user":用户粉丝及帖子数据 "community"：社区成员及帖子数据
 *@param from 起始日期，如"2016-01-01"
 *@param to   截止日期，如"2016-06-01"
 *@return 成功返回PDaysData，失败返回PResult
 */

/*
 *@note 注册推荐
 *@path /datapublishing/register/recommend
 *@method GET
 *@cookie token&uuid
 *@param type 取这些值 "game", "club", "famous"
 *@param first 第一次请求时请给此参数置1，以优化服务端数据处理
 *@return PGameList, 失败返回PResult
 */

/*
 *@note 注册关注(取消关注)游戏
 *@path /datapublishing/register/game/follow
 *@method GET
 *@cookie token&uuid
 *@param name 游戏名
 *@param action 1关注，0取消关注
 *@return 成功返回PResult
 */

/*
 *@note 档案内follow搜索
 *@path /datapublishing/follow/search
 *@method GET
 *@cookie token&uuid
 *@param target 要对哪个目标用户（uuid）的档案进行搜索
 *@param keyword 关键字，不能为空
 *@param type "follower"：搜他的粉丝,"following":搜他关注的人
 *@param pageindex 页号
 *@param pagesize 页大小
 *@return 成功返回PFollowOrFansList, 失败返回PResult
 */

message PRank {
	//排行名次
	int32 rank = 1;
	//用来排行的值，如粉丝数、帖子数、成就数
	int32 rankValue = 2;
	
	//排名列表
	repeated PGuy guys = 5;	
}

/*
 *@note 排行榜
 *@path /datapublishing/rank
 *@method GET
 *@cookie token&uuid
 *@param type  排行类型 "fans"|"posts"|"achievements"
 *@param scope 统计范围 "friend"|"follower"|"following"|"region"|"public"
 *@param pageindex 页号
 *@param pagesize 页大小
 *@return 成功返回PRank, 失败返回PResult
 */

/*
 *@note app上传位置信息
 *@path /datapublishing/geo
 *@method PUT
 *@cookie token&uuid
 *@param longitude 经度
 *@param latitude 纬度
 *@param region 如CN;4403，请参考个人信息设置地区时的定位做法
 *@return PResult
 */

/*
 *@note 社区附近的人
 *@path /datapublishing/community/nearby
 *@method GET
 *@cookie token&uuid
 *@param coid 社区ID
 *@param longitude 经度
 *@param latitude 纬度
 *@param pageindex 页号，从1开始
 *@param pagesize 页大小
 *@param gender 性别 0女 1男 其它或不传此参数表示全部
 *@return 成功返回PGuyList，失败返回PResult
 */

message PPostPreview {
	int64 postId = 1;			//帖子ID
	EPostType postType = 2;		//帖子类型
	EResourceType resType = 3;  //资源类型，当为VideoOther时mediaURL有效
	string thumbURL = 4;		//预览图片，视频首帧（或截图）也是在此提供
	int32 hight = 5;			//预览图高
	int32 width = 6;			//预览图宽
	string mediaURL = 7;		//当resType为VideoOther时，填充资源地址
	string title = 8;			//帖子标题，资讯帖有效
	string body = 9;			//帖子文本内容，不是所有的，暂定取前50个字符
	int64 time = 10;			//帖子发布时间
	
	string ucid = 11;			//作者ID或社区ID
	string name = 12;			//动态帖的作者或资讯帖的社区名称
	string headURL = 13;		//动态帖作者头像或资讯帖社区头像
}

enum ERecommendReason {
	//热门推荐
	HotDog = 0;
	
	//TA与您有相同的兴趣
	SameTaste = 1;
	
	//TA与您加入了同个社区
	JoinSameCommunity = 2;
	
	//您有N个关注的人也关注（加入）了TA
	NFollow = 3;
	
	//您有N个好友关注（加入）了TA
	NFriend = 4;
}

message PRecommendReason {
	ERecommendReason reason = 1;
	int32 num = 2; //多少个关注的人（或好友）
}

message PDiscoverCard {
	// 卡片的数据类型（6用户 7社区 8话题 9帖子）
	int32 category = 1;
	
	//推荐原因，仅当推荐用户或社区时有效
	PRecommendReason reason = 5;
	//用户
	PGuy user = 6;
	//社区
	PCommunityBase community = 7;
	//话题，不含#号，此时postPreview有效
	string topic = 8;
	//帖子，根据里面的postType知道是资讯帖（community有效）还是动态帖（user有效）
	PPostPreview postPreview = 9;
}

message PDiscover {
	repeated PDiscoverCard list = 1;
}

/*
 *@note 发现
 *@path /datapublishing/discover
 *@method GET
 *@cookie token&uuid
 *@param offset,count 分页参数，从offset开始的count个记录，offset从0开始，count最大不超过20
 *@return 成功返回PDiscover，失败返回PResult
 */

message PFansFilterParam {
	// 谁的粉丝
	string uuid = 1;
	
	// 性别筛选 0女, 1男, 其它情况不过滤
	int32 gender = 2;
	
	// 地区筛选，格式如CN;4403、CN;44，配合下面的negate使用
	repeated string region = 3;
	
	// true表示要对region取反，即排除掉这些地区的粉丝
	bool negate = 4;
	
	// 反选掉的用户
	repeated string skipUuid = 5;
	
	// 是否过滤掉VO
	bool skipVO = 6;
}

/*
 *@note 粉丝筛选
 *@path /datapublishing/fans/filter
 *@method POST
 *@cookie token&uuid
 *@body PFansFilterParam 筛选参数
 *@param keyword 搜索关键字
 *@param pageindex 页号，从1开始
 *@param pagesize 页大小
 *@return 成功返回PGuyList，失败返回PResult
 */

/*
 *@note 粉丝的地区分布
 *@path /datapublishing/fans/regions
 *@method GET
 *@cookie token&uuid
 *@return 成功返回PFollowData，失败返回PResult
 */