syntax = "proto3";
package common;
option java_package = "com.blemobi.sep.probuf";
option java_outer_classname = "AccountProtos";

/*=====================================*/
//结构定义

message PUserList {
	repeated PUser list = 1; //PUser列表，最多100个
}

message PLiveInfo {
	string website = 1;   // 网站
	string url = 2;       // 直播网址
}

message PLiveInfoList {
	repeated PLiveInfo list = 1;
}

// 用户信息
message PUser {
	/*保留1~5用于扩展*/
	
	string uuid = 6; 				// 服务端标志用户的唯一id
	string password = 7; 			// 自有手机号码注册时输入的密码      //这个可以移除
	string username = 8; 			// 用户名，唯一
	string nickname = 9; 			// 昵称
	string headImgURL = 10; 		// 头像地址
	string realname = 11;			// 真实姓名
	int32 gender = 12;    			// 性别，0就是女，其余的是男；人妖暂时不考虑
	string email = 13; 				// 邮箱地址
	string birthday = 14; 			// 生日，格式1985-01-01
	string cellphone = 15; 			// 手机号     //这个可以移除
	int32 timeZone = 16;    		// 时区       //客户端没用到
	string locale = 17; 			// 语言       //客户端没用到
	int32 membershipLevel = 18;    	// 会员级别
	int64 lastUpdateTime = 19;  	// 最后更新时间TUser结构，用户/系统修改
	int64 lastLoginTime = 20;  		// 用户最后登陆时间
	string userResume = 21; 		// 个人简介
	string link1 = 22;       		// 链接1      //这个可以移除
	string link2 = 23;          	// 链接2      //这个可以移除
	string link3 = 24;          	// 链接3      //这个可以移除
	int64 chatId = 25;				// 聊天系统分配的id
	PLevelInfo levelInfo = 26;		// 会员等级信息
	bool disable = 27; 				// 帐户是否被禁用
	bool isAI = 28; 				// 该帐户是否是机器人
	bool forceChangePwd = 29; 		// 是否登录时强制要修改密码
	string areaCode = 30;			// 地区代码
	string areaName = 31;			// 地区名称
	bool liveRemind = 32;           // 直播提醒开关
	PLiveInfoList liveInfo = 33;    // 直播提醒信息
	string thumbBackImage = 34; 	// 背景缩略图
	string bigBackImage = 35;       // 背景大图
	bool isFollowing = 36;          // 是否关注
	int64 registerTime = 37;  		// 注册时间
	PLinkInfoList linkList = 38;    // 第三方链接列表
	int32 authStatus = 39;          // 实名认证状态(0:未认证,1:审核中,2:审核未通过,3:已认证)
}

message PUserListEx {
	repeated PUserEx list = 1; //PUser列表，最多100个
}

// 扩展用户信息
message PUserEx {
	/*保留1~5用于扩展*/
	
	string uuid = 6; 			  	  // 服务端标志用户的唯一id
	string project = 7;				  // 项目名称
	string username = 8; 			  // 用户名，唯一
	string password = 9; 			  // 自有手机号码注册时输入的密码      //这个可以移除，转移到Login
	string nickname = 10; 			  // 昵称
	string realname = 11;			  // 真实姓名
	int32 gender = 12;    			  // 性别，0就是女，其余的是男；人妖暂时不考虑
	string birthday = 13; 			  // 生日，格式19850101
	string email = 14; 				  // 邮箱地址
	string cellphone = 15; 			  // 手机号
	int32 timeZone = 16;    		  // 时区
	string headImgURL = 17; 		  // 头像地址
	string locale = 18; 			  // 语言
	string userResume = 19; 		  // 简介
	int64 lastUpdateTime = 20;  	  // 最后更新时间TUser结构，用户/系统修改
	int64 lastLoginTime = 21;  		  // 用户最后登陆时间
	map<string,string> userData = 22; // 用户数据
	int64 registerTime = 23;  		  // 注册时间
}

// 用户基础信息
message PUserBase {
  int32 Level = 2;					// 用户等级
  string UUID = 6;        			// 服务端标志用户的唯一id
  string UserName = 7;     			// 用户名，唯一
  string Nickname = 8;      		// 昵称
  string RealName = 9;				// 真实姓名
  string HeadImgURL = 10;     		// 头像地址
  string UserResume = 11;			// 简介
  string Language = 12;             // 语言
}

// 用户基础信息列表
message PUserBaseList {
	repeated PUserBase list = 1; //PUserBase列表，最多100个
}

message PPhoneMap {
	map<string,string> list = 1; //手机号：uuid
}

message PAccount {
	bool cellphone = 2;			//手机
	bool wechat = 3;			//微信
	bool weibo = 4;				//微博
	bool facebook = 5;			//脸书
	bool google = 6;			//谷歌
}

enum ELevelType {
	User = 0;		//普通用户开放给所有用户
	Vip = 1;		//VIP为在平台内受欢迎的普通用户，并且有意向利用平台获得收益者
	Vipp = 2;		//VIP+为名人明星，职业队员，游戏公司重要任务，俱乐部以及协会
	Vo = 3;			//VO仅为电子竞技俱乐部或者公司级别
	Tourist = 4;	//游客
}

enum ERightId {
//微博展示
	weibo_show_left_catalog = 0;  	//侧边目录
	weibo_show_top_dropdown = 1;  	//顶部下拉
	weibo_show_icon = 2; 		  	//头像
	weibo_show_comment = 3;       	//评论
	weibo_show_collect = 4;		 	//收藏
	weibo_show_more = 5;     	 	//更多
	weibo_show_view_details = 6; 	//查看详情
//微博评论
	weibo_comment_text = 7; 	//文字评论
	weibo_comment_audio = 8;	//语音评论
//微博发布
	weibo_post_text = 9;		//文字贴
	weibo_post_image = 10;		//图片贴
	weibo_post_video = 11;		//视频贴
	weibo_post_audio = 12;		//语音贴
//个人档案
	personal_record_external_links = 13;		//外部链接
	personal_record_icon = 14;					//个人图标
	personal_record_community = 15;				//社区 
	personal_record_video_classify_page = 16;	//视频贴分类页
	personal_record_audio_classify_page = 17;	//语音贴分类页
//好友系统
	friend_system_recommend = 18;		//推荐
	friend_system_search = 19;			//搜索
	friend_system_friend_apply_for = 20;//好友申请
	friend_system_address_book = 21;	//通迅录
	friend_system_friend = 22;			//好友
	friend_system_my_apply_for = 23;	//我的申请
//其它
	real_name = 24;             		//是否必须实名制，VO也拥有
}

//会员等级信息
message PLevelInfo {
	int32 levelType = 1;             //会员等级类型
	map<string,bool> mapRight = 2;   //会员等级权限列表
}

//会员等级扩展
message PLevelInfoEx {
	string uuid = 1;	          //用户ID
	PLevelInfo levelInfo = 2;     //会员等级信息
}

//批量会员等级信息
message PLevelInfos {
	repeated PLevelInfoEx list = 1; 	//成功的PUuidLevelInfo信息列表
	repeated string failUuid = 2;		//失败的uuid列表
}

//第三方直播提醒开关
message PLiveRemind {
	bool offOn = 1;
}

// 基础信息
message PAccountInitInfo {
	int32 authStatus = 1;  //实名认证状态(0:未认证,1:审核中,2:审核未通过,3:已认证)
	string cellphone = 2;  //手机号码
}

// 背景图片信息
message PBackImage {
	string objectKey = 1;   //背景图片objectkey
	string url = 2;         //图片URL
}

// 背景缩略图列表
message PBackThumbImageList {
	repeated PBackImage list = 1;
}

// 实名认证信息
message PReadNameAuthInfo {
	string uuid = 1;       //用户ID
	int32 authStatus = 2;  //实名认证状态(0:未认证,1:审核中,2:审核未通过,3:已认证)
	string readName = 3;   //真实姓名
 	string birthday = 4;   //出生年月日
 	string idCardNo = 5;   //身份证号码
 	string idCardImg  = 6; //身份证照片
	int32 authTime = 7;    //认证时间
}

// 实名认证信息列表
message PReadNameAuthInfoList {
	repeated PReadNameAuthInfo list = 1;
}

// 实名认证信息数量
message PReadNameAuthInfoCount {
	int64 count = 1;
}

// 隐私信息
message PPrivacyInfo {
	bool myFans = 1;       //我的粉丝(不让他(她)看我的贴子)
	bool myAttention = 2;  //我关注的人(不看他(她)的贴子)
}

// 支持的语言列表常量
// "zh-cn" : 中文简体
// "zh-tw" : 中文繁体
// "en-us" : English
// "ko-kr" : 韩文

// 语言信息
message PLanguageInfo {
	string language = 1;   //语言
}

//超链接类型
enum ELinkType {
	taobao = 0;  //淘宝网
	jd = 1;      //京东
	yy = 2;      //YY
	huya = 3;    //虎牙
	douyu = 4;   //斗鱼
	panda = 5;   //熊猫TV
	zhanqi = 6;  //战旗
	quanmin = 7; //全民TV
	weibo = 8;   //新浪微博
	qzone = 9;   //QQ空间
	edg = 10;    //EDG
}

// 超链接信息
message PLinkInfo {
	int32 type = 1;    //ELinkType类型
	string url = 2;    //超链接地址
}

// 超链接信息列表
message PLinkInfoList {
	repeated PLinkInfo list = 1;
}

// 显示贴子的个人档案信息
message PAccountNewsPersonInfo {
	int32 friendCnt = 1;          //朋友个数
	int32 followCnt = 2;          //follow人数
	int32 fansCnt = 3;            //fans个数
	int32 textCnt = 4;            //发表的文字帖个数
	int32 imageCnt = 5;
	int32 audioCnt = 6;
	int32 videoCnt = 7;
	string CommunityID = 8;
	PUser user = 9;
	int32 followship = 10;        //两用户间的关系、0:无关系，1,：是粉丝，2：已关注，3：相互关注
  	bool friend = 11;             //是否是好友，是：true
	PLinkInfoList linkInfos = 12; //超链接列表
}

// 显示聊天的个人档案信息
message PAccountChatPersonInfo {
	string communityId = 1;     //社区ID
	string communityName = 2;   //社区名称
	string communityIcon = 3;   //社区图片
	string Introduce = 4;       //社区介绍
	PUser user = 5;             //用户信息
}

// VIP+所属标签
message PAccountVoMemberTag {
    int32  tagID = 1; // 标签ID
    string name  = 2; // 名称
    string image = 3; // 显示图片（VO队员列表显示）
}

// 游戏列表
message PAccountVoMemberTagList {
    repeated PAccountVoMemberTag list = 1; // 列表
}

// VIP+与VO相关信息
message PAccountVoMember {
    string uuid = 1;                       // 用户ID
    string dispname = 2;                   // 显示名称（用户获取显示用）
    string position = 3;                   // 职位
    string portrait = 4;                   // 形象照
    repeated PAccountVoMemberTag tags = 5; // 标签
}

// VO成员列表
message PAccountVoMemberList {
    repeated PAccountVoMember list = 1; // 列表
}

// VO基础信息
message PVoBase {
    int64  fans = 1;         // 粉丝数
    string resume = 2;       // 简介
    string username = 3;     // 名称
    string nickname = 4;     // 昵称
    string background = 5;   // 背景图
    string communityID = 6;  // 社区ID
    int32  relationship = 7; // 与当前用户的关系：0:无关系，1,：是粉丝，2：已关注，3：相互关注
}

/*=====================================*/
//API定义

/*
 *@note 取用户信息
 *@uri /account/user/profile
 *@cookie token&uuid
 *@param GET
 *@return 成功返回PUser，失败返回PResult
 */

/*
 *@note 更新用户信息（不包含添加用户信息）
 *@uri /account/user/profile
 *@cookie token&uuid
 *@method POST
 *@param nickname 昵称
 *@param username 用户名
 *@param realname 真实姓名
 *@param gender 性别
 *@param birthday 生日
 *@param email 电子邮件
 *@param userresume 个人简介
 *@param link1 链接1
 *@param link2 链接2
 *@param link3 链接3
 *@param areacode 地区代码(格式:"^[a-zA-Z]{1,6};(\\d{0,10})$")
 *@param areaname 地区名称
 *@param liveinfo   第三方直播提醒信息
 *@return 返回PResult
 */

/*
 *@note 获取带签名的文件上传URL
 *@uri /account/user/imageurl
 *@method POST
 *@cookie token&uuid
 *@digest 要上传的文件的md5 hexstring
 *@length 文件大小，字节
 *@extension 扩展名 如jpg,png,gif,bmp,mp3,apk等
 *@return 成功返回PUpload，失败返回PResult
 */

/*
 *@note 修改用户头像
 *@uri /account/user/headimage
 *@method post
 *@cookie token&uuid
 *@param image 要上传的头像objectkey，PUpload返回的参数
 *@return 返回PResult
 */

/*=====================================*/
//API V1 定义

/*
 *@note     获取用户信息(支持多项目)
 *@uri     /v1/account/users/:uuid
 *@method   GET
 *@cookie   token&uuid
 *@return   成功:PUserEx,失败:CXXResult
 */

/*
 *@note     获取多个用户信息(支持多项目)
 *@uri     /v1/account/users
 *@method   GET
 *@cookie   token&uuid
 *@uriParam uuids 用户ID,要获取多个用户时用","分隔,如"/v1/account/users?uuids=1,2,3"
 *@return   成功:PUserListEx,失败:CXXResult
 */

/*
 *@note      通过Json设置用户信息(支持多项目)
 *@uri       /v1/account/user.json
 *@method    POST
 *@cookie    token&uuid
 *@uriParam  uuid 用户ID
 *@postParam json 用户信息
 *@return    CXXResult
 *@
 *@ common.PUserEx JSON 格式说明:
 *@ {
       	"project":    "project",
       	"nickname":   "nickname",
       	"realname":   "realname",
       	"gender":     "gender",
       	"birthday":   "birthday",
       	"email":      "email",
       	"cellphone":  "cellphone",
       	"timeZone":   "timeZone",
       	"headImgURL": "headImgURL",
       	"locale":     "locale",
       	"resume":     "resume",
		"userData":
		{
			"x1":"x1_data",
			"x2":"x2_data"
		}
	}
 */

/*
 *@note      通过Proto设置用户信息(支持多项目)
 *@uri       /v1/account/user.proto
 *@method    POST
 *@cookie    token&uuid
 *@uriParam  uuid 用户ID
 *@uriParam  fields  字段ID,只设置某个字段，通过","分隔,如"/v1/account/fields?uuids=1,2,3"
 *@body PUserEx 用户信息
 *@return    CXXResult
 */

/*
 *@note      注册用户(支持多项目)
 *@uri       /v1/account/register
 *@method    POST
 *@cookie    token&uuid
 *@body PUserEx 用户信息
 *@return    CXXResult
 */

/*
 *@note      获取初始化信息
 *@uri       /v1/account/user/initinfo
 *@method    GET
 *@cookie    token&uuid
 *@return    成功返回PAccountInitInfo, 失败返回PResult
 */

/*
 *@note 获取背景缩略图列表
 *@uri  /v1/account/user/backimage/thumblist
 *@method GET
 *@cookie token&uuid
 *@return 成功返回PBackThumbImageList, 失败返回PResult
 */

/*
 *@note 获取缩略图
 *@uri  /v1/account/user/backimage/thumb
 *@method GET
 *@cookie token&uuid
 *@return 成功返回PBackImage, 失败返回PResult
 */

/*
 *@note 获取大图
 *@uri  /v1/account/user/backimage/big
 *@method GET
 *@cookie token&uuid
 *@return 成功返回PBackImage, 失败返回PResult
 */

/*
 *@note 修改背景图片
 *@uri  /v1/account/user/backimage
 *@method POST
 *@cookie token&uuid
 *@postParam objectkey 要上传的背景图片objectkey
 *@return 返回PResult
 */

/*
 *@note 设置实名认证信息
 *@uri  /v1/account/user/readnameauth
 *@method POST
 *@cookie token&uuid
 *@postParam readname  真实姓名
 *@postParam birthday  出生年月日
 *@postParam idcardno  身份证号码
 *@postParam idcardimg 身份证照片
 *@return 返回PResult
 */

/*
 *@note 获取实名认证信息
 *@uri  /v1/account/user/readnameauth
 *@method GET
 *@cookie token&uuid
 *@return 成功返回PReadNameAuthInfo, 失败返回PResult
 */

/*
 *@note 获取隐私信息
 *@uri  /v1/account/user/privacy
 *@method GET
 *@cookie token&uuid
 *@return 成功返回PPrivacyInfo, 失败返回PResult
 */

/*
 *@note 设置隐私信息
 *@uri  /v1/account/user/privacy
 *@method POST
 *@cookie token&uuid
 *@postParam key 参数
	"MyFans": 我的粉丝(不让他(她)看我的贴子)
	"MyAttention": 我关注的人(不看他(她)的贴子)
 *@postparam offon  开关(0:关,1:开)
 *@return 返回PResult
 */

/*
 *@note 获取语言
 *@uri  /v1/account/user/language
 *@method GET
 *@cookie token&uuid
 *@return 成功返回PLanguageInfo, 失败返回PResult
 */

/*
 *@note 设置语言
 *@uri  /v1/account/user/language
 *@method POST
 *@cookie token&uuid
 *@postParam language 语言
 *@return 返回PResult
 */

/*
 *@note 设置超链接信息
 *@uri  /v1/account/user/link
 *@method POST
 *@cookie token&uuid
 *@body PLinkInfoList 超链接信息列表
 *@return 返回PResult
 */

/*
 *@note 获取超链接信息列表
 *@uri  /v1/account/user/link
 *@method GET
 *@cookie token&uuid
 *@return 成功返回PLinkInfoList, 失败返回PResult
 */

/*
 *@note 获取贴子里的个人档案信息
 *@uri  /v1/account/user/newspersoninfo
 *@method GET
 *@cookie token&uuid
 *@uriParam uuid 用户ID
 *@return 成功返回PAccountNewsPersonInfo, 失败返回PResult
 */

/*
 *@note 获取聊天里的个人档案信息
 *@uri  /v1/account/user/chatpersoninfo
 *@method GET
 *@cookie token&uuid
 *@return 成功返回PAccountChatPersonInfo, 失败返回PResult
 */

/*
 *@note 设置用户名与密码(只能设置一次)
 *@uri /v1/account/user/username
 *@method POST
 *@cookie token&uuid
 *@postParam username 用户名
 *@postParam password 密码
 *@return 返回PbResult
 */

/*
 *@note 设置用户信息
 *@uri /v1/account/user/profile
 *@method POST
 *@cookie token&uuid
 *规则：
  1、不想设置某字段，不添加字段及可
  2、字段名区分大小写
 *@postParam Nickname   昵称
 *@postParam Gender     性别
 *@postParam Birthday   生日
 *@postParam Email      邮箱
 *@postParam AreaCode   地区代码
 *@postParam AreaName   地区名称
 *@postParam UserResume 个性签名
 *@return 返回PbResult
 */

/*
 *@note VO主页
 *@uri /v1/account/vos/:uuid
 *@method GET
 *@cookie token&uuid
 *@return PVoBase VO基础信息
 */

/*
 *@note VO成员列表
 *@uri /v1/account/vo/members
 *@method GET
 *@cookie token&uuid
 *@param offset 开始位置
 *@param count 获取数量
 *@param tagID 过滤标签（默认不进行过滤，排序根据添加时间排序）
 *@return PAccountVoMemberList 成员列表
 */

/*
 *@note 获取VO的成员的标签列表
 *@uri /v1/account/vo/member/tags
 *@method GET
 *@cookie token&uuid
 *@return PAccountVoMemberTagList 游戏列表
 */
