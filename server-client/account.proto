syntax = "proto3";
package common;
option java_package = "com.blemobi.sep.probuf";
option java_outer_classname = "AccountProtos";

/*=====================================*/
//结构定义

message PUserList {
	repeated PUser list = 1; //PUser列表，最多100个
}

message PLiveInfo {
	string website = 1;   // 网站
	string url = 2;       // 直播网址
}

message PLiveInfoList {
	repeated PLiveInfo list = 1;
}

// 用户信息
message PUser {
	/*保留1~5用于扩展*/
	
	string uuid = 6; 				// 服务端标志用户的唯一id
	string password = 7; 			// 自有手机号码注册时输入的密码
	string username = 8; 			// 用户名，唯一
	string nickname = 9; 			// 昵称
	string headImgURL = 10; 		// 头像地址
	string realname = 11;			// 真实姓名
	int32 gender = 12;    			// 性别，0就是女，其余的是男；人妖暂时不考虑
	string email = 13; 				// 邮箱地址
	string birthday = 14; 			// 生日，格式19850101
	string cellphone = 15; 			// 手机号
	int32 timeZone = 16;    		// 时区
	string locale = 17; 			// 语言
	int32 membershipLevel = 18;    	// 会员级别
	int64 lastUpdateTime = 19;  	// 最后更新时间TUser结构，用户/系统修改
	int64 lastLoginTime = 20;  		// 用户最后登陆时间
	string userResume = 21; 		// 个人简介
	string link1 = 22;       		// 链接1
	string link2 = 23;          	// 链接2
	string link3 = 24;          	// 链接3
	int64 chatId = 25;				// 聊天系统分配的id
	PLevelInfo levelInfo = 26;		// 会员等级信息
	bool disable = 27; 				// 帐户是否被禁用
	bool isAI = 28; 				// 该帐户是否是机器人
	bool forceChangePwd = 29; 		// 是否登录时强制要修改密码
	string areaCode = 30;			// 地区代码
	string areaName = 31;			// 地区名称
	bool liveRemind = 32;           // 直播提醒开关
	PLiveInfoList liveInfo = 33;  // 直播提醒信息
}

message PUserListEx {
	repeated PUserEx list = 1; //PUser列表，最多100个
}

// 扩展用户信息
message PUserEx {
	/*保留1~5用于扩展*/
	
	string uuid = 6; 			  	  // 服务端标志用户的唯一id
	string project = 7;				  // 项目名称
	string username = 8; 			  // 用户名，唯一
	string password = 9; 			  // 自有手机号码注册时输入的密码
	string nickname = 10; 			  // 昵称
	string realname = 11;			  // 真实姓名
	int32 gender = 12;    			  // 性别，0就是女，其余的是男；人妖暂时不考虑
	string birthday = 13; 			  // 生日，格式19850101
	string email = 14; 				  // 邮箱地址
	string cellphone = 15; 			  // 手机号
	int32 timeZone = 16;    		  // 时区
	string headImgURL = 17; 		  // 头像地址
	string locale = 18; 			  // 语言
	string userResume = 19; 		  // 简介
	int64 lastUpdateTime = 20;  	  // 最后更新时间TUser结构，用户/系统修改
	int64 lastLoginTime = 21;  		  // 用户最后登陆时间
	map<string,string> userData = 22; // 用户数据
}

// 用户基础信息
message PUserBase {
  int32 Level = 2;					// 用户等级
  string UUID = 6;        			// 服务端标志用户的唯一id
  string UserName = 7;     			// 用户名，唯一
  string Nickname = 8;      		// 昵称
  string HeadImgURL = 9;     		// 头像地址
}

// 用户基础信息列表
message PUserBaseList {
	repeated PUserBase list = 1; //PUserBase列表，最多100个
}

message PPhoneMap {
	map<string,string> list = 1; //手机号：uuid
}

message PAccount {
	bool cellphone = 2;			//手机
	bool wechat = 3;			//微信
	bool weibo = 4;				//微博
	bool facebook = 5;			//脸书
	bool google = 6;			//谷歌
}

enum ELevelType {
	User = 0;		//普通用户开放给所有用户
	Vip = 1;		//VIP为在平台内受欢迎的普通用户，并且有意向利用平台获得收益者
	Vipp = 2;		//VIP+为名人明星，职业队员，游戏公司重要任务，俱乐部以及协会
	Vo = 3;			//VO仅为电子竞技俱乐部或者公司级别
	Tourist = 4;	//游客
}

enum ERightId {
//微博展示
	weibo_show_left_catalog = 0;  	//侧边目录
	weibo_show_top_dropdown = 1;  	//顶部下拉
	weibo_show_icon = 2; 		  	//头像
	weibo_show_comment = 3;       	//评论
	weibo_show_collect = 4;		 	//收藏
	weibo_show_more = 5;     	 	//更多
	weibo_show_view_details = 6; 	//查看详情
//微博评论
	weibo_comment_text = 7; 	//文字评论
	weibo_comment_audio = 8;	//语音评论
//微博发布
	weibo_post_text = 9;		//文字贴
	weibo_post_image = 10;		//图片贴
	weibo_post_video = 11;		//视频贴
	weibo_post_audio = 12;		//语音贴
//个人档案
	personal_record_external_links = 13;		//外部链接
	personal_record_icon = 14;					//个人图标
	personal_record_community = 15;				//社区 
	personal_record_video_classify_page = 16;	//视频贴分类页
	personal_record_audio_classify_page = 17;	//语音贴分类页
//好友系统
	friend_system_recommend = 18;		//推荐
	friend_system_search = 19;			//搜索
	friend_system_friend_apply_for = 20;//好友申请
	friend_system_address_book = 21;	//通迅录
	friend_system_friend = 22;			//好友
	friend_system_my_apply_for = 23;	//我的申请
//其它
	real_name = 24;             		//是否必须实名制，VO也拥有
}

//会员等级信息
message PLevelInfo {
	int32 levelType = 1;
	map<string,bool> mapRight = 2;//会员等级权限列表
}

//会员等级扩展
message PLevelInfoEx {
	string uuid = 1;	//用户ID
	PLevelInfo levelInfo = 2;
}

//批量会员等级信息
message PLevelInfos {
	repeated PLevelInfoEx list = 1; 	//成功的PUuidLevelInfo信息列表
	repeated string failUuid = 2;		//失败的uuid列表
}

//黑名单项
message PBlacklist {
	int64 id = 1;   //黑名单ID
	string val = 2; //黑名单值
}

//黑名单映射列表
message PBlacklistList {
	repeated PBlacklist list = 1;	//黑名单列表
}

//黑名单值列表
message PBlacklistVal {
	repeated string list = 1;	//黑名单值列表
}

//黑名单ID列表
message PBlacklistID {
	repeated int64 list = 1;	//黑名单ID列表
}

//黑名单列表返回
message PBlacklistRet {
	repeated int64 succList = 1;	//成功的列表
	repeated int64 failList = 2;    //失败的列表
}

//黑名单列表返回
message PBlacklistExRet {
	repeated PBlacklist succList = 1;	   //成功的黑名单列表
	repeated PBlacklist existList = 2;	   //已经存在的黑名单列表
	repeated string failList = 3;          //失败的列表
}

//黑名单列表数量
message PBlacklistCount {
	int64 count = 1;     //黑名单数量
}

//第三方直播提醒开关
message PLiveRemind {
	bool offOn = 1;
}

/*=====================================*/
//API定义

/*
 *@note 取用户信息
 *@uri /account/user/profile
 *@cookie token&uuid
 *@param GET
 *@return 成功返回PUser，失败返回PResult
 */

/*
 *@note 更新用户信息（不包含添加用户信息）
 *@uri /account/user/profile
 *@cookie token&uuid
 *@method POST
 *@param nickname 昵称
 *@param realname 真实姓名
 *@param gender 性别
 *@param birthday 生日
 *@param email 电子邮件
 *@param userresume 个人简介
 *@param link1 链接1
 *@param link2 链接2
 *@param link3 链接3
 *@param areacode 地区代码
 *@param areaname 地区名称
 *@param liveInfo 第三方直播提醒信息
 *@return 返回PResult
 */
 
/**
 *@note 检测手机号码是否已经注册
 *@uri /account/user/chphone
 *@cookie token&uuid
 *@method GET
 *@param phones 加了区号的手机号码数组
 *@return PPhoneMap 手机号：uuid
 */
 
/**
 *@note 分页地获取用户的列表
 *@uri /account/user/users
 *@cookie token&uuid
 *@method GET
 *@param from 服务名称（内部调用要传这个参数）
 *@param pageindex 要查看第几页
 *@param pagesize 一页要显示几条数据
 *@return 成功返回PUserList，失败返回PResult
 */

/*
 *@note 获取用户的账号绑定信息
 *@uri /account/binding/status
 *@method GET
 *@cookie token&uuid
 *@return 成功返回PAccount，失败返回PbResult
 */

/*
 *@note 绑定手机号登录方式
 *@uri /account/binding/phone
 *@method GET
 *@cookie token&uuid
 *@param cellphone 有带区号的手机号码（如+86）
 *@param smscode 短讯服务代码
 *@return 成功返回PbResult(No_Error)，失败返回PbResult
 */

/*
 *@note 绑定微信登录方式
 *@uri /account/binding/wechat
 *@method GET
 *@cookie token&uuid
 *@param code 授权临时票据(authorization code)
 *@return 成功返回PbResult(No_Error)，失败返回PbResult
 */
 
/*
 *@note 绑定微博登录方式
 *@uri /account/binding/weibo
 *@method GET
 *@cookie token&uuid
 *@param wbuid 微信ID
 *@param wname 微信名称
 *@param wheadimgurl 微信头像路径
 *@param wgender 性别
 *@param wweihao 微信号
 *@return 成功返回PbResult(No_Error)，失败返回PbResult
 */
 
/*
 *@note 绑定google登录方式
 *@uri /account/binding/google
 *@method GET
 *@cookie token&uuid
 *@param code 授权临时票据(authorization code)
 *@param token 登陆验证数据(id token)
 *@return 成功返回PbResult(No_Error)，失败返回PbResult
 */
 
/*
 *@note 绑定facebook登录方式
 *@uri /account/binding/facebook
 *@method GET
 *@cookie token&uuid
 *@param token Facebook User access token
 *@return 成功返回PbResult(No_Error)，失败返回PbResult
 */

/*
 *@note 获取带签名的文件上传URL
 *@uri /account/user/imageurl
 *@method POST
 *@cookie token&uuid
 *@digest 要上传的文件的md5 hexstring
 *@length 文件大小，字节
 *@extension 扩展名 如jpg,png,gif,bmp,mp3,apk等
 *@return 成功返回PUpload，失败返回PResult
 */

/*
 *@note 修改用户头像
 *@uri /account/user/headimage
 *@method post
 *@cookie token&uuid
 *@param image 要上传的头像objectkey，PUpload返回的参数
 *@return 返回PResult
 */

/*
 *@note 修改密码
 *@uri /account/user/changepwd
 *@method GET
 *@param oldpwd 旧密码
 *@param newpwd 新密码
 *@return 成功返回PbResult.Get(No_Error), 失败返回PbResult
 */

/*=====================================*/
//API V1 定义

/*
 *@note     获取用户信息
 *@path     /v1/account/users/:uuid
 *@method   GET
 *@cookie   token&uuid
 *@uriParam uuid 用户ID
 *@return   成功:PUserEx,失败:CXXResult
 */

/*
 *@note     获取多个用户信息
 *@path     /v1/account/users
 *@method   GET
 *@cookie   token&uuid
 *@uriParam uuids 用户ID,要获取多个用户时用","分隔,如"/v1/account/users?uuids=1,2,3"
 *@return   成功:PUserListEx,失败:CXXResult
 */

/*
 *@note      通过Json设置用户信息
 *@path      /v1/account/user.json
 *@method    POST
 *@cookie    token&uuid
 *@postParam json 用户信息
 *@return    CXXResult
 *@
 *@ common.PUserEx JSON 格式说明:
 *@ {
       	"project":    "project",
       	"nickname":   "nickname",
       	"realname":   "realname",
       	"gender":     "gender",
       	"birthday":   "birthday",
       	"email":      "email",
       	"cellphone":  "cellphone",
       	"timeZone":   "timeZone",
       	"headImgURL": "headImgURL",
       	"locale":     "locale",
       	"resume":     "resume",
		"userData":
		{
			"x1":"x1_data",
			"x2":"x2_data"
		}
	}
 */

/*
 *@note      通过Proto设置用户信息
 *@path      /v1/account/user.proto
 *@method    POST
 *@cookie    token&uuid
 *@uriParam  fields  字段ID,只设置某个字段，通过","分隔,如"/v1/account/fields?uuids=1,2,3"
 *@postParam PUserEx 用户信息
 *@return    CXXResult
 */

/*
 *@note      注册用户
 *@path      /v1/register
 *@method    POST
 *@cookie    token&uuid
 *@postParam PUserEx 用户信息
 *@return    CXXResult
 */