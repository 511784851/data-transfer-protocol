syntax = "proto3";
package common;
option java_package = "com.blemobi.demo.probuf";
option java_outer_classname = "PlatformProtos";

//列出所有服务的状态（开启的还是关闭的）
 message PServiceStatus {
 	map<string,PService> status = 1; 
 }
 
 //每个服务的状态
 message PService {
	bool status = 1;
	bool canDo = 2; //能否被操作
 }

/*********微博***********/

//被举报人列表
message PReportNewsList {
	repeated PReportNews list = 1;
}

//被举报人的信息
message PReportNews {
	int64 ID = 1; 
	repeated PInformer informers = 2; 	//举报人
	string tuid = 3; 					//被举报人
	int64 postid = 4; 					//被举报的帖子
	int64 isProcess = 5; 				//是否已经处理（没有处理为0，否则为处理的时间）
}

/*********用户***********/

//被举报人列表
message PReportUserList {
	repeated PReportUser list = 1;
}

//被举报人的信息
message PReportUser {
	int64 ID = 1;
	repeated PInformer informers = 2; 	//举报人列表
	string uuid = 3; 					//被举报人
	string content = 4; 				//举报内容
	int64 isProcess = 5; 				//是否已经处理（没有处理为0，否则为处理的时间）
}

/*********社区用户***********/

message PReportCommunityUserList {
	repeated PReportCommunityUser list = 1;
}

//社区Id，用户Uuid,举报的原因
message PReportCommunityUser {
	int64 ID = 1; 
	repeated PInformer informers = 2; //举报人列表
	string communityID = 3; //社区ID
	string uuid = 4; //被举报人
	string content = 5; //举报内容
	int64 isProcess = 6; //是否已经处理（没有处理为0，否则为处理的时间）
}

/*********社区帖子***********/

message PReportCommunityPostsList {
	repeated PReportCommunityPosts list = 1;
}

//社区Id,帖子Id,帖子创建者Uuid,举报的原因
message PReportCommunityPosts {
	int64 ID = 1; 
	repeated PInformer informers = 2; //举报人列表
	string communityID = 3; //社区ID
	string postsID = 4; //帖子ID
	string uuid = 5; //帖子作者
	string content = 6; //举报内容
	int64 isProcess = 7; //是否已经处理（没有处理为0，否则为处理的时间）
}

/*********社区帖子评论***********/

message PReportCommunityCommentList {
	repeated PReportCommunityComment list = 1;
}

//社区Id,帖子Id,评论Id，评论发表者Uuid,举报的原因
message PReportCommunityComment {
	int64 ID = 1; 
	repeated PInformer informers = 2; //举报人列表
	string communityID = 3; //社区ID
	string postsID = 4; //帖子ID
	string commentID = 5; //评论ID
	string uuid = 6; //评论发布者
	string content = 7; //举报内容
	int64 isProcess = 8; //是否已经处理（没有处理为0，否则为处理的时间）
}


//举报人
message PInformer {
	string uuid = 1; //举报人
	int64 time = 2; //举报时间
}

//敏感词列表
message PKeywords {
	repeated PKeyword list = 1; //敏感词列表
}

//敏感词
message PKeyword {
	int64 id = 1; 
	string work = 2;
}

//黑名单列表
message PBlacklists {
	repeated Pblacklist list = 1;
}

//黑名单
message Pblacklist {
	int32 id = 1;
	string val = 2;
	string other = 3; //如果是手机，那么这个就是手机的区号
}

/**************************API 定义***********************************/

/**
 * 举报微博
 *
 *@path /platform-manager/report/news
 *@cookie token&uuid
 *@method GET
 *@param uid 被举报人ID
 *@param id 被举报的帖子ID
 *@return PResult
 */
 
/**
 * 举报用户
 *
 *@path /platform-manager/report/user
 *@cookie token&uuid
 *@method POST
 *@param uid 被举报人ID
 *@param content 举报内容
 *@return PResult
 */
  
/**
 * 举报社区用户
 *
 *@path /platform-manager/report/community/user
 *@cookie token&uuid
 *@method POST
 *@param uid 被举报人ID
 *@param cid 被举报的社区ID
 *@param content 举报内容
 *@return PResult
 */
 
/**
 * 举报社区帖子
 *
 *@path /platform-manager/report/community/posts
 *@cookie token&uuid
 *@method POST
 *@param cid 被举报的社区ID
 *@param pid 被举报的帖子ID
 *@param uid 帖子作者ID
 *@param content 举报内容
 *@return PResult
 */
 
 /**
 * 举报社区帖子的评论
 *
 *@path /platform-manager/report/community/comment
 *@cookie token&uuid
 *@method POST
 *@param cid 被举报的社区ID
 *@param pid 被举报的帖子ID
 *@param ccid 被举报的评论ID
 *@param uid 评论作者ID
 *@param content 举报内容
 *@return PResult
 */
