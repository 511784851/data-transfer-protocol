syntax = "proto3";
package bbproto;
option java_package = "com.blemobi.sep.probuf";
option java_outer_classname = "PlatformProtos";

import "account.proto";

//列出所有服务的状态（开启的还是关闭的）
 message PServiceStatus {
 	map<string,PService> status = 1; 
 }
 
 //每个服务的状态
 message PService {
	bool status = 1;
	bool canDo = 2; //能否被操作
 }
 
 //监管登录信息
 message PPlatformLogin {
	int32 id = 1;
	string username = 2;
	string password = 3;
	string sessionID = 4;
	string IPAddr = 5; //登录者的IP地址
 }
 
 //监管的日志信息
 message PPlatformLog {
	int32 id = 1; 
	int64 userID = 2;
	int64 cTime = 3;
	string iPAddr = 4;
	string URL = 5;
	string method = 6;
	int32 errcode = 7;
	string params = 8;
 }

/*********微博***********/

//被举报人列表
message PReportNewsList {
	repeated PReportNews list = 1;
	int32 total = 2;
}

//被举报人的信息
message PReportNews {
	int64 ID = 1; 
	string UUID = 2; //举报人
	int64 postid = 3; 					//被举报的帖子
	string content = 4; 				//举报内容
	int64 isProcess = 5; 				//是否已经处理（0待处理，1已处理）
	int64 time = 6; //举报时间
	string qType = 7; //问题类型
	repeated string imgs = 8;
}

/*********用户***********/

//被举报人列表
message PReportUserList {
	repeated PReportUser list = 1;
}

//被举报人的信息
message PReportUser {
	int64 ID = 1;
	string UUID = 2; //举报人
	string targetID = 3; 					//被举报人
	string content = 4; 				//举报内容
	int64 isProcess = 5; 				//是否已经处理（0待处理，1已处理）
	int64 time = 6; //举报时间
	string qType = 7; //问题类型
	repeated string imgs = 8;
}

/*********社区用户***********/

message PReportCommunityUserList {
	repeated PReportCommunityUser list = 1;
}

//社区Id，用户Uuid,举报的原因
message PReportCommunityUser {
	int64 ID = 1; 
	repeated PInformer informers = 2; //举报人列表
	string communityID = 3; //社区ID
	string uuid = 4; //被举报人
	string content = 5; //举报内容
	int64 isProcess = 6; //是否已经处理（没有处理为0，否则为处理的时间）
}

/*********社区帖子***********/

message PReportCommunityPostsList {
	repeated PReportCommunityPosts list = 1;
}

//社区Id,帖子Id,帖子创建者Uuid,举报的原因
message PReportCommunityPosts {
	int64 ID = 1; 
	repeated PInformer informers = 2; //举报人列表
	string communityID = 3; //社区ID
	string postsID = 4; //帖子ID
	string uuid = 5; //帖子作者
	string content = 6; //举报内容
	int64 isProcess = 7; //是否已经处理（没有处理为0，否则为处理的时间）
}

/*********社区帖子评论***********/

message PReportCommunityCommentList {
	repeated PReportCommunityComment list = 1;
}

//社区Id,帖子Id,评论Id，评论发表者Uuid,举报的原因
message PReportCommunityComment {
	int64 ID = 1; 
	repeated PInformer informers = 2; //举报人列表
	string communityID = 3; //社区ID
	string postsID = 4; //帖子ID
	string commentID = 5; //评论ID
	string uuid = 6; //评论发布者
	string content = 7; //举报内容
	int64 isProcess = 8; //是否已经处理（没有处理为0，否则为处理的时间）
}


//举报人
message PInformer {
	string uuid = 1; //举报人
	int64 time = 2; //举报时间
}

/*********敏感词***********/

//敏感词列表
message PKeywords {
	repeated PKeyword list = 1; //敏感词列表
	int32 total = 2;//数据总量
}

//敏感词
message PKeyword {
	int64 id = 1; 
	string work = 2;
}

/*********黑名单***********/

//黑名单列表
message PBlacklists {
	repeated Pblacklist list = 1;
	int32 total = 2; 
}

//黑名单
message Pblacklist {
	int32 id = 1;
	string val = 2;
	string other = 3; //如果是手机，那么这个就是手机的区号
}

/*********推荐关注***********/

//推荐关注的游戏
message PRecommendGame {
	int32 id = 1;
	string name = 2; 
	string head = 3;
	string desc = 4;
}

//推荐关注的游戏的列表
message PRecommendGameList {
	repeated PRecommendGame list = 1;
}

//推荐关注的俱乐部
message PRecommendClub {
	int32 id = 1;
	string name = 2; 
	string head = 3;
	string desc = 4;
}

//推荐关注的俱乐部的列表
message PRecommendClubList {
	repeated PRecommendClub list = 1;
}

//推荐关注的名人
message PRecommendStar {
	int32 id = 1;
	string uuid = 2;
}

//推荐关注的名人的列表
message PRecommendStarList {
	repeated PRecommendStar list = 1;
}

//意见反馈列表
message PFeedbackList {
	repeated PFeedback list = 1;
}

//意见反馈
message PFeedback {
	int32 id = 1;
	string uuid = 2; //反馈人的UUID
	int64 time = 3; //反馈时间
	string content = 4; //问题描述（可以为空）
	repeated string images = 5; //问题的图片url（可以为空）
	int32 qType = 6; //问题的类型编号（PFeedbackQuestion的id属性）
	int32 mood = 7; //心情的编号（0其他，1开心，2一般，3难过）
	int32 status = 8; //处理状态
}

//意见反馈的问题类型
message PFeedbackQuestion {
	int32 id = 1; 
	string content = 2;
}

message PFeedbackQuestionList {
	int32 moodID = 1; //心情的编号（0其他，1开心，2一般，3难过）
	repeated PFeedbackQuestion questions = 2;
}

//banner图片列表
message PBannerList {
	repeated PBanner list = 1;	
}

//banner图片
message PBanner {
	int32 id = 1;
	string src = 2; //图片地址（客户端使用）
	string url = 3; //点击链接地址（客户端使用）内部链接：app://xxx/:id		外部链接：http://xxx
	string text = 4; //文字（客户端使用）
	//int32 width = 5; //图片的宽
	int64 expires = 6; //图片到期时间
	int32 state = 7; ////广告图的状态（0.禁用，1.启用）
	int64 cTime = 8; //创建时间
	//string inside = 9; //如果是内部链接，这个值有效，news表示微博，其他待定
	//PPostInfo postInfo = 10; //微博的详情
	int32 stay = 11; //广告停留时间（单位：秒）（客户端使用）
	int32 aType = 12; //广告图的类型（1.发现版块，2.精选版块，3.启动图）
}

//默认头像列表
message PDefaultHeadList {
	int32 total = 1; //数量总数
	repeated PDefaultHead list = 2; //objectkey数组
}

//默认头像
message PDefaultHead {
	int32 id = 1;
	string url = 2; //完整的url
	string oKey = 3; //objectkey
	int32 hType = 4; //图片的类型 0 女，1 男，2 其它
}

//app启动广告图
message PLaunchAD {
	int32 id = 1;
	string link = 2; //跳转的链接 
	int32 time = 3; //停留时间（单位：秒）
	int32 number = 4; //重新进入App多少次后再显示广告图
	string src = 5; //objectkey或图片路径
	int32 status = 6; //当前状态 0关闭，1开启
	int32 language = 7; //语言版本 1 简体中文，2 繁体中文，3 英文，4 韩文
}

message PLaunchADList {
	repeated PLaunchAD list = 1;
}

message PVIPPTagList {
	repeated PVIPPTag list = 1;
}

message PVIPPTag {
	int32 id = 1;
	string name = 2;
	repeated PVIPPTagItem items = 3;
}

//标签类型列表
message PVIPPTagTypeList {
	repeated PVIPPTagType list = 1;
}

//标签类型
message PVIPPTagType {
	int32 id = 1;
	string name = 2;
}

//标签项目列表
message PVIPPTagItemList {
	repeated PVIPPTagItem list = 1;
}

//标签项目
message PVIPPTagItem {
	int32 id = 1;
	int32 tid = 2;
	string img = 3;
	string name = 4;
	string src = 5;
}

//帮助信息的菜单列表
message PHelpMenuList {
	repeated PHelpMenu List = 1;
}

//帮助信息的菜单
message PHelpMenu {
	int32 ID = 1;
	int32 PID = 2;
	string Name = 3;
	bool IsLeaf = 4;
	repeated PHelpMenu Children = 5;
}
//帮助信息的内容列表
message PHelpContentList {
	repeated PHelpContent List = 1;
}

//帮助信息的内容
message PHelpContent {
	int32 ID = 1;
	string Title = 2;
	string Content = 3;
}

//帐户安全操作记录
message PAccountOperateLog {
	int32 id = 1;
	int64 cTime = 2; //创建时间
	int32 name = 3; //操作对象名称（手机、密码、微博。。。）
	string content = 4; //操作内容
	int32 operate = 5; //操作名称（修改、绑定、解绑。。。）
	string uuid = 6;
}

//帐户安全操作记录列表
message PAccountOperateLogList {
	repeated PAccountOperateLog list = 1;
	int32 total = 2;
}

/**1.6版本***开始**/

//举报
message PReportInfo {
	int32 id = 1; 
	int64 cTime = 2;  //举报时间
	string tID = 3; //举报对象ID(资讯ID,动态ID,原创录播ID等)
	string cID = 4; //社区ID
	string rType = 5; //举报类型(1.资讯帖，2.动态帖，3.原创录播）
	string content = 6; //举报内容
	string rID = 7; //举报人UUID（app端不需要填）
	int32 state = 8; //状态（app端不需要填）
	int32 dispose = 9; //处理结果（app端不需要填）
	string cName = 10; //社区名称
	string postContent = 11; //帖子内容
}

message PArrarInt64AndBool {
	repeated int64 list = 1;
	bool status = 2;
}



/**1.6版本***结束**/

message PRecommendUsers {
	repeated PUserBase users = 1; //推荐用户的列表
	repeated int32 fansCounts = 2; //粉丝数的列表（索引跟users的索引一一对应）
}


/**************************API 定义***********************************/

/**
 * 举报帖子
 *
 *@path /platform-manager/report/news
 *@cookie token&uuid
 *@method POST
 *@param id 被举报的帖子ID
 *@param qtype 问题类型（以下类型的ID）
	1、人身攻击
	2、色情信息
	3、违法信息
	4、垃圾营销
	5、侵权信息
	6、虚假信息
 *@return PResult
 */
 
/**
 * 举报用户
 *
 *@path /platform-manager/report/user
 *@cookie token&uuid
 *@method POST
 *@param uid 被举报人ID
 *@param qtype 问题类型
 *@return PResult
 */
  
/**
 * 举报社区用户
 *
 *@path /platform-manager/report/community/user
 *@cookie token&uuid
 *@method POST
 *@param uid 被举报人ID
 *@param cid 被举报的社区ID
 *@param content 举报内容
 *@return PResult
 */
 
/**
 * 举报社区帖子
 *
 *@path /platform-manager/report/community/posts
 *@cookie token&uuid
 *@method POST
 *@param cid 被举报的社区ID
 *@param pid 被举报的帖子ID
 *@param uid 帖子作者ID
 *@param content 举报内容
 *@return PResult
 */
 
 /**
 * 举报社区帖子的评论
 *
 *@path /platform-manager/report/community/comment
 *@cookie token&uuid
 *@method POST
 *@param cid 被举报的社区ID
 *@param pid 被举报的帖子ID
 *@param ccid 被举报的评论ID
 *@param uid 评论作者ID
 *@param content 举报内容
 *@return PResult
 */
 
/**
* 意见反馈
*
*@path /platform-manager/feedback/add
*@cookie token&uuid
*@method POST
*@param content 反馈内容（可以为空）
*@param images 图片的objkey，多个以,分隔（可以为空）
*@param qtype 问题的类型编号（PFeedbackQuestion的id属性）
*@param mood 心情的编号（0其他，1开心，2一般，3难过）
*@return PResult
*/

/**
* 意见反馈，获取某心情对应的问题类型
*
*@path /platform-manager/feedback/questions
*@cookie token&uuid
*@method GET
*@param tid 类型的编号（1意见反馈，2举报用户，3举报帖子）
*@param mid 心情的编号（0其他，1开心，2一般，3难过）
*@param lid 语言的编号（zh-cn简体中文，zh-tw繁体中文，en-us英文，ko-kr韩文）
*@return PFeedbackQuestionList
*/

/**
* 获取上传文件的状态
*
*@path /platform-manager/upload/status
*@cookie token&uuid
*@method GET
*@param digest 文件的MD5值
*@param length 文件长度
*@param ext 文件后缀
*@return PUpload(在oss.proto文件里)
*/
   
/**
 * 批量获取上传文件的状态
 *
 *@path /platform-manager/multupload/status
 *@cookie token&uuid
 *@method POST
 *@body  PFileInfoArray
 *@return 成功返回PUploadArray，失败返回PResult
 */
  
/**
* 获取图片轮播图（banner）
*
*@path /platform-manager/banner/app/list
*@cookie token&uuid
*@method GET
*@param tp 广告图的类型（1.发现版块，2.精选版块，3.启动图）
*@return 成功 PBannerList ，失败 PResult
*/


/**
* 获取多个默认的头像
*
*@path /platform-manager/default/head
*@cookie token&uuid
*@method GET
*@param count 要获取的头像的个数（默认是10）
*@return 成功 PDefaultHeadList，失败PResult
*/

/**
 * 获取推荐的社区
 *
 *@path /platform-manager/recommend/community
 *@cookie token&uuid
 *@method get
 *@return 成功 PCommunityBaseList ，失败 PResult
 */
 
 /**
 * 获取推荐的用户
 *
 *@path /platform-manager/recommend/user
 *@cookie token&uuid
 *@method get
 *@return 成功 PRecommendUsers ，失败 PResult
 */