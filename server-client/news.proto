syntax = "proto3";
package bbproto;
option java_package = "com.blemobi.sep.probuf";
option java_outer_classname = "NewsProtos";

import "account.proto";
import "result.proto";
import "community.proto";

// 帖子类型
enum EPostType {
    Text        = 0; //文字帖
    Image       = 1; //图片帖
    Audio       = 2; //语音帖
    Video       = 3; //视频帖
    Notice      = 4; //公告帖
    NewsFeed    = 5; //新闻帖
    Anonymous   = 6; //网盘服务创建的匿名帖.
}

// 创建的帖子信息
message PPostNew {
	int64           id          = 1; //帖子ID,发布帖子时不填. 编辑帖子要填
	int64           communityId = 2; //所属社区
	EPostType       type        = 3; //帖子类型 
	string          position    = 4; //发帖的地理位置,资讯、公告帖不填
	PStringList     atusers     = 5; //被@的用户列表,资讯、公告帖不填
	PResourceList   contents    = 6; //帖子正文
 }

// 用于保存的帖子结构
message PPostStore {
	PPostNew   post        = 1; //帖子内容
	string     uuid        = 2; //帖子作者
	int64      time        = 3; //创建时间
	int64      modifyTime  = 4; //编辑时间    
 }

// 帖子统计信息
message PPostStatistc {
	int64 	commentCnt  = 1;  //评论数
	int64 	collectCnt  = 2;  //收藏数
	int64 	voteCnt     = 3;  //点赞数
	int64 	shareCnt    = 4;  //分享数
	int64   viewCnt     = 5;  //阅读数
}

// 帖子状态信息
message PPostState {
	bool        isDelete            = 1; //删除状态, true:已删除;false:未删除

	bool        voted               = 3; //自己是否已点赞,true:是; false:否
	bool        collected           = 4; //自己是否已收藏,true:是; false:否
	bool        isTop               = 5; //是否置顶标志
	int64       approval            = 6; //审核状态, 0:审核通过; 1:待审核; 2:审核不通过
	
	bool        canDelete           = 8; //是否有删除权限(作者、社区创建者、管理员)
	PLabelList  labelList           = 9; //标签列表,取值参考ECommunityPostLabel
}

// 标签列表
message PLabelList {
	repeated int32 List = 1; //标签列表
}

// 微博详情列表
message PPostViewList {
	repeated PPostView list = 1; //博文列表
}

// 帖子展示信息
message PPostView {
	int64           id          = 1; //帖子ID
	EPostType       type        = 2; //帖子类型       
	string          position    = 3; //发帖的地理位置
	int64           time        = 4; //创建时间
	int64           modifyTime  = 5; //编辑时间
	int64           deleteTime  = 6; //删除时间
	PUserBase       author      = 7; //帖子作者信息
	PCommunityBase  community   = 8; //帖子所属社区,如果社区已关闭(Status字段),帖子不能评论
	PResourceList   contents    = 9;  //帖子正文
	PAtUserList     atUsers     = 10; //帖子@的用户列表
	PPostStatistc   statistc    = 11; //帖子统计信息
	PPostState      state       = 12; //帖子状态信息
	bool            IsPreView   = 13; //预览标记,仅客户端使用
 }

// 微博详情列表
message PPostInfoList {
	repeated PPostInfo list = 1; //博文列表
}

// 微博详情
message PPostInfo {
	int64 id = 1;                //博文的ID，上传时不用填
	string uuid = 2;             //博文的作者，上传时不用填
	string userName = 3;         //作者名称，上传时不用填
	string userHead = 4;         //作者头像，上传时不用填
	string content = 5;          //文章正文
	string srcType = 6;          //资源的类型（image表示上传的是图片，video表示上传的是视频，audio表示上传的是音频）
	repeated PImage images = 7;  //图片（最多九张）
	PVideo video = 8;            //视频
	PAudio audio = 9;            //音频
	int64 pubishTime = 11;       //发布时间，上传时不用填
	string position = 12;        //发帖的地理位置
	bool self = 14;              //这篇文章是查看人自己的写的，上传时不用填
	bool collected = 15;         //是否收藏此文章，上传时不用填
	int64 commentCnt = 16;       //评论数，上传时不用填
	int64 collectCnt = 17;       //收藏数，上传时不用填
	int64 voteCnt = 18;          //点赞数，上传时不用填
	bool  vote = 19;             //自己是否点赞，上传时不用填
	PAtUserList atusers = 20;    //被@的用户列表
	bool IsDelete = 21;          //帖子已经被用户删除,上传时不用填
	bool IsHide = 22;            //帖子正在被审核,上传时不用填
    int32 leveltype = 24;           //用户等级,上传时不用填
	bool IsPreView = 25;            //预览标记,上传时不用填,true表示用于预览,发布后的帖子标记是false
	PPostInfo refPost = 26;         //引用的帖子,上传时只填帖子ID
	int64 editTime = 27;            //编辑时间，上传时不用填
	int64 delTime = 28;             //删除时间，上传时不用填
	int64 RefCnt = 29;              //帖子被转发次数，上传时不用填
	PHyperLink hyperLink = 30;      //图片、文字帖可以带超链接
 }

// 被@的用户列表
message PAtUserList {
	repeated PAtUser list = 1;  
}

// 被@的用户
message PAtUser {
	string uuid = 1;             //被@的用户id
 	string nickName = 2;         //用户昵称
 	int32  level = 3;            //用户等级
}

// 图片
message PImage {
	string url = 1;              //原图url
	PImageTagList Tags = 2;//图片的热点广告 
	string thumbnail = 3;        //缩略图的url
	string des = 4;              //图片描述
}

// 视频
message PVideo {
	string url = 1;              //视频在OSS上的路径
	string img = 2;              //视频的缩略图
	repeated PVideoTag tags = 3; //视频的标签
	int64 expires = 4;           //视频的有效期（多少秒之后过期）
	int32 type = 5;              //视频类型，0：本地视频，1：第三方视频，2：长视频
}

// 音频
message PAudio {
	string url = 1;              //音频在OSS上的路径
	int32 length = 2;            //音频长度
	int64 expires = 3;           //音频的有效期（多少秒之后过期）
} 

// 超链接
message PHyperLink {
	string url = 1;              //链接地址
	string nickName = 2;         //网红昵称,客户端不用填
	string uuid = 3;             //网红用户ID
} 


//视频的标签
message PVideoTag {
	float x = 1;
	float y = 2;
	string text = 3;			//标签内容
}

message PRecommendUser {
	string uuid = 6;              //服务端标志用户的唯一id
	string username = 7;          //用户名，唯一
	string nickname = 8;          //昵称
	string headImgURL = 9;        //头像地址
	int32 gender = 10;            //性别，0就是女，其余的是男；人妖暂时不考虑
	int32 membershipLevel = 11;   //会员级别
	int32 followship = 12;        //两用户间的关系、0:无关系，1,：B关注A(A是B的粉丝)，2：A关注B，3：相互关注
	bool friend = 13;             //是否是好友，是：true
	int32 leveltype = 14;         //用户等级
}

message PFollowOrFansList {
	repeated PRecommendUser list = 1;  //关注、粉丝 列表，最多100个
	int32 index = 2;                  //下次请求的起点
}

//个人统计信息
message PPersonStatistic {
	int32 friendCnt = 1;          //朋友个数
	int32 followCnt = 2;          //follow人数
	int32 fansCnt = 3;            //fans个数
	int32 textCnt = 4;            //发表的文字帖个数
	int32 imageCnt = 5;
	int32 audioCnt = 6;
	int32 videoCnt = 7;
	string CommunityID = 8;
}

// 微博用户详情
message PNewsUserProfile {
	PUser user = 1;
	int32 followship = 2;        //两用户间的关系、0:无关系，1,：B关注A(A是B的粉丝)，2：A关注B，3：相互关注
  	bool friend = 3;             //是否是好友，是：true
}
 
// 用户关系列表
message PRelationList {
	repeated PRelation list = 1; //若干个用户关注关系
}

// 用户关系
message PRelation {
  int32 ship = 1;               //两用户间的关系、0:无关系，1,：B关注A(A是B的粉丝)，2：A关注B，3：AB相互关注
  string uuidA = 2;             //用户A
  string uuidB = 3;             //用户B
  int32 folsA = 4;              //用户A的关注数
  int32 fansA = 5;              //用户A的粉丝数
  int32 folsB = 6;              //用户B的关注数
  int32 fansB = 7;              //用户B的粉丝数
}

// 用户关注的主题
message PSubject {
  	string ID = 2;			// 主题id
	string Name = 3;		// 主题名字
	string HeadImg = 4;		// 主题头像地址
	bool IsFollowed = 5;    //是否已关注. true:已关注
	bool IsSelf = 6;        //是自己的社区.true:是
}

// 主题信息列表
message PSubjectList {
	repeated PSubject List = 2; 		//我关注的主题
}

// 主题搜索结果
message PSubjectSearchList {
	repeated PSubject MySubject = 2; 		//我关注的主题
	repeated PSubject OtherSubject = 3; 	//其他主题
}

/*
 *@note 批量传输字符串类型查询结果
 */
message PStrQueryRet {
	int32    Next = 1;		//下一次查询的起点(偏移), 为0表示遍历结束
	repeated string List = 2; //结果数组
}

/*
 *@note 用户关注的所有vo的列表，所有好友的列表
 */
message PCanAtUserList {
	PUserBaseList VOList = 1;
	PUserBaseList FriendList = 2;
}

//Timeline在Rds的存储结构
message PTimelineRdsStore {
	repeated string List = 1; //帖子ID数组
}

/*
 *@note 批量赞帖动作信息
 */
message PBetchVoteAction {
	string postId = 1;  //帖子ID
	repeated  string uuidList = 2; //点赞的uuid列表
}

// 批量判断帖子是否被用户点赞过
message PNewsVoteExist {
    int64  id = 1; //帖子ID
	repeated bool hasVote = 2;   //是否被赞过
	int32 VoteCnt = 3;      //被赞次数
}

/*
 *@note 批量关注动作信息
 */
message PBetchFollowAction {
	int32  actionType = 1; //1:关注; 0:取消关注
	string uuid = 2;  //被关注用户的uuid
	repeated  string uuidList = 3; //发起关注uuid列表
}

// 批量判断用户是否被关注
message PNewsFollowExist {
    string  uuid = 1; //用户ID
	repeated bool hasFollow = 2;   //是关注
	int32 fansCnt = 3;      //粉丝数
}

////////////////////////////////////////////////////////////////
/*
 *@note 访问获取带签名的文件上传URL
 *@path /v1/news/uploadfileurl
 *@method GET
 *@digest 要上传的文件的md5 hexstring
 *@length 文件大小，字节
 *@extension 扩展名 如jpg,png,gif,bmp,mp3,apk等
 *@return 成功返回PUpload，失败返回PResult
 */

/*
 *@note 批量获取带签名的文件上传URL。注意通过此接口获取的上传地址所上传的文件为非永久的，
 *      否则请在各自的模块里面单独实现此协议，参看comment模块
 *@note   获取多个资源文件在oss上的状态（如多个图片）
 *@path   /v1/news/uploadfileurls
 *@method POST
 *@cookie token&uuid
 *@body   PFileInfoArray
 *@return 成功返回PUploadArray，失败返回PResult
 */

/**
 *@note   删除微博
 *@path   /v1/news/post
 *@cookie token&uuid
 *@method DELETE
 *@param  postid 微博的id
 *@return 返回 PResult
 */

/**
 *@note   用户把指定微博从自己的timeline移除
 *@path   /v1/news/user/timeline
 *@cookie token&uuid
 *@method DELETE
 *@param  postid 微博的id
 *@return PResult
 */

/**
 *@note 批量收藏/取消收藏微博
 *@path /v1/news/collect
 *@cookie token&uuid
 *@method POST
 *@post form param: oper 为1时表示收藏，为0时表示取消收藏
 *@post form param: postids 微博的id,多个id用,分割
 *@return 返回 PResult
 */
 

/**
 *@note   关注/取消关注
 *@path   /v1/news/follow
 *@cookie token&uuid
 *@method POST
 *@param  oper 为1时表示添加关注，为0时表示取消关注
 *@param  uuid 关注/取消关注对象的id
 *@return 返回 PResult
 */

/**
 *@note   获取关注列表
 *@path   /v1/news/follow
 *@cookie token&uuid
 *@method GET
 *@param  uuid 被查找的用户uuid
 *@param  count 单次返回的记录条数，默认为20，最大不超过50。
 *@param  cursor 下次查询的起点，默认为0。
 *@return 成功返回 PFollowOrFansList ，失败返回 PResult
 */

/**
 *@note   获取粉丝列表
 *@path   /v1/news/fans
 *@cookie token&uuid
 *@method GET
 *@param  uuid 被查找的用户uuid
 *@param  count 单次返回的记录条数，默认为20，最大不超过50。
 *@param  cursor 下次查询的起点，默认为0。
 *@return 成功返回 PFollowOrFansList ，失败返回 PResult
 */  

/**
 *@note   查看其他用户首页
 *@path   /v1/news/user/home
 *@cookie token&uuid
 *@method GET
 *@param  uuid 被查看的用户id
 *@return 成功返回 PNewsUserProfile ，失败返回 PResult
 */

/**
 *@note   查看用户个人的统计信息
 *@path   /v1/news/user/statistic
 *@cookie token&uuid
 *@method GET
 *@param  uuid 被查看的用户id
 *@return 成功返回 PPersonStatistic ，失败返回 PResult
 */

/**
 *@note   用户行为统计
 *@path   /v1/news/behavior
 *@cookie token&uuid
 *@method GET
 *@param  type 1、"view": 查看帖子；2、"share":分享帖子
 *@param  uid 帖子发布者id
 *@param  pid 帖子 id
 *@return PResult  全部返回No_Error
 */

/**
 *@note   news点赞
 *@path   /v1/news/vote
 *@cookie token&uuid
 *@method GET
 *@param  uuid 发帖子的用户id
 *@param  postid 帖子id
 *@return 返回 PResult
 */


/**
 *@note   判断用户A是否关注了用户B,返回B的粉丝数
 *@path   /v1/news/follow/relation
 *@cookie token&uuid   用户A的id
 *@method GET
 *@param  uuid 用户B的id
 *@return 返回 PRelation,失败返回 PResult
 */


 /**
 *@note   获取@用户的列表
 *@path   /v1/news/at/userlist
 *@cookie token&uuid
 *@method GET
 *@return 成功返回 PCanAtUserList, 失败返回 PResult
 */


 /**
 *@note 获取用户收藏数量
 *@path /v1/news/collect/count
 *@cookie token&uuid
 *@method GET
 *@return 返回 PInt64Single
 */

 /**
 *@note 批量取消收藏微博
 *@path /v1/news/uncollect
 *@cookie token&uuid
 *@method POST
 *@param  actiontype : 可选参数,没有指定则默认为 multi.  all(取消全部)、multi(取消多个,由postids参数指定)
 *@post form param: postids 微博的id,多个id用,分割.最大500个
 *@return 返回 PResult
 */

 /**
 *@note 发布帖子(论坛帖、资讯帖、公告帖)
 *@path /v1.2/news/post
 *@cookie token&uuid
 *@method POST
 *@body PPostNew 序列化数据
 *@return 返回 PResult
 */

 /**
 *@note 编辑帖子(论坛帖、资讯帖、公告帖)
 *@path /v1.2/news/post
 *@cookie token&uuid
 *@method PUT
 *@body   PPostNew 序列化数据
 *@return 返回 PResult
 */

 /**
 *@note   用户查看社交首页
 *@path   /v1.2/news/user/timeline
 *@cookie token&uuid
 *@method GET
 *@param  offset 偏移(客户端获取的最后一个帖子id), 默认:0
 *@param  count  查询条数, 默认:10, 最大50
 *@return 成功返回 PPostViewList,失败返回 PResult
 */

 /**
 *@note   用户查看社区动态、资讯首页
 *@path   /v1.2/news/community/timeline
 *@cookie token&uuid
 *@method GET
 *@param  id     社区ID
 *@param  type    bbnews:社区动态; newsfeed:社区资讯; notice:社区公告. 默认:bbnews
 *@param  offset 偏移(客户端获取的最后一个帖子id), 默认:0
 *@param  count  查询条数, 默认:10, 最大50
 *@return 成功返回 PPostViewList,失败返回 PResult
 */

 /**
 *@note   用户查看自己在社区发布历史(动态、资讯)
 *@path   /v1.2/news/user/history
 *@cookie token&uuid
 *@method GET
 *@param  id     社区ID
 *@param  type    bbnews:社区动态; newsfeed:社区资讯. 默认:bbnews
 *@param  offset 偏移(客户端获取的最后一个帖子id), 默认:0
 *@param  count  查询条数, 默认:10, 最大50
 *@return 成功返回 PPostViewList,失败返回 PResult
 */

 /*
 *@note 置顶公告帖(最多总共置顶1条)
 *@path /v1.2/news/notice/top
 *@method PUT
 *@cookie token&uuid
 *@param oper 0:取消置顶; 1:置顶; 默认:0
 *@param id 社区id
 *@param postid 帖子id
 *@return返回 PResult
 */

 /*
 *@note 置顶资讯帖(最多总共置顶3条)
 *@path /v1.2/news/newsfeed/top
 *@method PUT
 *@cookie token&uuid
 *@param oper 0:取消置顶; 1:置顶; 默认:0
 *@param id 社区id
 *@param postid 帖子id
 *@return返回 PResult
 */

 /*
 *@note 设置帖子标签
 *@path /v1.2/news/label
 *@method PUT
 *@cookie token&uuid
 *@param oper 0:设置; 1:取消设置; 默认:0
 *@param id 社区id
 *@param postid 帖子id
 *@param label 标签 参考 ECommunityPostLabel. 2:精华, 3:电竞女神; 
 *@return返回 PResult
 */

 /*
 *@note 按标签获取社区的帖子
 *@path   /v1.2/news/label/posts
 *@method GET
 *@cookie token&uuid
 *@param id 社区id
 *@param label 标签 参考ECommunityPostLabel. 2:精华, 3:电竞女神;
 *@param offset 偏移(客户端获取的最后一个帖子id), 默认:0
 *@param count  查询条数, 默认:10, 最大50
 *@return返回 PPostViewList
 */

 /**
 *@note 个人微博主页
 *@path /v1.2/news/home
 *@method GET
 *@cookie token&uuid
 *@param uuid 要查看的用户的id
 *@param type   all:动态+资讯; bbnews:动态; newsfeed:资讯. 默认:all
 *@param offset 偏移(客户端获取的最后一个帖子id), 默认:0
 *@param count  查询条数, 默认:10, 最大50
 *@return 成功返回 PPostViewList ，失败返回 PResult
 */

 /**
 *@note   获取帖子信息
 *@path   /v1.2/news/post
 *@cookie token&uuid
 *@method GET
 *@param  postid   帖子ID
 *@return 成功返回 PPostView, 失败返回 PResult
 */

 /**
 *@note   获取收藏的微博列表
 *@path   /v1.2/news/collect
 *@cookie token&uuid
 *@method GET
 *@param  offset 以0开始，之后 offset = offset+ count 值偏移
 *@param  count 获取收藏帖子数量,最大值为50
 *@return 成功返回 PPostViewList ，失败返回 PResult
 */

/**
 *@note   获取APP首页的精选列表(筛选的资讯+动态)
 *@path   /v1.2/news/newsfeed
 *@cookie token&uuid
 *@method GET
 *@param  class  社区分类的ID, hot 的ID固定为0
 *@param  pageindex 页数偏移, 每次翻页加1,默认:0
 *@param  pagesize  每页大小, 默认10, 最大值为50
 *@return 成功返回 PPostViewList ，失败返回 PResult
 */

 /**
 *@note   搜索帖子
 *@path   /v1.2/news/search
 *@cookie token&uuid
 *@method GET
 *@param  keyword  关键字
 *@param  uuid    指定用户ID搜索.默认:空
 *@param  cid     指定社区ID搜索.默认:空
 *@param  type    all:所有类别的帖子; bbnews:动态帖; newsfeed:资讯帖; notice:公告帖.默认:all
 *@param  pageindex 页数偏移, 每次翻页加1,默认:0
 *@param  pagesize  每页大小, 默认10, 最大值为50 
 *@return 成功返回 PPostViewList ，失败返回 PResult
 */