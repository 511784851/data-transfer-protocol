syntax = "proto3";
package common;
option java_package = "com.blemobi.sep.probuf";
option java_outer_classname = "NewsProtos";

import "account.proto";
import "wallet.proto";

// 微博详情列表
message PPostInfoList {
	repeated PPostInfo list = 1; //博文列表
}

// 微博详情
message PPostInfo {
	int64 id = 1;                //博文的ID，上传时不用填
	string uuid = 2;             //博文的作者，上传时不用填
	string userName = 3;         //作者名称，上传时不用填
	string userHead = 4;         //作者头像，上传时不用填
	string content = 5;          //文章正文
	string srcType = 6;          //资源的类型（image表示上传的是图片，video表示上传的是视频，audio表示上传的是音频）
	repeated PImage images = 7;  //图片（最多九张）
	PVideo video = 8;            //视频
	PAudio audio = 9;            //音频
	int64 pubishTime = 11;       //发布时间，上传时不用填
	string position = 12;        //发帖的地理位置
	bool self = 14;              //这篇文章是查看人自己的写的，上传时不用填
	bool collected = 15;         //是否收藏此文章，上传时不用填
	int64 commentCnt = 16;       //评论数，上传时不用填
	int64 collectCnt = 17;       //收藏数，上传时不用填
	int64 voteCnt = 18;          //点赞数，上传时不用填
	bool  vote = 19;             //自己是否点赞，上传时不用填
	PAtUserList atusers = 20;   	//被@的用户列表
	bool IsDelete = 21;			//帖子已经被用户删除
	bool IsHide = 22;				//帖子正在被审核
    PRedPacketInfo RedPacket = 23;  //红包信息，上传时不用填
}

// 被@的用户列表
message PAtUserList {
	repeated PAtUser list = 1;  
}

// 被@的用户
message PAtUser {
	string uuid = 1;             //被@的用户id
 	string nickName = 2;         //用户昵称
}

// 图片
message PImage {
	string url = 1;              //原图url
	PImageTagList Tags = 2;//图片的热点广告 
	string thumbnail = 3;        //缩略图的url
	string des = 4;              //图片描述
}

// 视频
message PVideo {
	string url = 1;              //视频在OSS上的路径
	string img = 2;              //视频的缩略图
	repeated PVideoTag tags = 3; //视频的标签
	int64 expires = 4;           //视频的有效期（多少秒之后过期）
	int32 type = 5;              //视频类型，0：本地视频，1：第三方视频，2：长视频
}

// 音频
message PAudio {
	string url = 1;              //音频在OSS上的路径
	int32 length = 2;            //音频长度
	int64 expires = 3;           //音频的有效期（多少秒之后过期）
} 

// 图片的标签信息列表
message PImageTagList {
	repeated PImageTag List = 1;
}

// 图片的标签信息
message PImageTag {
	int32 Type = 1;			// 1是标签物品，2是标签人
	int32 SubType = 2;		// 标签子类型 
	float X = 3;				// 标签x坐标相对图片的位置，百分比
	float Y = 4;				// 标签y坐标相对图片的位置，百分比
	string Name = 5;			// 标签的名称
	string GoodPrice = 6;	// 物品的价格
	string GoodLink = 7;		// 物品的链接
	string PersonUuid = 8;	// 人物的uuid
	string PersonName = 9;	// 用户的名称
}

//视频的标签
message PVideoTag {
	float x = 1;
	float y = 2;
	string text = 3;			//标签内容
}

//微博红包
message PPostRedpacket {
    PPostInfo Post = 1;
    PSendRedPacket Redpacket = 2;
}

message PRecommendUser {
	string uuid = 6;              //服务端标志用户的唯一id
	string username = 7;          //用户名，唯一
	string nickname = 8;          //昵称
	string headImgURL = 9;        //头像地址
	int32 gender = 10;            //性别，0就是女，其余的是男；人妖暂时不考虑
	int32 membershipLevel = 11;   //会员级别
	int32 followship = 12;        //两用户间的关系、0:无关系，1,：是粉丝，2：已关注，3：相互关注
	bool friend = 13;             //是否是好友，是：true
}

message PFollowOrFansList {
	repeated PRecommendUser list = 1;  //关注、粉丝 列表，最多100个
	int32 index = 2;                  //下次请求的起点
}

//个人统计信息
message PPersonStatistic {
	int32 friendCnt = 1;          //朋友个数
	int32 followCnt = 2;          //follow人数
	int32 fansCnt = 3;            //fans个数
	int32 textCnt = 4;            //发表的文字帖个数
	int32 imageCnt = 5;
	int32 audioCnt = 6;
	int32 videoCnt = 7;
}

// 微博用户详情
message PNewsUserProfile {
	PUser user = 1;
	int32 followship = 2;        //两用户间的关系、0:无关系，1,：是粉丝，2：已关注，3：相互关注
  	bool friend = 3;             //是否是好友，是：true
}
 
// 用户关系列表
message PRelationList {
	repeated PRelation list = 1; //若干个用户关注关系
}

// 用户关系
message PRelation {
  int32 ship = 1;               //两用户间的关系、0:无关系，1,：A被B关注，2：A关注B，3：AB相互关注
  string uuidA = 2;             //用户A
  string uuidB = 3;             //用户B
  int32 folsA = 4;              //用户A的关注数
  int32 fansA = 5;              //用户A的粉丝数
  int32 folsB = 6;              //用户B的关注数
  int32 fansB = 7;              //用户B的粉丝数
}

////////////////////////////////////////////////////////////////
/*
 *@note 访问获取带签名的文件上传URL
 *@path /v1/news/uploadfileurl
 *@method GET
 *@digest 要上传的文件的md5 hexstring
 *@length 文件大小，字节
 *@extension 扩展名 如jpg,png,gif,bmp,mp3,apk等
 *@return 成功返回PUpload，失败返回PResult
 */

/*
 *@note 批量获取带签名的文件上传URL。注意通过此接口获取的上传地址所上传的文件为非永久的，
 *      否则请在各自的模块里面单独实现此协议，参看comment模块
 *@note   获取多个资源文件在oss上的状态（如多个图片）
 *@path   /v1/news/uploadfileurls
 *@method POST
 *@cookie token&uuid
 *@body   PFileInfoArray
 *@return 成功返回PUploadArray，失败返回PResult
 */

/**
 *@note   发布微博
 *@path   /v1/news/post
 *@cookie token&uuid
 *@method POST
 *@body   PArticle数据流images.url/video.url/audio.url 这些个url传的是pupload的objectKey
 *@return 返回 PResult
 */

/**
 *@note   发布红包微博
 *@path   /v1/news/post/redpacket
 *@cookie token&uuid
 *@method POST
 *@body PPostRedpacket 序列化二进制数据
 *@return 返回 PResult
 */

/**
 *@note   删除微博
 *@path   /v1/news/post
 *@cookie token&uuid
 *@method DELETE
 *@param  postid 微博的id
 *@return 返回 PResult
 */

/**
 *@note   用户刷新微博
 *@path   /v1/news/user/timeline
 *@cookie token&uuid
 *@method GET
 *@param  offset 帖子id偏移值（客户端获取的最后一个帖子id），初始化填0
 *@param  level 选择查看什么等级的微博列表 all，reg，vip，vipp，vo
 *@return 成功返回 PPostInfoList ，失败返回 PResult
 */

/**
 *@note   用户把指定微博从自己的timeline移除
 *@path   /v1/news/user/timeline
 *@cookie token&uuid
 *@method DELETE
 *@param  postid 微博的id
 *@return PResult
 */

/**
 *@note   游客刷新微博列表
 *@path   /v1/news/guest/timeline
 *@method GET
 *@param  offset 帖子id偏移值（客户端获取的最后一个帖子id），初始化填0
 *@param  level 选择查看什么等级的微博列表 all，reg，vip，vipp，vo
 *@return 成功返回 PPostInfoList ，失败返回 PResult
 */

/**
 *@note 批量收藏/取消收藏微博
 *@path /v1/news/collect
 *@cookie token&uuid
 *@method POST
 *@post form param: oper 为1时表示收藏，为0时表示取消收藏
 *@post form param: postids 微博的id,多个id用,分割
 *@return 返回 PResult
 */
 
/**
 *@note   获取收藏的微博列表
 *@path   /v1/news/collect
 *@cookie token&uuid
 *@method GET
 *@param  offset 一开始以0开始，之后 offset = offset+ count 值偏移
 *@param  count 获取收藏帖子数量,最大值为50
 *@param  type 要查看的文章类型 值：all, text, image, audio, video
 *@return 成功返回 PPostInfoList ，失败返回 PResult
 */

/**
 *@note   关注/取消关注
 *@path   /v1/news/follow
 *@cookie token&uuid
 *@method POST
 *@param  oper 为1时表示添加关注，为0时表示取消关注
 *@param  uuid 关注/取消关注对象的id
 *@return 返回 PResult
 */

/**
 *@note   获取关注列表
 *@path   /v1/news/follow
 *@cookie token&uuid
 *@method GET
 *@param  uuid 被查找的用户uuid
 *@param  count 单次返回的记录条数，默认为20，最大不超过50。
 *@param  cursor 下次查询的起点，默认为0。
 *@return 成功返回 PFollowOrFansList ，失败返回 PResult
 */

/**
 *@note   获取粉丝列表
 *@path   /v1/news/fans
 *@cookie token&uuid
 *@method GET
 *@param  uuid 被查找的用户uuid
 *@param  count 单次返回的记录条数，默认为20，最大不超过50。
 *@param  cursor 下次查询的起点，默认为0。
 *@return 成功返回 PFollowOrFansList ，失败返回 PResult
 */  

/**
 *@note 个人微博主页
 *@path /v1/news/home
 *@method GET
 *@cookie token&uuid
 *@param uuid 用户的id
 *@param type 要查看的文章类型 值：all, text, image, audio, video
 *@param offset 帖子id偏移值（客户端获取的最后一个帖子id），初始化填0
 *@return 成功返回 PPostInfoList ，失败返回 PResult
 */

/**
 *@note   查看其他用户首页
 *@path   /v1/news/user/home
 *@cookie token&uuid
 *@method GET
 *@param  uuid 被查看的用户id
 *@return 成功返回 PNewsUserProfile ，失败返回 PResult
 */

/**
 *@note   查看用户个人的统计信息
 *@path   /v1/news/user/statistic
 *@cookie token&uuid
 *@method GET
 *@param  uuid 被查看的用户id
 *@return 成功返回 PPersonStatistic ，失败返回 PResult
 */

/**
 *@note   news点赞
 *@path   /v1/news/vote
 *@cookie token&uuid
 *@method GET
 *@param  uuid 发帖子的用户id
 *@param  postid 帖子id
 *@return 返回 PResult
 */

/**
 *@note 获取微博文章分享地址
 *@path /v1/news/share_address
 *@method GET
 *@param  postid 帖子id
 *@return 成功返回 PStringList（0是分享地址，1是默认缩略图地址） ，失败返回 PResult
 */