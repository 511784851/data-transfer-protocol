syntax = "proto3";
package common;
option java_package = "com.blemobi.sep.probuf";
option java_outer_classname = "CommunityProtos";

import "account.proto";
import "wallet.proto";

/*=====================================*/
// 结构定义

// 社区的id信息，用于批量操作
message PCommunityID {
	repeated string ID = 2;	// 社区的全局唯一id，能用于检索社区信息
}

// 社区基础信息
message PCommunityBase {
	string ID = 2;			// 社区的全局唯一id，能用于检索社区信息
	string Name = 3;		// 社区名字
	string HeadImg = 4;		// 社区头像地址
    string Introduce = 5;   // 社区介绍
	int32 Status = 6;		// 社区状态；0社区开启状态；1社区关闭状态；
}

// 社区基础信息列表
message PCommunityBaseList {
	repeated PCommunityBase List = 2; 		// 我关注的社区
}

// 社区信息
message PCommunityInfo {
	int32 Status = 2;				// 社区状态，-1没有创建/管理社区;0社区开启状态；1社区关闭状态；
	int32 Membership = 3;			// 用户与社区的关系，-1无关系，0为拥有者，1为管理者，2为已关注
	string ID = 4;					// 社区id
	string Name = 5;				// 社区名字
	string HeadImg = 6;				// 社区头像
	string BackgroundImg = 7;		// 社区背景图
	string Introduce = 8;			// 社区介绍
	string OwnerUUID = 9;			// 社区创建者的uuid
	string OwnerName = 10;			// 社区创建者的名字
	int32 MemberCount = 11;			// 社区成员数量
	int32 ForumPostCount = 12;		// 社区论坛帖子数量
	int32 NoticePostCount = 13;		// 社区公告帖子数量
	string BottomNewsTxt = 14;		// 底部的最新资讯
	string BottomBackgroundTxt = 15;// 底部的背景介绍
	string BottomVideoTxt = 16;		// 底部的视频节目
	string ManagerList = 17; 		// 社区管理员的uuid列表,多个管理员用','分割
}

// ‘我的社区’返回的信息
message PCommunityMe {
	PCommunityInfo Info = 2;			// 我的社区信息
	PCommunityBaseList List = 3; 		// 我关注的社区，默认显示20条
}

// 社区资源信息
message PCommunityResource {
	string Type = 2;				// 资源类型，txt(文字)，img(图片)，audio(音频)，video(第三方视频)，link(url)
	string Name = 3;				// 资源名称，(img,audio)要上传oss的资源，填充objectkey；如果是txt，存文字
	string URL = 4;					// 资源地址，(img,audio)oss访问地址，或者(video,link)存储的数据
	string Size = 5;				// 资源大小，暂时只存储语音长度，单位是ms
}

// 社区资源信息列表
message PCommunityResourceList {
	repeated PCommunityResource Resource = 2;
}

// 发布帖子的信息
message PCommunityPostUpload {
	string Title = 2;							// 帖子的标题
	string SubType = 3;							// 帖子的子类型
    string BannerImg = 4;                       // 公告帖子的轮播图
	PCommunityResourceList ResourcesList = 10;	// 帖子正文引用到的资源信息
}

// 发布红包帖子的信息
message PCommunityRedpacketUpload {
    PCommunityPostUpload Post = 2;
    PSendRedPacket Redpacket = 3;
}

// 帖子信息
message PCommunityPostInfo {
	string ID = 2;								// 帖子id 
	string Type = 3;							// 帖子类型，forum为论坛，notice为公告
	string SubType = 4;							// 帖子的子类型
	int64 Time = 5;								// 发布帖子的时间
	string Title = 6;							// 帖子的标题
	bool IsView = 7;							// 帖子是否被已查看
	int64 ViewCount = 8;						// 论坛帖子查看数量
	int64 CommentCount = 9;						// 论坛帖子评论数量
	PUserBase User = 10;						// 用户基础信息
	PCommunityResourceList ResourcesList = 11;	// 帖子正文引用到的资源信息
    PRedPacketInfo Redpacket = 12;              // 红包信息
    PCommunityResource BannerImg = 13;          // 公告帖子的轮播图
    bool IsTop = 14;                            // 公告帖子是否置顶的标志位
}

// 帖子信息列表
message PCommunityPostList {
	repeated PCommunityPostInfo PostInfo = 2;
}

// 帖子信息列表，包含被标旗数量
message PCommunityFlagPostList {
	repeated int32 FlagCount = 2;
	repeated PCommunityPostInfo PostInfo = 3;
}

// ‘社区首页’返回的信息
message PCommunityHome {
	PCommunityInfo Info = 2;			// 我的社区信息
	PUserBaseList List = 3; 			// 社区前五名成员列表
	PCommunityPostInfo BottomBackgroundPost = 4; // 底部的背景介绍
}

// ---评论信息
// 发表的评论
message PCommunityPostComment {
	string QuoteID = 2;	// 引用的评论id，如果没有引用帖子，传空值
	string Content = 3;	// 评论的正文
}

// 评论详情
message PCommunityCommentInfo {
	int32 Floor = 2;			// 评论的层数
	int32 UpVote = 3;		// 评论的赞的数量
	int32 DownVote = 4;		// 评论的踩的数量
	int32 Status = 5;		// -1表示已踩，1表示已赞，0表示啥都没有
	string ID = 6;			// 评论id
	int64 Time = 7;			// 发表评论的时间
	string Content = 8;		// 评论的正文
	PUserBase User = 9;		// 发表评论的用户
	PCommunityCommentInfo QuoteInfo = 10; // 引用的评论信息
	bool IsDelete = 11; // 标志帖子是否已经被删除，true为已删除，false为未删除
}

// 评论详情列表
message PCommunityCommentInfoList {
	repeated PCommunityCommentInfo List = 2;
}

// ---社区信件
// 发布的论坛信件
message PCommunityMailUpload {
	string Content = 2;							// 信件正文
	bool IsView = 3;							// 信件是否被查看
	PCommunityResourceList ResourcesList = 10;	// 信件正文引用到的资源信息
}

// 论坛信件信息
message PCommunityMailInfo {
	int64 ID = 2;								// 信件id 
	string ReplyID = 3;							// 信件回复id
	int64 Time = 4;								// 发布信件的时间
	bool IsView = 5;							// 信件是否已读标志位
	string Content = 6;							// 信件正文
	PUserBase User = 7;							// 发信用户基础信息
	PCommunityResourceList ResourcesList = 8;	// 信件引用到的资源信息
	PCommunityMailInfo ReplyInfo = 9;			// 回复的信件
}

// 论坛信件列表
message PCommunityMailList {
	int64 Unread = 2;
	repeated PCommunityMailInfo MailInfo = 3;
}

// ---社区设定
// 社区成员信息
message PCommunityMember {
	PUserBase User = 2;			// 社区成员信息
	int32 IsFriend = 3;			// A(你）关系码: 0: A --- B(A与B不是好友); 1: A --> B(A是B的单向好友); 2: A <-- B(B是A的单向好友); 3: A <-> B(A与B是好友)
	int32 IsFollow = 4;			// 0表示未关注，1表示已关注
	int32 IsManager = 5;			// 0表示非管理员，1表示是管理员
}

// 社区成员信息列表
message PCommunityMemberList {
	repeated PCommunityMember List = 2;
}

// 社区好友信息
message PCommunityFriend {
	PUserBase User = 2;				// 好友信息
	int32 Status = 3;				// 0表示未邀请，1表示已邀请
	int32 Membership = 4;			// 0表示无关系，1是创建者，2是管理者，3是已关注社区
}

// 社区好友信息列表
message PCommunityFriendList {
	repeated PCommunityFriend List = 2;
}

// 标旗内容
message PCommunityFlag {
	string FlagID = 2;			// 标旗的id
	int32 FlagType = 3;		// 标旗内容的类型，1是帖子，2是评论
	int32 FlagCount = 4;		// 被标旗次数
	int64 FlagTime = 5;		// 标旗的时间
	string PostID = 6;			// 帖子id
	string CommentID = 7;		// 评论id
	string Title = 9;			// 帖子标题
	string Content = 10;		// 帖子正文或者评论正文
}

// 标旗内容列表
message PCommunityFlagList {
	repeated PCommunityFlag List = 2;
}

// 通知内容
message PCommunityNotification {
	bool IsView = 2;		// 通知是否已读的标志位
	int32 Type = 3;			// 通知类型，0是帖子被评论，1是评论被引用，2是公告，3是私信
	int64 ID = 4;			// 通知id
	int64 Time = 5;			// 产生通知的时间
	string Content =6;		// 通知正文
	string JumpID = 7;		// 不同类型的通知跳转需要的id, 帖子id，公告id，私信id
	string JumpExID = 8;	// 不同类型的通知跳转需要的id, 评论id（评论跳转需要帖子id+评论id）
	PUserBase User = 9;		// type为0，1时传递的用户信息
}

// 通知内容列表
message PCommunityNotificationList {
	repeated PCommunityNotification List = 2;
}

// 未读通知状态
message PCommunityNotificationUnRead {
	int64 Unread = 2;
}


// 社区用户信息
message PIndiseCommunityUser {
	PUserBase User = 2;			// 用户基础信息
	int64 FollowTime = 3;		// 关注社区的时间
	int64 ForbidTime = 4; 		// 用户禁用到期时间
	int64 BeBlacklistTime = 5;	// 用户被提出社区的时间
}

// 社区用户列表信息
message PIndiseCommunityUserList {
	repeated PIndiseCommunityUser List = 2;
}

/*=====================================*/
// API定义

/*
 *@note 批量获取带签名的文件上传URL。注意通过此接口获取的上传地址所上传的文件为非永久的，
 *      否则请在各自的模块里面单独实现此协议，参看comment模块
 *@path /v1/community/uploadfileurls
 *@method POST
 *@cookie token&uuid
 *@body   PFileInfoArray
 *@return 成功返回PUploadArray，失败返回PResult
 */

//--- 社区相关操作
/*
 *@note  创建社区
 *@path /v1/community
 *@method POST
 *@body PCommunityInfo， Name,HeadImg,BackgroundImg,Introduce都不能为空
 *@cookie token&uuid
 *@return 成功返回 PCommunityMe ，失败返回 PResult
 */

/*
 *@note ‘我的社区’页面
 *@path /v1/community/me
 *@method GET
 *@cookie token&uuid
 *@return 成功返回 PCommunityMe ，失败返回PResult
 */

/*
 *@note 分页获取我关注的列表
 *@path /v1/community/me/followlist
 *@method GET
 *@url param offset 一开始以0开始，之后 offset = offset+ count 值偏移
 *@url param count 获取个数
 *@cookie token&uuid
 *@return 成功返回 PCommunityBaseList ，失败返回PResult
 */

/*
 *@note  启用/关闭社区
 *@path /v1/community
 *@url param operate 'open'为打开社区,'close'为关闭社区'
 *@url param id 社区id
 *@method GET
 *@cookie token&uuid
 *@return ‘启用社区’成功返回 PCommunityMe ，失败返回 PResult ； ‘关闭社区’返回 PResult
 */

/*
 *@note 关注/取消关注社区
 *@path /v1/community/follow
 *@method POST
 *@url param operate 'add'为添加关注，'del'为取消关注
 *@body PCommunityID 
 *@cookie token&uuid
 *@return PResult 
 */

/*
 *@note ‘社区首页’页面
 *@path /v1/community/home
 *@method GET
 *@url param id 社区id
 *@cookie token&uuid
 *@return 成功返回 PCommunityHome ，失败返回PResult
 */
	
/*
 *@note 修改‘社区首页’页面
 *@path /v1/community/home
 *@method POST
 *@url param id 社区id
 *@url param fields 要修改的选项，可选的有Name,HeadImg,BackgroundImg,Introduce,
				BottomNewsTxt,BottomBackgroundTxt,BottomVideoTxt修改多个以,分割
 *@body PCommunityInfo  
 *@cookie token&uuid
 *@return 返回 PResult
 */

/*
 *@note 发布底部背景介绍
 *@path /v1/community/bottom/background
 *@url param id 社区id
 *@method POST
 *@body PCommunityPostUpload
 *@cookie token&uuid
 *@return返回 PResult
 */

// 帖子相关操作
/*
 *@note 发布社区论坛帖子
 *@path /v1/community/post/forum
 *@url param id 社区id
 *@method POST
 *@body PCommunityPostUpload
 *@cookie token&uuid
 *@return 返回 PResult
 */

/*
 *@note 发布社区公告帖子
 *@path /v1/community/post/notice
 *@url param id 社区id
 *@url param replaceid -1表示不置顶；0表示一般置顶，当已有3个置顶公告时，移除发布最早的公告；>0表示替换置顶，值为要替换公告帖子的id，
 *@method POST
 *@body PCommunityPostUpload
 *@cookie token&uuid
 *@return返回 PResult
 */

/*
 *@note 发布社区红包帖子
 *@path /v1/community/post/redpacket
 *@url param id 社区id
 *@method POST
 *@body PCommunityRedpacketUpload
 *@cookie token&uuid
 *@return返回 PResult
 */

/*
 *@note 修改公告帖子内容，并选择是否置顶发布
 *@path /v1/community/post/notice
 *@url param id 社区id
 *@url param postid 帖子id
 *@url param replaceid -1表示不置顶；0表示一般置顶，当已有3个置顶公告时，移除发布最早的公告；>0表示替换置顶，值为要替换公告帖子的id，
 *@method PUT
 *@body PCommunityPostUpload
 *@cookie token&uuid
 *@return返回 PResult
 */

/*
 *@note 修改置顶公告
 *@path /v1/community/post/top_notice
 *@url param id 社区id
 *@url param oper 0 为取消置顶，1 为置顶
 *@url param postid 帖子id
 *@url param replaceid 0表示一般置顶，当已有3个置顶公告时，移除发布最早的公告；>0表示替换置顶，值为要替换公告帖子的id，
 *@method GET
 *@cookie token&uuid
 *@return返回 PResult
 */

/*
 *@note 已置顶公告再次置顶
 *@path /v1/community/post/toppest
 *@url param id 社区id
 *@url param postid 帖子id
 *@method GET
 *@cookie token&uuid
 *@return返回 PResult
 */

/*
 *@note 获取社区指定id的帖子
 *@path /v1/community/post
 *@method GET
 *@url param id 社区id
 *@url param type id
 *@url param offset 贴子id
 *@cookie token&uuid
 *@return 成功返回 PCommunityPostList ， 失败返回 PResult
 */

/*
 *@note 分页获取社区帖子
 *@path /v1/community/post
 *@method GET
 *@url param id 社区id
 *@url param type 获取帖子类型， forum 获取论坛帖子
 *@ 							notice 获取公告帖子
 *@								all 获取所有帖子，可用于社区首页刷新帖子
 *@url param sub_type 自定义类型标签的id
 *@url param offset 上一次分页最后一条帖子的id，如果是第一页则传-1
 *@url param count 获取帖子个数 
 *@cookie token&uuid
 *@return 成功返回 PCommunityPostList ， 失败返回 PResult
 */

/*
 *@note 删除社区帖子
 *@path /v1/community/post
 *@method DELETE
 *@url param id 社区id
 *@url param postid 删除的公告/帖子的postid，多个id以,分割
 *@cookie token&uuid
 *@return 返回 PResult
 */

/*
 *@note 标志社区帖子为已查看
 *@path /v1/community/post/viewing
 *@method GET
 *@url param id 社区id
 *@url param postid 帖子id
 *@cookie token&uuid
 *@return 返回 PResult
 */

/*
 *@note 获取评论列表
 *@path /v1/community/comment
 *@method GET
 *@url param id 社区id
 *@url param postid 帖子id
 *@url param order 时间正序填0，点赞排序填1
 *@url param direct 1为下一页，-1为上一页 (只在order=0时生效，order=1时，direct只能为1)
 *@url param offset 偏移值，direct=1时，填当前页最后一条评论的id，填-1表示获取第一页评论信息；
						  	direct=-1时，填当前页第一条评论的id，填-1表示获取最后一页评论信息；
 *@url param count 获取评论的个数
 *@cookie token&uuid
 *@return 成功返回 PCommunityCommentInfoList ， 失败返回 PResult
 */

/*
 *@note 删除评论
 *@path /v1/community/comment
 *@method DELETE
 *@url param id 社区id
 *@url param commentid 评论id
 *@cookie token&uuid
 *@return 返回 PResult
 */

/*
 *@note 获取评论列表
 *@path /v1/community/comment/vip
 *@method GET
 *@url param id 社区id
 *@url param postid 帖子id
 *@url param direct prev 为之前一条vip评论，next 为下一条vip评论，last 为最后一条vip评论
 *@url param offset 偏移值，评论id，依次评论为偏移值查找vip评论，如果没有查找到，返回PResult
 *@url param count 获取评论的个数
 *@cookie token&uuid
 *@return 成功返回 PCommunityCommentInfoList ， 失败返回 PResult
 */

/*
 *@note 获取评论列表，通过评论id定位
 *@path /v1/community/comment/id
 *@method GET
 *@url param id 社区id
 *@url param postid 帖子id
 *@url param commentid 开始加载评论的id
 *@url param count 获取评论的个数
 *@cookie token&uuid
 *@return 成功返回 PCommunityCommentInfoList ， 失败返回 PResult
 */

/*
 *@note 评论社区帖子
 *@path /v1/community/comment
 *@method POST
 *@url param id 社区id
 *@url param postid 帖子id
 *@body PCommunityPostComment
 *@cookie token&uuid
 *@return 返回 PResult
 */

/*
 *@note 对评论进行赞/踩
 *@path /v1/community/comment/vote
 *@method GET
 *@url param id 社区id
 *@url param postid 帖子id
 *@url param commentid 评论id
 *@url param type 赞为0，踩为1
 *@cookie token&uuid
 *@return 返回 PResult
 */


// --- 社区设定
/*
 *@note 设置-成员列表
 *@path /v1/community/setting/member
 *@method GET
 *@url param id 社区id
 *@url param offset 一开始以0开始，之后 offset = offset+ count 值偏移
 *@url param count 获取成员个数
 *@cookie token&uuid
 *@return 成功返回 PCommunityMemberList ，失败返回 PResult
 */

/*
 *@note 查看用户发布的所有帖子信息
 *@path /v1/community/setting/post
 *@method GET
 *@url param id 社区id
 *@url param uuid 被查看的用户uuid
 *@url param offset 论坛帖子的贴子id（填上一次获取的最后一个帖子id，-1代表从最新的帖子加载）
 *@url param count 获取帖子个数
 *@cookie token&uuid
 *@return 成功返回 PCommunityPostList ，失败返回 PResult
 */

/*
 *@note 设置-好友列表
 *@path /v1/community/setting/friend
 *@method GET
 *@url param id 社区id
 *@url param offset 一开始以0开始，之后 offset = offset+ count 值偏移
 *@url param count 获取好友个数
 *@cookie token&uuid
 *@return 成功返回 PCommunityFriendList ，失败返回 PResult
 */

/*
 *@note 设置-邀请好友
 *@path /v1/community/setting/invite
 *@method GET
 *@url param id 社区id
 *@url param uuid 邀请的好友uuid
 *@cookie token&uuid
 *@return 返回 PResult
 */

/*
 *@note 设置-添加/删除管理员
 *@path /v1/community/setting/admin/manager
 *@method GET
 *@url param id 社区id
 *@url param operate add为添加，del为删除
 *@url param uuid 要添加为管理员的用户uuid
 *@cookie token&uuid
 *@return 返回 PResult
 */

/*
 *@note 设置-论坛信件-获取
 *@path /v1/community/setting/mail
 *@method GET
 *@url param id 社区id
 *@url param type 0表示所有信件，1表示已回复信件
 *@url param offset -1表示从头获取，否则填充最后一个信件id
 *@url param count 表示获取个数
 *@cookie token&uuid
 *@return 成功返回 PCommunityMailList ，失败返回 PResult
 */

/*
 *@note 设置-联系论坛-发送
 *@path /v1/community/setting/mail
 *@method POST
 *@url param id 社区id
 *body PCommunityMailUpload
 *@cookie token&uuid
 *@return 返回 PResult
 */

/*
 *@note 设置-联系论坛-管理员删除信件
 *@path /v1/community/setting/admin/mail
 *@method DELETE
 *@url param id 社区id
 *@url param mailid 要删除信件的id，多个信件id以,分割
 *@cookie token&uuid
 *@return 返回 PResult
 */

/*
 *@note 设置-论坛信件-设置已读
 *@path /v1/community/setting/mail/viewing
 *@method GET
 *@url param id 社区id
 *@url param mailid 信件的id
 *@cookie token&uuid
 *@return 返回 PResult
 */

/*
 *@note 设置-论坛信件-获取
 *@path /v1/community/setting/admin/mail
 *@method GET
 *@url param id 社区id
 *@url param offset -1表示从头获取，否则填充最后一个信件id
 *@url param count 表示获取个数
 *@cookie token&uuid
 *@return 成功返回 PCommunityMailList ，失败返回 PResult
 */

/*
 *@note 设置-论坛信件-回复
 *@path /v1/community/setting/admin/mail
 *@method POST
 *@url param id 社区id
 *@url param reply 回复信件的id
 *body PCommunityMailUpload
 *@cookie token&uuid
 *@return 返回 PResult
 */

/*
 *@note 设置-查看私信
 *@path /v1/community/setting/private/mail
 *@method GET
 *@url param id 社区id
 *@url param mailid 信件id
 *@cookie token&uuid
 *@return 成功返回 PCommunityMailInfo ，失败返回 PResult
 */

/*
 *@note 设置-管理员发送私信
 *@path /v1/community/setting/admin/private/mail
 *@method POST
 *@url param id 社区id
 *@url param uuid 接收信件用户的uuid
 *body PCommunityMailUpload
 *@cookie token&uuid
 *@return 返回 PResult
 */

/*
 *@note 设置-支持-禁用/解禁用户
 *@path /v1/community/setting/admin/disableduser
 *@method POST
 *@url param id 社区id
 *@url param operate 0为解禁，1为禁用
 *@url param uuid  设置用户id
 *@url param time 禁用时长,单位分钟,永久禁用填-1
 *@cookie token&uuid
 *@return 返回 PResult
 */

/*
 *@note 设置-支持-禁用用户列表
 *@path /v1/community/setting/admin/disableduser
 *@method GET
 *@url param id 社区id
 *@url param offset 一开始以0开始，之后 offset = offset+ count 值偏移
 *@url param count 获取个数
 *@cookie token&uuid
 *@return 成功返回 PUserBaseList ，失败返回 PResult
 */

/*
 *@note 设置-支持-踢出/解除踢出社区
 *@path /v1/community/setting/admin/blacklist
 *@method POST
 *@url param id 社区id
 *@url param operate 0为解除踢出社区，1为踢出社区
 *@url param uuid  设置用户id
 *@cookie token&uuid
 *@return 返回 PResult
 */

/*
 *@note 设置-支持-踢出社区用户列表
 *@path /v1/community/setting/admin/blacklist
 *@method GET
 *@url param id 社区id
 *@url param offset 一开始以0开始，之后 offset = offset+ count 值偏移
 *@url param count 获取个数
 *@cookie token&uuid
 *@return 成功返回 PUserBaseList ，失败返回 PResult
 */

/*
 *@note 标旗帖子
 *@path /v1/community/flag/post
 *@method GET
 *@url param id 社区id
 *@url param postid 帖子id
 *@cookie token&uuid
 *@return 返回 PResult
 */

/*
 *@note 标旗评论
 *@path /v1/community/flag/comment
 *@method GET
 *@url param id 社区id
 *@url param postid 帖子id
 *@url param commentid 评论id
 *@cookie token&uuid
 *@return 返回 PResult
 */

/*
 *@note 标旗用户列表
 *@path /v1/community/flag/user
 *@method GET
 *@url param id 社区id
 *@url param offset 一开始以0开始，之后 offset = offset+ count 值偏移
 *@url param count 表示获取个数
 *@cookie token&uuid
 *@return 成功返回 PUserBaseList ，失败返回 PResult 
 */

/*
 *@note 标旗内容的位置列表
 *@path /v1/community/flag/location
 *@method GET
 *@url param id 社区id
 *@url param uuid 要查看的用户uuid
 *@url param offset 一开始以0开始，之后 offset = offset+ count 值偏移
 *@url param count 表示获取个数
 *@cookie token&uuid
 *@return 成功返回 PCommunityFlagList ， 失败返回 PResult 
 */

/*
 *@note 标旗功能中查看用户帖子
 *@path /v1/community/flag/userpost
 *@method GET
 *@url param id 社区id
 *@url param uuid 要查看的用户uuid
 *@url param offset 论坛帖子的贴子id（填上一次获取的最后一个帖子id，-1代表从最新的帖子加载）
 *@url param count 获取帖子个数
 *@cookie token&uuid
 *@return 成功返回  PCommunityFlagPostList ， 失败返回 PResult 
 */
 
/*
 *@note 管理员取消帖子的标旗状态
 *@path /v1/community/flag
 *@method DELETE
 *@url param id 社区id
 *@url param uuid 要移除标旗的用户uuid
 *@url param flagid 被移除的标旗id,多个id以,分割
 *@cookie token&uuid
 *@return 返回 PResult
 */

/*
 *@note 获取用户通知列表
 *@path /v1/community/setting/notification
 *@method GET
 *@url param id 社区id
 *@url param offset 上一页的通知id，第一页填-1
 *@url param count 表示获取个数
 *@cookie token&uuid
 *@return 成功返回 PCommunityNotificationList , 失败返回 PResult
 */

/*
 *@note 删除通知信息
 *@path /v1/community/setting/notification
 *@method DELETE
 *@url param id 社区id
 *@url param notificationid 要删除的通知id，多个id以,分割
 *@cookie token&uuid
 *@return 返回 PResult
 */

/*
 *@note 用户设置通知信息状态
 *@path /v1/community/setting/notification/status
 *@method GET
 *@url param id 社区id
 *@url param view 0为设置已读，1为设置未读
 *@url param notificationid 设置已读的通知id；如果设置全部，填all；如果设置多条(50条以内)，以,分割id
 *@cookie token&uuid
 *@return 返回 PResult
 */

/*
 *@note 获取用户在社区是否有通知未读
 *@path /v1/community/setting/notification/unread
 *@method GET
 *@url param id 社区id
 *@cookie token&uuid
 *@return 成功返回 PCommunityNotificationUnRead  , 失败返回 PResult
 */

/*
 *@note 社区成员搜索
 *@path /v1/community/search/member
 *@method GET
 *@url param id 社区id
 *@url param keyword 关键词
 *@url param offset 一开始以0开始，之后 offset = offset+ count 值偏移
 *@url param count 获取数量
 *@cookie token&uuid
 *@return 成功返回 PCommunityMemberList ，失败返回 PResult
 */ 

/*
 *@note 社区帖子搜索
 *@path /v1/community/search/post
 *@method GET
 *@url param id 社区id
 *@url param type 可选参数 forum 获取论坛帖子; notice 获取公告帖子; all 获取所有帖子
 *@url param keyword 关键词
 *@url param offset 一开始以0开始，之后 offset = offset+ count 值偏移
 *@url param count 获取数量
 *@cookie token&uuid
 *@return 成功返回 PCommunityPostList ，失败返回PResult
 */ 

/*
 *@note 社区搜索
 *@path /v1/community/search/community
 *@method GET
 *@url param follow (关注的); all (所有)
 *@url param keyword 关键词
 *@url param offset 一开始以0开始，之后 offset = offset+ count 值偏移
 *@url param count 获取数量
 *@cookie token&uuid
 *@return 成功返回 PCommunityBaseList ，失败返回PResult
 */ 

// 1.2.x 社区新功能
/*=====================================*/
// 结构定义

// 社区模块定义,这里只做定义，不需要实际输出宏定义
/*
enum ECommunityModule {
    ESetting = 0;           // 设置，必选项
    EIntroduce = 1;         // 背景介绍，必选项
    ENotice = 2;            // 公告
    EMemberList = 3;        // 成员列表
    EGamerList = 4;         // 队员，只有VO有，其他没有这个模块
    EMemberDynamics = 5;    // 成员动态
    EVideoProgram = 6;      // 视频节目
    EForum = 7;             // 论坛
    EChat = 8;              // 聊天
    EPeopleNearby = 9;      // 附近
    EPhotoAlbum = 10;       // 图集
    ERanking = 11;          // 排行榜
    EStore = 12;            // 商店
}
*/

// 社区Banner资源信息
message PCommunityBannerInfo {
    bool Enable = 1;                    // true为启用，false为禁止
    string Name = 2;                    // banner的自定义名字
    PCommunityResource ImgRes = 3;      // banner的图片资源信息；
    PCommunityResource LinkRes = 4;     // banner链接信息，空(无链接)；非空时，type可选的有：url(链接地址)； post(帖子id)； notice(公告id)；对应信息保存在URL字段
}

// 社区Banner资源信息列表
message PCommunityBannerInfoList {
	repeated PCommunityBannerInfo List = 1;
}

// 用户的自定义标签类型
message PCommunityUserDefined {
    int32 TypeID = 1;           // 类型id
    string TypeName = 2;        // 用户自定义的名字
}

// 论坛帖子的自定义标签类型列表
message PCommunityUserDefinedList {
	repeated PCommunityUserDefined List = 1;
}

// 社区成员的布局方案1
// ForumSubTypeList 中id的默认值为：0是‘全部’；1是‘官方’；2是‘精华’；3是‘电竞女神’
message PCommunityLayout_Plan1 {
    int32 Color = 1;                                    // 方案1的配色
    int32 MemberCount = 2;                              // 社区成员数量
    int32 ContentType = 3;                              // 内容模块id; -1 为公告; >= 0 为论坛可选模块的id
    PUserBaseList TopUserList = 4;                      // top成员列表
    PCommunityBannerInfoList BannerList = 5;            // banner列表
    PCommunityUserDefinedList MiddleModules = 6;        // 中间定义的功能模块列表,多个模块以','分割
    PCommunityUserDefinedList BottomModules = 7;        // 底部定义的功能模块列表,多个模块以','分割
    PCommunityUserDefinedList ForumSubTypeList = 8;     // 论坛帖子的自定义标签类型列表
}

// 社区成员的布局
message PCommunityLayout {
    int32 PlanID = 1;                                   // 布局方案id
    PCommunityLayout_Plan1 Plan1 = 2;                   // 方案1的布局
}

// 社区信息 v1.2.x
message PCommunityInfo_1_2_x {
    PCommunityBase BaseInfo = 1;                        // 社区基础信息
    PCommunityLayout MemberLayout = 2;                  // 社区成员的布局
}

// ‘社区首页’返回的信息 v1.2.x
message PCommunityHome_1_2_x {
    int32 Membership = 1;                               // 用户与社区的关系，-1无关系，0为拥有者，1为管理者，2为已关注
    string Advertisement = 2;                           // 监管后台设置的广告
    string ManagerUserID = 3;                           // 社区管理员的uuid列表,多个管理员用','分割    
    PUserBase Owner = 4;                                // 社区创建者的信息
    PCommunityInfo_1_2_x CommunityInfo = 5;             // 社区信息
	PCommunityPostInfo BackgroundPost = 6;              // 底部的背景介绍
}

// 图集里面图片的信息
message PCommunityPhotoAlbum {
    int64 Time = 1;         // 添加到图集的时间
    string URL = 2;         // 图片的访问地址
}

// 图集里面图片的信息列表
message PCommunityPhotoAlbumList {
    repeated PCommunityPhotoAlbum List = 1;             // 图集列表
}

// 按照日期排列的图集里面图片的信息列表
message PCommunityPhotoAlbumDateList {
    repeated int64 DateTime = 1;                        // 日期的时间戳
    repeated PCommunityPhotoAlbumList List = 2;         // 图集列表
}

// 声望用户信息 
message PCommunityReputationUser {
    PUserBase User = 1;                                 // 用户基础信息 
    int32 ReputationVal = 2;                            // 声望值，/v1.2/community/ranking api中传递的offset值
}

// 声望用户信息 
message PCommunityRankingUser {
    PCommunityReputationUser ReputationUser = 1;        // 声望用户信息 
}

// 声望用户信息列表
message PCommunityRankingUserList {
    repeated PCommunityRankingUser List = 1;         // 列表
}

/*=====================================*/
// API定义


/*
 *@note  创建社区
 *@path /v1.2/community
 *@method POST
 *@body PCommunityInfo_1_2_x
 *@cookie token&uuid
 *@return 成功返回 PCommunityMe ，失败返回 PResult
 */
 
/*
 *@note  修改社区
 *@path /v1.2/community
 *@method PUT
 *@url param id 社区id
 *@url param plan_id 布局方案id 
 *@url param fields 要修改的选项，
        方案1的可选的有:
        Name,HeadImg,Introduce,Color,BannerList,MiddleModules,BottomModules,修改多个以,分割
 *@body PCommunityInfo_1_2_x
 *@cookie token&uuid
 *@return 返回 PResult
 */
 
/*
 *@note  增加banner
 *@path /v1.2/community/banner
 *@method POST
 *@url param id 社区id
 *@body PCommunityBannerInfo
 *@cookie token&uuid
 *@return 成功返回 PCommunityBannerInfoList , 失败返回 PResult
 */
 
/*
 *@note ‘社区首页’页面
 *@path /v1.2/community/home
 *@method GET
 *@url param id 社区id
 *@cookie token&uuid
 *@return 成功返回 PCommunityHome_1_2_x ，失败返回PResult
 */
 
/*
 *@note  获取社区的图集列表
 *@path /v1.2/community/photoalbum/date
 *@method GET
 *@url param id 社区id
 *@url param type 图集的分类；与论坛帖子的自定义标签类型列表一致
 *@url param date 时间戳，表示从那一天的时间开始查询，需要是0点的时间戳；比如2016年11月30日，要传 1480435200
 *@url param count 要获取的分页数，表示从date开始查询多少天的图集列表；默认传5，最大不能超过20
 *@cookie token&uuid
 *@return 成功返回 PCommunityPhotoAlbumDateList ，失败返回 PResult
 */
 
/*
 *@note  获取社区的图集列表
 *@path /v1.2/community/photoalbum/list
 *@method GET
 *@url param id 社区id
 *@url param type 图集的分类；与论坛帖子的自定义标签类型列表一致
 *@url param offset 传已有的图片数量的个数，如已刷新图片100张，则传100
 *@url param count 要获取的分页数，表示从time开始查询多少张图集；默认传12，最大不能超过48
 *@cookie token&uuid
 *@return 成功返回 PCommunityPhotoAlbumList ，失败返回 PResult
 */
 
/*
 *@note  获取社区的排行榜
 *@path /v1.2/community/ranking
 *@method GET
 *@url param id 社区id
 *@url param type 排行榜类型， reputation 代表排行榜
 *@url param offset 获取排行版的偏移值；初始值传0，否则传最后一个榜单的分值
 *@url param count 要获取的分页数，默认传20
 *@cookie token&uuid
 *@return 成功返回 PCommunityPhotoAlbumList ，失败返回 PResult
 */
 