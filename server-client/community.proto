syntax = "proto3";
package bbproto;
option java_package = "com.blemobi.sep.probuf";
option java_outer_classname = "CommunityProtos";

import "account.proto";
import "result.proto";

/*=====================================*/
// 结构定义

// 社区的id信息，用于批量操作
message PCommunityID {
	repeated string ID = 2;	// 社区的全局唯一id，能用于检索社区信息
}

// 社区基础信息
message PCommunityBase {
	int64 CreateTime = 1; 						// 社区创建时间
	string ID = 2;                              // 社区的全局唯一id，能用于检索社区信息
	string Name = 3;                            // 社区名字
	string HeadImg = 4;                         // 社区头像地址
	string Owner = 5;							// 社区创建者uuid
	int32 Status = 6;                           // 社区状态；0社区开启状态；1社区关闭状态；
	int32 Membership = 7;					  	// 用户与社区的关系，-1无关系，0为拥有者，1为管理者，2为已关注
	string StrIntroduce = 8;					// 节选社区介绍的第一段文字返回给客户端
    PCommunitySortList SortList = 9;			// 社区分类列表
}

// 社区基础信息列表
message PCommunityBaseList {
	repeated PCommunityBase List = 2; 		// 我关注的社区
}

// 社区资源信息
message PCommunityResource {
	string Type = 2;				// 资源类型，txt(文字)，img(图片)，audio(音频)，video(第三方视频)，link(url)
	string Name = 3;				// 资源名称，(img,audio)要上传oss的资源，填充objectkey；如果是txt，存文字
	string URL = 4;					// 资源地址，(img,audio)oss访问地址，或者(video,link)存储的数据
	string Size = 5;				// 资源大小，暂时只存储语音长度，单位是ms
}

// 社区资源信息列表
message PCommunityResourceList {
	repeated PCommunityResource Resource = 2;
}

// ---社区信件
// 发布的论坛信件
message PCommunityMailUpload {
	string Content = 2;							// 信件正文
	bool IsView = 3;							// 信件是否被查看
	PCommunityResourceList ResourcesList = 10;	// 信件正文引用到的资源信息
}

// 论坛信件信息
message PCommunityMailInfo {
	int64 ID = 2;								// 信件id 
	string ReplyID = 3;							// 信件回复id
	int64 Time = 4;								// 发布信件的时间
	bool IsView = 5;							// 信件是否已读标志位
	string Content = 6;							// 信件正文
	PUserBase User = 7;							// 发信用户基础信息
	PCommunityResourceList ResourcesList = 8;	// 信件引用到的资源信息
	PCommunityMailInfo ReplyInfo = 9;			// 回复的信件
}

// 论坛信件列表
message PCommunityMailList {
	int64 Unread = 2;
	repeated PCommunityMailInfo MailInfo = 3;
}

// ---社区设定
// 社区成员信息
message PCommunityMember {
	PUserBase User = 2;			// 社区成员信息
	int32 IsFriend = 3;			// A(你）关系码: 0: A --- B(A与B不是好友); 1: A --> B(A是B的单向好友); 2: A <-- B(B是A的单向好友); 3: A <-> B(A与B是好友)
	int32 IsFollow = 4;			// 0表示未关注，1表示已关注
	int32 IsManager = 5;			// 0表示非管理员，1表示是管理员
}

// 社区成员信息列表
message PCommunityMemberList {
    int32 Count = 1;	                    // 社区成员总数，在第一次调用时返回
    repeated PCommunityMember List = 2;     // 社区成员列表
}

// 社区好友信息
message PCommunityFriend {
	PUserBase User = 2;				// 好友信息
	int32 Status = 3;				// 0表示未邀请，1表示已邀请
	int32 Membership = 4;			// 0表示无关系，1是创建者，2是管理者，3是已关注社区
}

// 社区好友信息列表
message PCommunityFriendList {
	repeated PCommunityFriend List = 2;
}

// 标旗内容
message PCommunityFlag {
	string FlagID = 2;			// 标旗的id
	int32 FlagType = 3;		// 标旗内容的类型，1是帖子，2是评论
	int32 FlagCount = 4;		// 被标旗次数
	int64 FlagTime = 5;		// 标旗的时间
	string PostID = 6;			// 帖子id
	string CommentID = 7;		// 评论id
	string Title = 9;			// 帖子标题
	string Content = 10;		// 帖子正文或者评论正文
}

// 标旗内容列表
message PCommunityFlagList {
	repeated PCommunityFlag List = 2;
}

// 通知内容
message PCommunityNotification {
	bool IsView = 2;		// 通知是否已读的标志位
	int32 Type = 3;			// 通知类型，0是帖子被评论，1是评论被引用，2是公告，3是私信
	int64 ID = 4;			// 通知id
	int64 Time = 5;			// 产生通知的时间
	string Content =6;		// 通知正文
	string JumpID = 7;		// 不同类型的通知跳转需要的id, 帖子id，公告id，私信id
	string JumpExID = 8;	// 不同类型的通知跳转需要的id, 评论id（评论跳转需要帖子id+评论id）
	PUserBase User = 9;		// type为0，1时传递的用户信息
}

// 通知内容列表
message PCommunityNotificationList {
	repeated PCommunityNotification List = 2;
}

// 未读通知状态
message PCommunityNotificationUnRead {
	int64 Unread = 2;
}

// 社区用户信息
message PInsideCommunityUser {
	PUserBase User = 2;			// 用户基础信息
	int64 FollowTime = 3;		// 关注社区的时间
	int64 ForbidTime = 4; 		// 用户禁用到期时间
	int64 BeBlacklistTime = 5;	// 用户被提出社区的时间
}

// 社区用户列表信息
message PInsideCommunityUserList {
	repeated PInsideCommunityUser List = 2;
}

/*=====================================*/
// API定义

/*
 *@note 批量获取带签名的文件上传URL。注意通过此接口获取的上传地址所上传的文件为非永久的，
 *      否则请在各自的模块里面单独实现此协议，参看comment模块
 *@path /v1/community/uploadfileurls
 *@method POST
 *@cookie token&uuid
 *@body   PFileInfoArray
 *@return 成功返回PUploadArray，失败返回PResult
 */

/*
 *@note 分页获取我关注的列表
 *@path /v1/community/me/followlist
 *@method GET
 *@url param offset 一开始以0开始，之后 offset = offset+ count 值偏移
 *@url param count 获取个数
 *@cookie token&uuid
 *@return 成功返回 PCommunityBaseList ，失败返回PResult
 */

/*
 *@note  启用/关闭社区
 *@path /v1/community
 *@url param operate 'open'为打开社区,'close'为关闭社区'
 *@url param id 社区id
 *@method GET
 *@cookie token&uuid
 *@return ‘启用社区’成功返回 PCommunityIndex ，失败返回 PResult ； ‘关闭社区’返回 PResult
 */

/*
 *@note 关注/取消关注社区
 *@path /v1/community/follow
 *@method POST
 *@url param operate 'add'为添加关注，'del'为取消关注
 *@body PCommunityID 
 *@cookie token&uuid
 *@return PResult 
 */

// --- 社区设定
/*
 *@note 设置-成员列表
 *@path /v1/community/setting/member
 *@method GET
 *@url param id 社区id
 *@url param offset 一开始以0开始，之后 offset = offset+ count 值偏移
 *@url param count 获取成员个数
 *@cookie token&uuid
 *@return 成功返回 PCommunityMemberList ，失败返回 PResult
 */

/*
 *@note 设置-好友列表；VO用户调用此接口会返回空
 *@path /v1/community/setting/friend
 *@method GET
 *@url param id 社区id
 *@url param offset 一开始以0开始，之后 offset = offset+ count 值偏移
 *@url param count 获取好友个数
 *@cookie token&uuid
 *@return 成功返回 PCommunityFriendList ，失败返回 PResult
 */

/*
 *@note 设置-粉丝列表
 *@path /v1/community/setting/fans
 *@method GET
 *@url param id 社区id
 *@url param offset 一开始以0开始，之后 offset = offset+ count 值偏移
 *@url param count 获取好友个数
 *@cookie token&uuid
 *@return 成功返回 PCommunityFriendList ，失败返回 PResult
 */

/*
 *@note 设置-获取粉丝/好友列表;已经是社区成员的粉丝/好友不会出现在返回值中
 *@path /v1/community/setting/relation/list
 *@method GET
 *@url param id 社区id
 *@url param type 0表示粉丝列表；1表示好友列表
*@url param offset 一开始以0开始，之后 offset = offset+ count 值偏移
 *@url param count 获取好友个数
 *@cookie token&uuid
 *@return 成功返回 PCommunityFriendList ，失败返回 PResult
 */

/*
 *@note 设置-邀请好友
 *@path /v1/community/setting/invite
 *@method GET
 *@url param id 社区id
 *@url param uuid 邀请的好友uuid
 *@cookie token&uuid
 *@return 返回 PResult
 */

/*
 *@note 设置-添加/删除管理员
 *@path /v1/community/setting/admin/manager
 *@method GET
 *@url param id 社区id
 *@url param operate add为添加，del为删除
 *@url param uuid 要添加为管理员的用户uuid
 *@cookie token&uuid
 *@return 返回 PResult
 */

/*
 *@note 设置-论坛信件-获取
 *@path /v1/community/setting/mail
 *@method GET
 *@url param id 社区id
 *@url param type 0表示所有信件，1表示已回复信件
 *@url param offset -1表示从头获取，否则填充最后一个信件id
 *@url param count 表示获取个数
 *@cookie token&uuid
 *@return 成功返回 PCommunityMailList ，失败返回 PResult
 */

/*
 *@note 设置-联系论坛-发送
 *@path /v1/community/setting/mail
 *@method POST
 *@url param id 社区id
 *body PCommunityMailUpload
 *@cookie token&uuid
 *@return 返回 PResult
 */

/*
 *@note 设置-联系论坛-管理员删除信件
 *@path /v1/community/setting/admin/mail
 *@method DELETE
 *@url param id 社区id
 *@url param mailid 要删除信件的id，多个信件id以,分割
 *@cookie token&uuid
 *@return 返回 PResult
 */

/*
 *@note 设置-论坛信件-设置已读
 *@path /v1/community/setting/mail/viewing
 *@method GET
 *@url param id 社区id
 *@url param mailid 信件的id
 *@cookie token&uuid
 *@return 返回 PResult
 */

/*
 *@note 设置-论坛信件-获取
 *@path /v1/community/setting/admin/mail
 *@method GET
 *@url param id 社区id
 *@url param offset -1表示从头获取，否则填充最后一个信件id
 *@url param count 表示获取个数
 *@cookie token&uuid
 *@return 成功返回 PCommunityMailList ，失败返回 PResult
 */

/*
 *@note 设置-论坛信件-回复
 *@path /v1/community/setting/admin/mail
 *@method POST
 *@url param id 社区id
 *@url param reply 回复信件的id
 *body PCommunityMailUpload
 *@cookie token&uuid
 *@return 返回 PResult
 */

/*
 *@note 设置-查看私信
 *@path /v1/community/setting/private/mail
 *@method GET
 *@url param id 社区id
 *@url param mailid 信件id
 *@cookie token&uuid
 *@return 成功返回 PCommunityMailInfo ，失败返回 PResult
 */

/*
 *@note 设置-管理员发送私信
 *@path /v1/community/setting/admin/private/mail
 *@method POST
 *@url param id 社区id
 *@url param uuid 接收信件用户的uuid
 *body PCommunityMailUpload
 *@cookie token&uuid
 *@return 返回 PResult
 */

/*
 *@note 设置-支持-禁用/解禁用户
 *@path /v1/community/setting/admin/disableduser
 *@method POST
 *@url param id 社区id
 *@url param operate 0为解禁，1为禁用
 *@url param uuid  设置用户id
 *@url param time 禁用时长,单位分钟,永久禁用填-1
 *@cookie token&uuid
 *@return 返回 PResult
 */

/*
 *@note 设置-支持-禁用用户列表
 *@path /v1/community/setting/admin/disableduser
 *@method GET
 *@url param id 社区id
 *@url param offset 一开始以0开始，之后 offset = offset+ count 值偏移
 *@url param count 获取个数
 *@cookie token&uuid
 *@return 成功返回 PUserBaseList ，失败返回 PResult
 */

/*
 *@note 设置-支持-踢出/解除踢出社区
 *@path /v1/community/setting/admin/blacklist
 *@method POST
 *@url param id 社区id
 *@url param operate 0为解除踢出社区，1为踢出社区
 *@url param uuid  设置用户id
 *@cookie token&uuid
 *@return 返回 PResult
 */

/*
 *@note 设置-支持-踢出社区用户列表
 *@path /v1/community/setting/admin/blacklist
 *@method GET
 *@url param id 社区id
 *@url param offset 一开始以0开始，之后 offset = offset+ count 值偏移
 *@url param count 获取个数
 *@cookie token&uuid
 *@return 成功返回 PUserBaseList ，失败返回 PResult
 */

/*
 *@note 社区成员搜索
 *@path /v1/community/search/member
 *@method GET
 *@url param id 社区id
 *@url param keyword 关键词
 *@url param offset 一开始以0开始，之后 offset = offset+ count 值偏移
 *@url param count 获取数量
 *@cookie token&uuid
 *@return 成功返回 PCommunityMemberList ，失败返回 PResult
 */ 

/*
 *@note 社区搜索
 *@path /v1/community/search/community
 *@method GET
 *@url param follow (关注的); all (所有)
 *@url param keyword 关键词
 *@url param offset 一开始以0开始，之后 offset = offset+ count 值偏移
 *@url param count 获取数量
 *@cookie token&uuid
 *@return 成功返回 PCommunityBaseList ，失败返回PResult
 */ 

// 1.2.x 社区新功能
/*=====================================*/
// 结构定义

// 社区模块定义,这里只做定义，不需要实际输出宏定义
/*
enum ECommunityModule {
    ESetting = 0;           // 设置，必选项
    EIntroduce = 1;         // 背景介绍，必选项
    ENotice = 2;            // 公告
    EMemberList = 3;        // 成员列表
    EGamerList = 4;         // 队员，只有VO有，其他没有这个模块
    EVideoProgram = 6;      // 视频节目
    ELink = 7;              // 链接
    EForum = 8;             // 动态贴（原论坛贴）
    EChat = 9;              // 聊天
    EPeopleNearby = 10;     // 附近
    EPhotoAlbum = 11;       // 图集
    EStore = 13;            // 商店
    ENews = 14;            	// 资讯
}
*/

// 社区Banner资源信息
message PCommunityBannerInfo {
    bool Enable = 1;                                    // true为启用，false为禁止
    string Name = 2;                                    // banner的自定义名字
    PCommunityResource ImgRes = 3;                      // banner的图片资源信息；Name为oss的objectkey，URL为服务端返回的访问地址
    PCommunityResource LinkRes = 4;                     // banner链接信息，无链接是为空；有链接时，Name填：链接描述信息；type可选的有：url、post；URL填对应的值：url->完整的链接地址字段、post->动态帖子id|资讯帖子id|公告id
}

// 社区Banner资源信息列表
message PCommunityBannerInfoList {
	repeated PCommunityBannerInfo List = 1;             // banner图的顺序跟客户端编辑时顺序一致；开启的广告显示在前面，不开启的广告显示在后面
}

// 用户的自定义功能模块
message PCommunityModules {
    int32 ID = 1;                                       // 类型id
    string Name = 2;                                    // 自定义的模块名字
}

// 用户的自定义功能模块列表
message PCommunityModulesList {
	repeated PCommunityModules List = 1;
}

// 用户的自定义论坛帖子标签
message PCommunityForumTag {
    int32 ID = 1;                                       // 标签id
    string Name = 3;                                    // 自定义的标签名字
    bool Disable = 4;                                   // 是否禁用该标签 
}

// 用户的自定义论坛帖子标签列表
message PCommunityForumTagList {
	repeated PCommunityForumTag List = 1;
}

// 社区成员的布局
message PCommunityLayout {
    int32 PlanID = 1;                                   // 布局方案id；1代表模板1（1.2版本），2代表模板2（1.6版本）
    string Color = 2;                                   // 方案的配色
    PInt32List MiddleModulesID = 4;                     // 中间定义的功能模块列表
    PInt32List BottomModulesID = 5;                     // 底部定义的功能模块列表
}

// 社区信息 v1.2.x
message PCommunityInfoV12 {
    PCommunityBase BaseInfo = 1;                        // 社区基础信息
    PCommunityLayout Layout = 2;                        // 社区成员的布局
    PCommunityBannerInfo Advertisement = 3;             // 监管后台设置的广告,如果没有设置或者广告为空，则该字段为空
    PCommunityBannerInfoList BannerList = 4;            // banner列表,如果没有设置或者banner为空，则该字段为空
    PCommunityForumTagList ForumTagList = 5;            // 论坛帖子的自定义标签类型列表；图集中需要使用这个标签
    PCommunityModulesList ModulesList = 6;              // 所有的功能模块列表
   	PCommunityResourceList IntroduceRes = 7;    		// 社区介绍；图文混排,如果没有设置或者资源为空，则该字段为空
}

// ‘社区首页’返回的信息 v1.2.x
message PCommunityHomeV12 {
	int32 Status = 1;									// 社区状态，-1没有创建社区;0社区开启状态；1社区关闭状态；
    int32 Membership = 2;                               // 用户与社区的关系，-1无关系，0为拥有者，1为管理者，2为已关注
    bool IsVOMember = 3;                                // 是否创建者(VO)任命的VIPP
    int32 MemberCount = 4;                              // 社区成员数量
	string ManagerList = 5;                             // 社区管理员的uuid列表,多个管理员用','分割
    PUserBase Owner = 6;                                // 社区创建者的信息
    PUserBaseList TopUserList = 7;                      // top成员列表；创建时不需要传
    PCommunityInfoV12 CommunityInfo = 8;                // 社区信息
}

// 图集里面图片的信息
message PCommunityPhotoAlbum {
    int64 ID = 1;                                       // 图片的ID，用于索引下一张图片
    int64 Time = 2;                                     // 服务端不返回该字段
    string URL = 3;                                     // 图片的访问地址
    string ThumURL = 4;                                 // 图片缩略图的访问地址
}

// 图集里面图片的信息列表
message PCommunityPhotoAlbumList {
    repeated PCommunityPhotoAlbum List = 1;             // 图集列表
}

// 按照日期排列的图集里面图片的信息列表
message PCommunityPhotoAlbumDateList {
    repeated int64 DateTime = 1;                        // 日期的时间戳
    repeated PCommunityPhotoAlbumList List = 2;         // 图集列表
}

// 声望用户信息 
message PCommunityReputationUser {
    PUserBase User = 1;                                 // 用户基础信息 
    int32 ReputationVal = 2;                            // 声望值，/v1.2/community/ranking api中传递的offset值
}

// 声望用户信息 
message PCommunityRankingUser {
    PCommunityReputationUser ReputationUser = 1;        // 声望用户信息 
}

// 声望用户信息列表
message PCommunityRankingUserList {
    int32 MyRanking = 1;                                // 我在排行榜的位置，只在第一次获取排行榜时返回
    int32 MyRankingVal = 2;                             // 我在排行榜的分值，只在第一次获取排行榜时返回
    repeated PCommunityRankingUser List = 3;            // 列表
}

// 社区布局的配置信息
message PCommunityLayoutConfig {
	PStringList Color = 1;                              // 可选的颜色方案
}

// 声望排行榜的描述内容
message PCommunityRankingReputationDescribe {
    string Remark = 1;                                  // 备注
    repeated string Title = 10;                         // 操作
    repeated string Cycle = 11;                         // 周期
    repeated int32 Times = 12;                          // 奖励次数
    repeated int32 Val = 13;                            // 声望
}

// 排行榜的描述内容
message PCommunityRankingDescribe {
    PCommunityRankingReputationDescribe Reputation = 3;            // 声望排行榜的描述内容
}

// VO社区信息
message PCommunityInfoVO {
	int32 Status = 1;									// 社区状态，-1没有创建社区;0社区开启状态；1社区关闭状态；
	int32 MemberCount = 3;			// 社区成员数量
	int32 ForumPostCount = 4;		// 社区动态帖子数量
	int32 NewsPostCount = 5;		// 社区资讯帖子数量
    PCommunityHomeV12 Home = 6;     // 社区信息
}

/*=====================================*/
// API定义

/*
 *@note  获取社区模板的配置信息
 *@path /v1.2/community/layout/config
 *@method GET
 *@cookie token&uuid
 *@return 成功返回 PCommunityLayoutConfig ，失败返回 PResult;颜色返回的格式为0X000000
 */

/*
 *@note  创建社区
 *@path /v1.2/community
 *@method POST
 *@body PCommunityInfoV12
 *@cookie token&uuid
 *@return 成功返回 PCommunityIndex ，失败返回 PResult
 */
 
/*
 *@note  修改社区
 *@path /v1.2/community
 *@method PUT
 *@url param id 社区id
 *@url param fields 要修改的选项如：Name,HeadImg,IntroduceRes,Layout,BannerList,ModulesList,修改多个以,分割,参数对应的字段如下
 					Name -> PCommunityInfoV12.BaseInfo.Name
 					HeadImg -> PCommunityInfoV12.BaseInfo.HeadImg
 					IntroduceRes -> PCommunityInfoV12.BaseInfo.IntroduceRes
 					Layout -> PCommunityInfoV12.Layout （这个结构需要完整填充）
 					BannerList -> PCommunityInfoV12.BannerList
 					ForumTagList -> PCommunityInfoV12.ForumTagList
 					ModulesList -> PCommunityInfoV12.ModulesList
 *@body PCommunityInfoV12
 *@cookie token&uuid
 *@return 返回 PResult
 */

/*
 *@note 某个社区的‘社区首页’
 *@path /v1.2/community/home
 *@method GET
 *@url param id 社区id
 *@cookie token&uuid
 *@return 成功返回 PCommunityHomeV12 ，失败返回PResult
 */
 
/*
 *@note  获取社区的图集列表
 *@path /v1.2/community/photoalbum/date
 *@method GET
 *@url param id 社区id
 *@url param type 图集的分类；与论坛帖子的自定义标签类型列表一致
 *@url param date 时间戳，表示从那一天的时间开始查询，需要是0点的时间戳；比如2016年11月30日，要传 1480435200
 *@url param count 要获取的分页数，表示从date开始查询多少天的图集列表；默认传5，最大不能超过20
 *@url param uuid 指定用户的图集,如果为空，则取所有用户的图集
 *@cookie token&uuid
 *@return 成功返回 PCommunityPhotoAlbumDateList ，失败返回 PResult
 */
 
/*
 *@note  获取社区的图集列表
 *@path /v1.2/community/photoalbum/list
 *@method GET
 *@url param id 社区id
 *@url param type 图集的分类；与论坛帖子的自定义标签类型列表一致
 *@url param date 时间戳，表示只看某一天的图集；如果看所有时间的图集，则传0
 *@url param direction 翻页方向，-1是向前翻，1(其他)是向后翻 
 *@url param offset 传最后一个PCommunityPhotoAlbum的ID
 *@url param count 要获取的分页数，表示从time开始查询多少张图集；默认传12，最大不能超过48
 *@url param uuid 指定用户的图集,如果为空，则取所有用户的图集
 *@cookie token&uuid
 *@return 成功返回 PCommunityPhotoAlbumList ，失败返回 PResult
 */
 
/*
 *@note  获取社区的排行榜
 *@path /v1.2/community/ranking
 *@method GET
 *@url param id 社区id
 *@url param type 排行榜类型， reputation 代表排行榜
 *@url param offset 获取排行版的偏移值；初始值传0,否则传排行榜的名次(如从第38名排行用户查，则传38)
 *@url param count 要获取的分页数，默认传20
 *@cookie token&uuid
 *@return 成功返回 PCommunityRankingUserList，失败返回 PResult
 */

/*
 *@note  获取社区的排行榜的详细描述
 *@path /v1.2/community/ranking/describe
 *@method GET
 *@url param type 排行榜类型， reputation 代表排行榜
 *@url param lang "zh-cn" 中文简体；"zh-tw" 中文繁体；"en-us" English；"ko-kr" 韩文
 *@cookie token&uuid
 *@return 返回 PCommunityRankingDescribe
 */

/*
 *@note VO用户调用此接口直接获取自己社区的信息，不再调用‘我的社区’接口
 *@path /v1/community/vo
 *@method GET
 *@cookie token&uuid
 *@return 成功返回 PCommunityInfoVO，失败返回PResult
 */

/*
 *@note 获取用户关注的社区个数 
 *@path /v1.2/community/follow/count
 *@method GET
 *@cookie token&uuid
 *@return 成功 PInt64Single
 */

/*
 *@note 取消关注社区
 *@path /v1.2/community/follow
 *@method DELETE
 *@url param type all表示删除所有关注的社区, id表示删除指定id的社区
 *@url param id 要退出的社区id，多个以,分割
 *@cookie token&uuid
 *@return PResult 
 */

// 1.6.x 社区新功能
/*=====================================*/
// 结构定义

// 帖子默认标签id
enum ECommunityPostLabel {
	EPostLabelAll 	= 0; 		// 全部
	EPostLabelNews 	= 1; 		// 资讯
	EPostLabelFeatured  = 2; 	// 精华
	EPostLabelGoddess = 3; 		// 电竞女神	
}

// 我的‘社区首页’
message PCommunityIndex {
	int32 MemberCount = 1;				// 社区成员数量
	int32 ForumPostCount = 2;			// 社区动态帖子数量
	int32 NewsPostCount = 3;			// 社区资讯帖子数量
	PCommunityHomeV12 Home = 4;			// 我创建/管理的社区首页
	PCommunityBaseList Follow = 5; 		// 我关注的社区，默认显示20条
	PCommunityBaseList Recommend = 6; 	// 系统推荐的社区，默认显示20条
}

// 社区分类
message PCommunitySort {
	bool Recommend = 1;							// 已设置为推荐的标志位，监管系统使用
	int32 ID = 2;								// 分类ID
	string Name = 3;							// 分类名称
}

// 社区分类列表
message PCommunitySortList {
	string ID = 1;								// 社区ID，设置社区分类时填充；其它情况为空即可
	string UUID = 2;							// 用户ID，修改资讯页面‘我的分类’时填充；其它情况为空即可
	repeated PCommunitySort Recommend = 3;		// 固定分类
    repeated PCommunitySort Customize = 4;		// 自定义分类
}

/*=====================================*/
// API定义

/*
 *@note 我的‘社区首页’
 *@path /v1.6/community/index
 *@method GET
 *@cookie token&uuid
 *@return 成功返回 PCommunityIndex ，失败返回PResult
 */

/*
 *@note 获取监管后台设置的推荐社区分类列表
 *@path /v1.6/community/recommend/sort
 *@method GET
 *@cookie token&uuid
 *@return 成功返回 PCommunitySortList ，失败返回PResult
 */

/*
 *@note 设置社区分类；用户创建社区后，只能修改一次社区分类
 *@path /v1.6/community/sort
 *@method PUT
 *@body PCommunitySortList 其中社区ID、分类ID必填；UUID、Name 可以不填
 *@cookie token&uuid
 *@return PResult 
 */

/*
 *@note 获取首页的精选栏‘我的分类’
 *@path /v1.6/community/user/sort
 *@method GET
 *@cookie token&uuid
 *@return 成功返回 PCommunitySortList ，失败返回PResult 
 */

/*
 *@note 修改首页的精选栏‘我的分类’；Recommend + Customize 
 *@path /v1.6/community/user/sort
 *@method PUT
 *@body PCommunitySortList 其中UUID、分类ID必填；社区ID、Name 可以不填
 *@cookie token&uuid
 *@return PResult 
 */

