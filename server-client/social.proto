syntax = "proto3";
package common;
option java_package = "com.blemobi.demo.probuf";
option java_outer_classname = "SocialProtos";

import "account.proto";

message PFriendCount {
	int64 count = 1;	// 好友数量
}

// 搜索用户信息
message PSearchUser {
	bool isFriend = 1;	// 是否已经是好友
	bool isFollowing = 2;	// 是否已经申请好友
	/*保留3~6用于扩展*/
	PUser user = 7;		// 用户信息
}

// 搜索用户返回列表
message PSearchUserList {
	repeated PSearchUser searchUsers = 1;
}

/*
 *@note 获取推荐好友列表
 *@path /social/recommend
 *@method GET
 *@cookie token&uuid
 *@param count 加载多少条 query参数
 *@return 成功PUserList, 失败PResult
 */

/*
 *@note 申请好友
 *@path /social/add
 *@method POST
 *@cookie token&uuid
 *@param uuid 申请的好友ID form参数
 *@return PResult
 */

/*
 *@note 分页获取未处理的好友申请列表
 *@path /social/listfollowers
 *@method GET
 *@cookie token&uuid
 *@param start 从第几条开始加载 query参数
 *@param count 每次加载多少条 query参数
 *@return 成功PUserList, 失败PResult
 */

/*
 *@note 分页获取已申请但未接受的好友列表
 *@path /social/listfollowings
 *@method GET
 *@cookie token&uuid
 *@param start 从第几条开始加载 query参数
 *@param count 每次加载多少条 query参数
 *@return 成功PUserList, 失败PResult
 */

/*
 *@note 接受好友申请
 *@path /social/accept
 *@method POST
 *@cookie token&uuid
 *@param uuid 申请人的ID form参数
 *@return PResult
 */

/*
 *@note 拒绝好友申请
 *@path /social/refuse
 *@method POST
 *@cookie token&uuid
 *@param uuid 申请人的ID form参数
 *@return PResult
 */

/*
 *@note 取消好友申请
 *@path /social/cancel
 *@method POST
 *@cookie token&uuid
 *@param uuid 申请好友的ID form参数
 *@return PResult
 */

/*
 *@note 分页获取好友列表
 *@path /social/listfriends
 *@method GET
 *@cookie token&uuid
 *@param start 从第几条开始加载 query参数
 *@param count 每次加载多少条 query参数
 *@param level 获取特定等级好友时指定的等级(0:普通用户,1:VIP,2:VIP+,3:VO),不传该参数时返回所有等级好友
 *@return 成功PUserList, 失败PResult
 */

/*
 *@note 删除好友
 *@path /social/deletefriend
 *@method POST
 *@cookie token&uuid
 *@param uuid 要删除的好友ID
 *@return PResult
 */

/*
 *@note 拉黑好友
 *@path /social/block
 *@method POST
 *@cookie token&uuid
 *@param uuid 要拉黑的好友ID form参数
 *@return PResult
 */

/*
 *@note 分页获取共同好友
 *@path /social/common
 *@method GET
 *@cookie token&uuid
 *@param uuid 对方ID query参数
 *@param start 从第几条开始加载 query参数
 *@param count 每次加载多少条 query参数
 *@return 成功PUserList, 失败PResult
 */

/*
 *@note 获取好友数量
 *@path /social/friendcount
 *@method GET
 *@cookie token&uuid
 *@return 成功PFriendCount, 失败PResult
 */

/*
 *@note 通过关键词搜索用户
 *@path /social/searchuser
 *@method GET
 *@cookie token&uuid
 *@param key 搜索关键词 query参数
 *@return 成功PsearchUserList, 失败PResult
 */

/*
 *@note 通过关键词搜索好友
 *@path /social/searchfriend
 *@method GET
 *@cookie token&uuid
 *@param key 搜索关键词 query参数
 *@return 成功PUserList, 失败PResult
 */
