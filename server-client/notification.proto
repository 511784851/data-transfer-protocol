syntax = "proto3";
package bbproto;
option java_package = "com.blemobi.sep.probuf";
option java_outer_classname = "NotificationProtos";

import "news.proto";
import "comment.proto";
import "account.proto";
import "streaming.proto";

/*=====================================*/
//结构定义

message PNotifySetting {
	bool mute = 1;
}

// 第三方直播消息
message PStreamingMsg {
  string messageId = 1; //消息id
  PStreamingLiveList lives = 2; //直播内容
}

// 第三方直播消息列表
message PStreamingMsgList {
  repeated PStreamingMsg list = 1;
}

// 推送消息的个数
message PMsgCount {
       string Type = 2;
       int64 Count = 3;
}

// 推送消息个数列表
message PMsgCountList {
       repeated PMsgCount MsgCount = 2;
}

/*
 *@note 获取设置信息
 *@path /v1/notification/msg/setting
 *@method GET
 *@cookie token&uuid
 *@return 成功返回PSetting，失败返回PResult
 */

/*
 *@note 设置设置信息
 *@path /v1/notification/msg/setting
 *@method POST
 *@body PSetting
 *@cookie token&uuid
 *@return 返回PResult
 */

// *********** v2 ************

// 通知类型，具体的消息类型
enum ENotifyType {
    // 我的通知

    CommentNews      = 0;  // 评论帖子
    CommentComment   = 1;  // 评论评论
    CommentVote      = 2;  // 评论赞
    NewsFollow       = 3;  // 关注
    NewsVote         = 4;  // 帖子点赞
    NewsAt           = 5;  // @我
    SocialAccept     = 6;  // 接受好友申请
    CommentDownVote  = 7;  // 评论踩
    NewsCreate       = 8;  // 帖子创建（动态帖、新闻帖）
    NewsView         = 9;  // 帖子浏览N次
    NewsVoteCount    = 10; // 帖子点赞次数
    NewsCommentCount = 11; // 帖子评论次数
    OVideoCreate     = 12; // 原创录播
    CommentOVideo    = 13; // 评论原创录播
    OVideoVote       = 14; // 原创录播点赞
    OVideoView       = 15; // 原创录播浏览N次
    OVideoVoteCount  = 16; // 原创录播点赞次数

    // 系统通知

    CommunityAdminPromotion = 100; // 社区提升管理员
    MyTask                  = 101; // 我的任务（等级提升）
    MyAchievement           = 102; // 我的成就（获得成就）
    RealNameAuthSuccess     = 103; // 实名认证通过
    Streaming               = 104; // 第三方直播-正在直播
    CommunityAdminRevoke    = 105; // 社区取消管理员资格
    CommunityVippPromotion  = 106; // 社区任命VIP+
    CommunityVippRevoke     = 107; // 社区取消VIP+
    CommunityKickedOut      = 108; // 社区踢出会员
    RealNameAuthFailed      = 109; // 实名认证失败
    StreamingSoon           = 110; // 第三方直播-即将直播
    SystemMessage           = 111; // 系统消息(私信等)
    // 帖子删除、评论删除
    // 社区禁用、社区公告
    SimpleMessage           = 112; // 简单通知消息（抽奖等通知）

    SocialApply     = 200; // 好友申请
    CommunityInvite = 201; // 社区邀请

    // 任务成就

	AchievementBroadcast = 300; // 成就通知给其它人（好友或粉丝）
    TaskBroadcast        = 301; // 等级提升通知其他人 (好友或粉丝)
}

// 通知消息状态，已读/未读
enum ENotifyState {
    Unread  = 0; // 未读
    Readed  = 1; // 已读
    Deleted = 2; // 删除

    // 以下状态说明这条消息已经是已读状态（客户端判断时判断状状态大于等于1说明消息已读）

    Action1 = 3; // 动作状态（一般作为接受请求）
    Action2 = 4; // 动作状态（一般作为拒绝请求）
}

// 通知分类
enum ENotifyCategory {
    Notification       = 0; // 通知
    MyNotification     = 1; // 我的通知
    SysNotification    = 2; // 系统通知
    SocialRequest      = 3; // 好友请求
    CommunityRequest   = 4; // 社区请求
    TaskAndAchievement = 5; // 任务成就系统通知
}

// 评论帖子消息定义
message PNotifyComment {
    PPostInfo article    = 1; // 评论相关的news
    PCommentExt comment  = 2; // 评论
}

// 评论回复通知消息
message PNotifyCommentReply {
  PPostInfo   article    = 1; // 评论相关的news
  PCommentExt commentExt = 2; // 被回复的评论
  PCommentExt replyExt   = 3; // 回复的内容
}

// 好友申请通知消息
message PNotifySocial {
  // 0: 申请好友，1: 接受申请，2: 拒绝申请
  int32 state = 1;
}

// 评论投票通知消息
message PNotifyCommentVote {
  int32       type       = 1; // 1：一级评论；2：二级评论
  PPostInfo   article    = 2; // 被投票评论相关的news
  PCommentExt commentExt = 3; // 被投票的评论
}

// 帖子点赞通知信息
message PNotifyNewsVote {
  int32     type    = 1; // 0：赞；1：踩（当前只有赞）
  PPostInfo article = 2; // 帖子
}

// 帖子@我
message PNotifyNewsAt {
  PPostInfo article = 1; // 帖子
}

// 第三方直播提醒
message PNotifyStreaming {
  PStreamingLiveList lives = 1; //直播内容
}

// 社区
message PNotifyCommunity {
	string id     = 1; // 社区的id
	string name   = 2; // 社区名字
}

// 简单通知
message PNotifySimple {
    // uri携带跳转对象和对应参数信息
    // scheme://path?query_string
    //
    // 抽奖中奖用户提交更新资料:
    // payment://lottery/editrcv?uuid=xxx&lottery_id=xxx&gift_nm=xxx&rcv_nm=xxx&rcv_addr=xxx&rcv_phone=xxx&rcv_email=xxx&rcv_remark=xxx
    //
    // 抽奖发货提醒:
    // payment://lottery/shipping?lottery_id=xxx
    //
    // 社区公告
    // community://post/ann?post_id=xxx
    //
    // 评论删除
    // community://comment/delete?post_id=xxx&src_type=xxx&community_id=xxx
    string uri = 1; // 简单通知消息参数
}

// 自定义消息
message PNotifyRawMessage {
    string                  content         = 1;  // 服务端国际化(成就名称、等级名称、系统消息、简单通知消息等)

    PNotifyComment          commentNews     = 5;  // 帖子评论消息
    PNotifyCommentReply     commentReply    = 6;  // 评论的评论、评论赞/踩
    PNotifySocial           socialApply     = 7;  // 好友请求
    PNotifyCommentVote      commentVote     = 8;  // （注意：评论赞/踩使用commentReply）
    PNotifyNewsVote         newsVote        = 9;  // 帖子赞/踩
    PNotifyNewsAt           newsAt          = 10; // @我
    PNotifyStreaming        streaming       = 11; // 第三方直播提醒
    PNotifyCommunity        community       = 12; // 社区通知/社区邀请
    PNotifySimple           simple          = 13; // 简单通知，如果simple为空指针，则不进行跳转
    PPostInfo               article         = 14; // 帖子信息（帖子创建、帖子浏览、帖子评论次数、点赞次数、原创录播帖）
}

// 通知消息，服务端发送的消息和客户端收到的消息结构
message PNotifyMessage {
    ENotifyType        type     = 1;  // 消息类型
    ENotifyState       state    = 2;  // 消息状态
    int64              time     = 3;  // 消息生成时间
    string             ID       = 4;  // 消息ID
    PUserBase          from     = 5;  // 消息来源用户属性
    map<string,string> args     = 6;  // 通知参数（服务内部使用）
    bool               isFriend = 7;  // from和当前用户的关系

    // 自定义消息，20以前保留扩展

    PNotifyRawMessage content = 20; // 各服务自定义消息
}

// 通知消息列表
message PNotifyMessageList {
    repeated PNotifyMessage list = 1; // 消息列表
}

// 通知首页分类消息概要
message PNotifySummary {
    ENotifyCategory         category    = 1; // 通知分类，通知、好友请求、社区请求
    repeated PNotifyMessage messageList = 2; // 消息列表，最新收到的N消息，N具体跟需求定
}

// 通知首页分类消息列表
message PNotifySummaryList {
    repeated PNotifySummary list = 1; // 分类消息概要，客户端按照顺序显示消息概要
}

/*
 *@note 获取通知消息
 *@uri /v2/notification/messages
 *@method GET
 *@urlParam category 通知分类：1:我的通知、2:系统通知、3:好友请求、4:社区请求、5:成就
 *@urlParam offset 分页偏移值，从0开始
 *@urlParam count 获取的数量，最大值20
 *@urlParam uuid 获取uuid对应用户的数据
 *@urlParam lang 国际化语言（当前只给web使用，传zh-cn）
 *@cookie token&uuid
 *@return *PNotifyMessageList
 */

/*
 *@note 更新通知消息状态
 *@uri /v2/notification/messages
 *@method PUT
 *@urlParam state 更新状态0: 未读，1: 已读，2: 删除，3: 动作状态（接受），4: 动作状态（拒绝）
 *@urlParam uuid 获取uuid对应用户的数据
 *@body PStringList 需要更新的消息ID列表
 *@cookie token&uuid
 *@return *PResult
 */

/*
 *@note 清空某一分类下面的通知
 *@uri /v2/notification/messages
 *@method POST
 *@urlParam category 通知分类：1:我的通知、2:系统通知、3:好友请求、4:社区请求、5:任务成就
 *@urlParam uuid 获取uuid对应用户的数据
 *@cookie token&uuid
 *@return *PResult
 */

/*
 *@note 获取通知消息设置
 *@uri /v2/notification/settings
 *@method GET
 *@urlParam uuid 获取uuid对应用户的数据
 *@cookie token&uuid
 *@return *PNotifySetting
 */

/*
 *@note 设置通知消息设置
 *@uri /v2/notification/settings
 *@method POST
 *@urlParam uuid 获取uuid对应用户的数据
 *@body *PNotifySetting 通知消息设置
 *@cookie token&uuid
 *@return *PResult
 */

/*
 *@note 通知首页
 *@uri /v2/notification/home
 *@method GET
 *@urlParam uuid 获取uuid对应用户的数据
 *@cookie token&uuid
 *@return *PNotifySummaryList
 */

/*
 *@note 通知状态（是否存在未读消息，小红点）
 *@uri /v2/notification/state
 *@method GET
 *@urlParam category 如果是成就系统传5，否则不传；如果传all则返回包含所有分类的状态
 *@urlParam uuid 获取uuid对应用户的数据
 *@cookie token&uuid
 *@return *PInt32Single 0: 不存在未读消息，1: 存在未读消息
 */

/*
 *@note 未读消息数，按照分类返回
 *@uri /v2/notification/unread
 *@method GET
 *@urlParam uuid 获取uuid对应用户的数据
 *@cookie token&uuid
 *@return *PMsgCountList 分类(Type)对应未读消息总数，默认为未读数(Count)0
 */
